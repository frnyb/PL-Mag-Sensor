// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="GainFinder_GainFinder,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.192000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=38,HLS_VERSION=2020_2}" *)

module GainFinder (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        signal_top_val,
        n_samples_sat,
        n_samples,
        curr_gain,
        new_gain,
        new_gain_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] signal_top_val;
input  [10:0] n_samples_sat;
input  [10:0] n_samples;
input  [5:0] curr_gain;
output  [5:0] new_gain;
output   new_gain_ap_vld;

reg[5:0] new_gain;
reg new_gain_ap_vld;

wire   [0:0] icmp_ln886_fu_61_p2;
wire   [0:0] icmp_ln878_fu_67_p2;
wire    ap_ce_reg;

always @ (*) begin
    if ((((icmp_ln886_fu_61_p2 == 1'd1) & (ap_start == 1'b1)) | ((icmp_ln878_fu_67_p2 == 1'd1) & (icmp_ln886_fu_61_p2 == 1'd0) & (ap_start == 1'b1)))) begin
        new_gain = 6'd0;
    end else if (((icmp_ln878_fu_67_p2 == 1'd0) & (icmp_ln886_fu_61_p2 == 1'd0) & (ap_start == 1'b1))) begin
        new_gain = curr_gain;
    end else begin
        new_gain = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln886_fu_61_p2 == 1'd1) & (ap_start == 1'b1)) | ((icmp_ln878_fu_67_p2 == 1'd1) & (icmp_ln886_fu_61_p2 == 1'd0) & (ap_start == 1'b1)) | ((icmp_ln878_fu_67_p2 == 1'd0) & (icmp_ln886_fu_61_p2 == 1'd0) & (ap_start == 1'b1)))) begin
        new_gain_ap_vld = 1'b1;
    end else begin
        new_gain_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign icmp_ln878_fu_67_p2 = ((signal_top_val < 12'd2560) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_61_p2 = ((signal_top_val > 12'd3584) ? 1'b1 : 1'b0);

endmodule //GainFinder
