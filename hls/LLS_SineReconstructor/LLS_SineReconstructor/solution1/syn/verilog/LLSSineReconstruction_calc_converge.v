// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_calc_converge (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sine_reconstructor_16_1378_din,
        sine_reconstructor_16_1378_full_n,
        sine_reconstructor_16_1378_write,
        alpha_dout,
        alpha_empty_n,
        alpha_read,
        beta_dout,
        beta_empty_n,
        beta_read,
        gamma_dout,
        gamma_empty_n,
        gamma_read
);

parameter    ap_ST_fsm_state1 = 118'd1;
parameter    ap_ST_fsm_state2 = 118'd2;
parameter    ap_ST_fsm_state3 = 118'd4;
parameter    ap_ST_fsm_state4 = 118'd8;
parameter    ap_ST_fsm_state5 = 118'd16;
parameter    ap_ST_fsm_state6 = 118'd32;
parameter    ap_ST_fsm_state7 = 118'd64;
parameter    ap_ST_fsm_state8 = 118'd128;
parameter    ap_ST_fsm_state9 = 118'd256;
parameter    ap_ST_fsm_state10 = 118'd512;
parameter    ap_ST_fsm_state11 = 118'd1024;
parameter    ap_ST_fsm_state12 = 118'd2048;
parameter    ap_ST_fsm_state13 = 118'd4096;
parameter    ap_ST_fsm_state14 = 118'd8192;
parameter    ap_ST_fsm_state15 = 118'd16384;
parameter    ap_ST_fsm_state16 = 118'd32768;
parameter    ap_ST_fsm_state17 = 118'd65536;
parameter    ap_ST_fsm_state18 = 118'd131072;
parameter    ap_ST_fsm_state19 = 118'd262144;
parameter    ap_ST_fsm_state20 = 118'd524288;
parameter    ap_ST_fsm_state21 = 118'd1048576;
parameter    ap_ST_fsm_state22 = 118'd2097152;
parameter    ap_ST_fsm_state23 = 118'd4194304;
parameter    ap_ST_fsm_state24 = 118'd8388608;
parameter    ap_ST_fsm_state25 = 118'd16777216;
parameter    ap_ST_fsm_state26 = 118'd33554432;
parameter    ap_ST_fsm_state27 = 118'd67108864;
parameter    ap_ST_fsm_state28 = 118'd134217728;
parameter    ap_ST_fsm_state29 = 118'd268435456;
parameter    ap_ST_fsm_state30 = 118'd536870912;
parameter    ap_ST_fsm_state31 = 118'd1073741824;
parameter    ap_ST_fsm_state32 = 118'd2147483648;
parameter    ap_ST_fsm_state33 = 118'd4294967296;
parameter    ap_ST_fsm_state34 = 118'd8589934592;
parameter    ap_ST_fsm_state35 = 118'd17179869184;
parameter    ap_ST_fsm_state36 = 118'd34359738368;
parameter    ap_ST_fsm_state37 = 118'd68719476736;
parameter    ap_ST_fsm_state38 = 118'd137438953472;
parameter    ap_ST_fsm_state39 = 118'd274877906944;
parameter    ap_ST_fsm_state40 = 118'd549755813888;
parameter    ap_ST_fsm_state41 = 118'd1099511627776;
parameter    ap_ST_fsm_state42 = 118'd2199023255552;
parameter    ap_ST_fsm_state43 = 118'd4398046511104;
parameter    ap_ST_fsm_state44 = 118'd8796093022208;
parameter    ap_ST_fsm_state45 = 118'd17592186044416;
parameter    ap_ST_fsm_state46 = 118'd35184372088832;
parameter    ap_ST_fsm_state47 = 118'd70368744177664;
parameter    ap_ST_fsm_state48 = 118'd140737488355328;
parameter    ap_ST_fsm_state49 = 118'd281474976710656;
parameter    ap_ST_fsm_state50 = 118'd562949953421312;
parameter    ap_ST_fsm_state51 = 118'd1125899906842624;
parameter    ap_ST_fsm_state52 = 118'd2251799813685248;
parameter    ap_ST_fsm_state53 = 118'd4503599627370496;
parameter    ap_ST_fsm_state54 = 118'd9007199254740992;
parameter    ap_ST_fsm_state55 = 118'd18014398509481984;
parameter    ap_ST_fsm_state56 = 118'd36028797018963968;
parameter    ap_ST_fsm_state57 = 118'd72057594037927936;
parameter    ap_ST_fsm_state58 = 118'd144115188075855872;
parameter    ap_ST_fsm_state59 = 118'd288230376151711744;
parameter    ap_ST_fsm_state60 = 118'd576460752303423488;
parameter    ap_ST_fsm_state61 = 118'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 118'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 118'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 118'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 118'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 118'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 118'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 118'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 118'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 118'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 118'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 118'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 118'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 118'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 118'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 118'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 118'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 118'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 118'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 118'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 118'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 118'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 118'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 118'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 118'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 118'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 118'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 118'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 118'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 118'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 118'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 118'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 118'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 118'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 118'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 118'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 118'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 118'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 118'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 118'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 118'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 118'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 118'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 118'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 118'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 118'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 118'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 118'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 118'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 118'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 118'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 118'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 118'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 118'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 118'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 118'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 118'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 118'd166153499473114484112975882535043072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [59:0] sine_reconstructor_16_1378_din;
input   sine_reconstructor_16_1378_full_n;
output   sine_reconstructor_16_1378_write;
input  [59:0] alpha_dout;
input   alpha_empty_n;
output   alpha_read;
input  [59:0] beta_dout;
input   beta_empty_n;
output   beta_read;
input  [59:0] gamma_dout;
input   gamma_empty_n;
output   gamma_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sine_reconstructor_16_1378_write;
reg alpha_read;
reg beta_read;
reg gamma_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [117:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sine_reconstructor_16_1378_blk_n;
wire    ap_CS_fsm_state118;
reg    alpha_blk_n;
reg    beta_blk_n;
reg    gamma_blk_n;
reg   [59:0] p_Val2_s_reg_1528;
reg   [0:0] p_Result_253_reg_1535;
wire   [119:0] r_V_60_fu_214_p2;
reg   [119:0] r_V_60_reg_1541;
wire   [118:0] trunc_ln1115_fu_220_p1;
reg   [118:0] trunc_ln1115_reg_1546;
reg   [0:0] p_Result_259_reg_1552;
wire   [0:0] icmp_ln935_fu_232_p2;
reg   [0:0] icmp_ln935_reg_1558;
wire    ap_CS_fsm_state2;
wire   [59:0] tmp_V_36_fu_242_p3;
reg   [59:0] tmp_V_36_reg_1563;
wire   [31:0] sub_ln944_fu_278_p2;
reg   [31:0] sub_ln944_reg_1569;
wire   [0:0] icmp_ln954_fu_376_p2;
reg   [0:0] icmp_ln954_reg_1575;
wire   [0:0] select_ln954_fu_396_p3;
reg   [0:0] select_ln954_reg_1580;
wire   [7:0] trunc_ln943_fu_404_p1;
reg   [7:0] trunc_ln943_reg_1585;
wire   [0:0] icmp_ln935_1_fu_408_p2;
reg   [0:0] icmp_ln935_1_reg_1590;
wire   [118:0] tmp_V_37_fu_418_p3;
reg   [118:0] tmp_V_37_reg_1595;
wire   [31:0] sub_ln944_1_fu_494_p2;
reg   [31:0] sub_ln944_1_reg_1601;
wire   [6:0] trunc_ln947_8_fu_500_p1;
reg   [6:0] trunc_ln947_8_reg_1608;
wire   [7:0] trunc_ln943_8_fu_504_p1;
reg   [7:0] trunc_ln943_8_reg_1613;
wire   [30:0] data_V_fu_620_p3;
reg   [30:0] data_V_reg_1618;
wire    ap_CS_fsm_state3;
wire   [31:0] select_ln935_fu_889_p3;
reg   [31:0] select_ln935_reg_1623;
wire   [31:0] grp_fu_193_p2;
reg   [31:0] v_assign_2_reg_1628;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg   [0:0] p_Result_257_reg_1639;
wire    ap_CS_fsm_state15;
wire   [51:0] trunc_ln565_fu_934_p1;
reg   [51:0] trunc_ln565_reg_1645;
wire   [0:0] icmp_ln571_fu_938_p2;
reg   [0:0] icmp_ln571_reg_1650;
wire   [10:0] trunc_ln575_fu_950_p1;
reg   [10:0] trunc_ln575_reg_1658;
wire   [0:0] icmp_ln581_fu_954_p2;
reg   [0:0] icmp_ln581_reg_1663;
wire   [0:0] icmp_ln582_fu_980_p2;
reg   [0:0] icmp_ln582_reg_1669;
wire   [0:0] icmp_ln585_fu_986_p2;
reg   [0:0] icmp_ln585_reg_1675;
wire   [0:0] icmp_ln603_fu_992_p2;
reg   [0:0] icmp_ln603_reg_1680;
wire   [5:0] trunc_ln586_fu_998_p1;
reg   [5:0] trunc_ln586_reg_1685;
wire   [0:0] icmp_ln591_fu_1002_p2;
reg   [0:0] icmp_ln591_reg_1691;
reg   [0:0] p_Result_263_reg_1696;
wire   [51:0] trunc_ln565_7_fu_1038_p1;
reg   [51:0] trunc_ln565_7_reg_1702;
wire   [0:0] icmp_ln571_2_fu_1042_p2;
reg   [0:0] icmp_ln571_2_reg_1707;
wire   [10:0] trunc_ln575_7_fu_1054_p1;
reg   [10:0] trunc_ln575_7_reg_1715;
wire   [0:0] icmp_ln581_2_fu_1058_p2;
reg   [0:0] icmp_ln581_2_reg_1720;
wire   [0:0] icmp_ln582_2_fu_1084_p2;
reg   [0:0] icmp_ln582_2_reg_1726;
wire   [0:0] icmp_ln585_2_fu_1090_p2;
reg   [0:0] icmp_ln585_2_reg_1732;
wire   [0:0] icmp_ln603_2_fu_1096_p2;
reg   [0:0] icmp_ln603_2_reg_1737;
wire   [5:0] trunc_ln586_7_fu_1102_p1;
reg   [5:0] trunc_ln586_7_reg_1742;
wire   [0:0] icmp_ln591_2_fu_1106_p2;
reg   [0:0] icmp_ln591_2_reg_1748;
wire    ap_CS_fsm_state16;
reg    ap_block_state1;
wire   [31:0] grp_fu_187_p0;
wire    ap_CS_fsm_state4;
wire   [59:0] tmp_V_fu_237_p2;
reg   [59:0] p_Result_s_fu_248_p4;
wire   [63:0] p_Result_254_fu_258_p3;
reg   [63:0] tmp_i_fu_266_p3;
wire   [31:0] l_fu_274_p1;
wire   [31:0] lsb_index_fu_284_p2;
wire   [30:0] tmp_fu_290_p4;
wire   [5:0] trunc_ln947_fu_306_p1;
wire   [5:0] sub_ln947_fu_310_p2;
wire   [59:0] zext_ln947_fu_316_p1;
wire   [59:0] zext_ln949_fu_326_p1;
wire   [59:0] lshr_ln947_fu_320_p2;
wire   [59:0] shl_ln949_fu_330_p2;
wire   [59:0] or_ln949_15_fu_336_p2;
wire   [59:0] and_ln949_fu_342_p2;
wire   [0:0] tmp_141_fu_354_p3;
wire   [0:0] p_Result_255_fu_368_p3;
wire   [0:0] xor_ln949_fu_362_p2;
wire   [0:0] icmp_ln946_fu_300_p2;
wire   [0:0] icmp_ln949_fu_348_p2;
wire   [0:0] select_ln946_fu_388_p3;
wire   [0:0] and_ln949_2_fu_382_p2;
wire   [118:0] tmp_V_34_fu_413_p2;
wire   [62:0] t_9_fu_424_p4;
wire   [63:0] zext_ln1064_fu_434_p1;
reg   [63:0] tmp_i_159_fu_438_p3;
wire   [55:0] trunc_ln1072_fu_456_p1;
wire   [63:0] p_Result_260_fu_460_p3;
reg   [63:0] tmp_3_i_fu_468_p3;
wire   [31:0] trunc_ln1074_fu_476_p1;
wire   [31:0] NZeros_fu_446_p1;
wire   [0:0] hitNonZero_fu_450_p2;
wire   [31:0] NZeros_4_fu_480_p2;
wire   [31:0] NZeros_6_fu_486_p3;
wire   [31:0] sub_ln955_fu_508_p2;
wire   [59:0] zext_ln955_fu_513_p1;
wire   [31:0] add_ln954_fu_522_p2;
wire   [59:0] zext_ln954_fu_527_p1;
wire   [59:0] lshr_ln954_fu_531_p2;
wire   [59:0] shl_ln955_fu_517_p2;
wire   [59:0] m_fu_536_p3;
wire   [60:0] zext_ln951_fu_543_p1;
wire   [60:0] zext_ln961_fu_547_p1;
wire   [60:0] m_56_fu_550_p2;
wire   [59:0] m_s_fu_556_p4;
wire   [0:0] p_Result_239_fu_570_p3;
wire   [7:0] sub_ln964_fu_586_p2;
wire   [7:0] select_ln943_fu_578_p3;
wire   [7:0] add_ln964_fu_591_p2;
wire   [63:0] zext_ln951_2_fu_566_p1;
wire   [8:0] tmp_22_i_fu_597_p3;
wire   [63:0] p_Result_256_fu_604_p5;
wire   [30:0] LD_fu_616_p1;
wire   [31:0] lsb_index_11_fu_630_p2;
wire   [30:0] tmp_145_fu_635_p4;
wire   [6:0] sub_ln947_8_fu_651_p2;
wire   [119:0] zext_ln947_8_fu_656_p1;
wire   [119:0] zext_ln937_fu_627_p1;
wire   [119:0] lshr_ln947_8_fu_660_p2;
wire   [119:0] zext_ln949_1_fu_672_p1;
wire   [119:0] shl_ln949_1_fu_676_p2;
wire   [118:0] trunc_ln949_fu_682_p1;
wire   [119:0] p_Result_247_fu_666_p2;
wire   [118:0] trunc_ln949_1_fu_691_p1;
wire   [118:0] and_ln949_1_fu_686_p2;
wire   [118:0] or_ln949_2_fu_695_p2;
wire   [119:0] or_ln949_1_fu_701_p3;
wire   [0:0] tmp_146_fu_715_p3;
wire   [0:0] p_Result_261_fu_729_p3;
wire   [0:0] xor_ln949_8_fu_723_p2;
wire   [31:0] sub_ln955_1_fu_749_p2;
wire   [119:0] zext_ln955_1_fu_754_p1;
wire   [0:0] icmp_ln946_8_fu_645_p2;
wire   [0:0] icmp_ln949_3_fu_709_p2;
wire   [31:0] add_ln954_1_fu_772_p2;
wire   [119:0] zext_ln954_1_fu_777_p1;
wire   [0:0] icmp_ln954_1_fu_737_p2;
wire   [0:0] select_ln946_1_fu_764_p3;
wire   [0:0] and_ln949_3_fu_743_p2;
wire   [119:0] lshr_ln954_1_fu_781_p2;
wire   [119:0] shl_ln955_1_fu_758_p2;
wire   [63:0] trunc_ln954_fu_795_p1;
wire   [63:0] trunc_ln954_2_fu_799_p1;
wire   [0:0] select_ln954_3_fu_787_p3;
wire   [63:0] m_58_fu_803_p3;
wire   [63:0] zext_ln961_1_fu_811_p1;
wire   [63:0] m_59_fu_815_p2;
wire   [62:0] m_61_fu_821_p4;
wire   [0:0] p_Result_248_fu_835_p3;
wire   [7:0] sub_ln964_1_fu_851_p2;
wire   [7:0] select_ln943_8_fu_843_p3;
wire   [7:0] add_ln964_1_fu_856_p2;
wire   [63:0] zext_ln962_fu_831_p1;
wire   [8:0] tmp_25_i_fu_862_p3;
wire   [63:0] p_Result_262_fu_869_p5;
wire   [31:0] LD_21_fu_881_p1;
wire   [31:0] bitcast_ln744_fu_885_p1;
wire   [31:0] zext_ln368_fu_896_p1;
wire   [63:0] grp_fu_187_p1;
wire   [63:0] ireg_fu_904_p1;
wire   [10:0] exp_tmp_fu_920_p4;
wire   [62:0] trunc_ln555_fu_908_p1;
wire   [11:0] zext_ln455_fu_930_p1;
wire   [11:0] F2_fu_944_p2;
wire   [11:0] add_ln581_fu_960_p2;
wire   [11:0] sub_ln581_fu_966_p2;
wire   [11:0] sh_amt_fu_972_p3;
wire   [63:0] grp_fu_190_p1;
wire   [63:0] ireg_10_fu_1008_p1;
wire   [10:0] exp_tmp_2_fu_1024_p4;
wire   [62:0] trunc_ln555_7_fu_1012_p1;
wire   [11:0] zext_ln455_2_fu_1034_p1;
wire   [11:0] F2_7_fu_1048_p2;
wire   [11:0] add_ln581_2_fu_1064_p2;
wire   [11:0] sub_ln581_2_fu_1070_p2;
wire   [11:0] sh_amt_7_fu_1076_p3;
wire   [52:0] p_Result_258_fu_1112_p3;
wire   [53:0] zext_ln569_fu_1119_p1;
wire   [53:0] man_V_31_fu_1123_p2;
wire  signed [53:0] man_V_34_fu_1129_p3;
wire   [53:0] zext_ln586_fu_1144_p1;
wire   [53:0] ashr_ln586_fu_1147_p2;
wire   [53:0] select_ln585_fu_1153_p3;
wire  signed [59:0] sext_ln583_fu_1136_p1;
wire   [59:0] zext_ln604_fu_1164_p1;
wire   [10:0] add_ln591_fu_1173_p2;
wire   [31:0] zext_ln591_fu_1178_p1;
wire   [0:0] p_Result_244_fu_1182_p3;
wire   [0:0] qb_fu_1190_p3;
wire  signed [54:0] sext_ln591_fu_1160_p1;
wire   [54:0] zext_ln415_fu_1196_p1;
wire   [0:0] xor_ln571_fu_1206_p2;
wire   [0:0] or_ln582_fu_1216_p2;
wire   [0:0] xor_ln582_fu_1220_p2;
wire   [0:0] or_ln581_fu_1231_p2;
wire   [0:0] xor_ln581_fu_1236_p2;
wire   [0:0] and_ln603_fu_1242_p2;
wire   [0:0] and_ln581_fu_1226_p2;
wire   [54:0] add_ln415_fu_1200_p2;
wire  signed [54:0] sext_ln585_fu_1140_p1;
wire   [54:0] select_ln571_8_fu_1252_p3;
wire   [0:0] and_ln582_fu_1211_p2;
wire   [0:0] or_ln571_fu_1247_p2;
wire   [0:0] or_ln571_6_fu_1264_p2;
wire   [52:0] p_Result_264_fu_1276_p3;
wire   [53:0] zext_ln569_2_fu_1283_p1;
wire   [53:0] man_V_32_fu_1287_p2;
wire  signed [53:0] man_V_fu_1293_p3;
wire   [53:0] zext_ln586_2_fu_1308_p1;
wire   [31:0] bitcast_ln702_fu_1317_p1;
wire   [0:0] tmp_149_fu_1320_p3;
wire  signed [59:0] sext_ln583_2_fu_1300_p1;
wire   [59:0] zext_ln604_2_fu_1336_p1;
wire   [53:0] ashr_ln586_2_fu_1311_p2;
wire   [53:0] trunc_ln588_cast_i_fu_1328_p3;
wire   [53:0] select_ln585_1_fu_1345_p3;
wire   [10:0] add_ln591_2_fu_1356_p2;
wire   [31:0] zext_ln591_2_fu_1361_p1;
wire   [0:0] p_Result_252_fu_1365_p3;
wire   [0:0] qb_7_fu_1373_p3;
wire  signed [54:0] sext_ln591_1_fu_1352_p1;
wire   [54:0] zext_ln415_7_fu_1379_p1;
wire   [0:0] xor_ln571_2_fu_1389_p2;
wire   [0:0] or_ln582_2_fu_1399_p2;
wire   [0:0] xor_ln582_2_fu_1403_p2;
wire   [0:0] or_ln581_2_fu_1414_p2;
wire   [0:0] xor_ln581_2_fu_1419_p2;
wire   [59:0] shl_ln604_1_fu_1339_p2;
wire   [0:0] and_ln603_2_fu_1425_p2;
wire   [0:0] and_ln581_2_fu_1409_p2;
wire   [54:0] add_ln415_6_fu_1383_p2;
wire  signed [54:0] sext_ln585_1_fu_1304_p1;
wire   [54:0] select_ln571_12_fu_1442_p3;
wire   [0:0] and_ln582_2_fu_1394_p2;
wire   [0:0] or_ln571_8_fu_1437_p2;
wire   [59:0] select_ln571_11_fu_1430_p3;
wire  signed [59:0] sext_ln571_2_fu_1450_p1;
wire   [0:0] or_ln571_9_fu_1454_p2;
wire   [0:0] or_ln571_10_fu_1468_p2;
wire   [59:0] select_ln571_13_fu_1460_p3;
wire   [59:0] shl_ln604_fu_1167_p2;
wire   [59:0] select_ln571_14_fu_1482_p3;
wire  signed [59:0] sext_ln571_fu_1260_p1;
wire   [0:0] or_ln571_7_fu_1270_p2;
wire   [59:0] select_ln571_15_fu_1489_p3;
wire   [59:0] select_ln571_16_fu_1497_p3;
wire  signed [59:0] select_ln571_fu_1474_p3;
wire   [98:0] grp_fu_1517_p0;
wire   [59:0] grp_fu_1517_p2;
reg    grp_fu_1517_ap_start;
wire    grp_fu_1517_ap_done;
reg    grp_fu_1517_ce;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg   [117:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 118'd1;
end

LLSSineReconstruction_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U211(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_187_p0),
    .ce(1'b1),
    .dout(grp_fu_187_p1)
);

LLSSineReconstruction_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_assign_2_reg_1628),
    .ce(1'b1),
    .dout(grp_fu_190_p1)
);

LLSSineReconstruction_fsqrt_32ns_32ns_32_10_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_10_no_dsp_1_U213(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(select_ln935_reg_1623),
    .ce(1'b1),
    .dout(grp_fu_193_p2)
);

LLSSineReconstruction_mul_60s_60s_120_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 60 ),
    .din1_WIDTH( 60 ),
    .dout_WIDTH( 120 ))
mul_60s_60s_120_1_1_U214(
    .din0(beta_dout),
    .din1(alpha_dout),
    .dout(r_V_60_fu_214_p2)
);

LLSSineReconstruction_sdiv_99ns_60s_60_103_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 103 ),
    .din0_WIDTH( 99 ),
    .din1_WIDTH( 60 ),
    .dout_WIDTH( 60 ))
sdiv_99ns_60s_60_103_seq_1_U215(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1517_ap_start),
    .done(grp_fu_1517_ap_done),
    .din0(grp_fu_1517_p0),
    .din1(select_ln571_fu_1474_p3),
    .ce(grp_fu_1517_ce),
    .dout(grp_fu_1517_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state118) & (sine_reconstructor_16_1378_full_n == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_V_reg_1618 <= data_V_fu_620_p3;
        select_ln935_reg_1623 <= select_ln935_fu_889_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln571_2_reg_1707 <= icmp_ln571_2_fu_1042_p2;
        icmp_ln571_reg_1650 <= icmp_ln571_fu_938_p2;
        icmp_ln581_2_reg_1720 <= icmp_ln581_2_fu_1058_p2;
        icmp_ln581_reg_1663 <= icmp_ln581_fu_954_p2;
        icmp_ln582_2_reg_1726 <= icmp_ln582_2_fu_1084_p2;
        icmp_ln582_reg_1669 <= icmp_ln582_fu_980_p2;
        icmp_ln585_2_reg_1732 <= icmp_ln585_2_fu_1090_p2;
        icmp_ln585_reg_1675 <= icmp_ln585_fu_986_p2;
        icmp_ln591_2_reg_1748 <= icmp_ln591_2_fu_1106_p2;
        icmp_ln591_reg_1691 <= icmp_ln591_fu_1002_p2;
        icmp_ln603_2_reg_1737 <= icmp_ln603_2_fu_1096_p2;
        icmp_ln603_reg_1680 <= icmp_ln603_fu_992_p2;
        p_Result_257_reg_1639 <= ireg_fu_904_p1[32'd63];
        p_Result_263_reg_1696 <= ireg_10_fu_1008_p1[32'd63];
        trunc_ln565_7_reg_1702 <= trunc_ln565_7_fu_1038_p1;
        trunc_ln565_reg_1645 <= trunc_ln565_fu_934_p1;
        trunc_ln575_7_reg_1715 <= trunc_ln575_7_fu_1054_p1;
        trunc_ln575_reg_1658 <= trunc_ln575_fu_950_p1;
        trunc_ln586_7_reg_1742 <= trunc_ln586_7_fu_1102_p1;
        trunc_ln586_reg_1685 <= trunc_ln586_fu_998_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln935_1_reg_1590 <= icmp_ln935_1_fu_408_p2;
        icmp_ln935_reg_1558 <= icmp_ln935_fu_232_p2;
        icmp_ln954_reg_1575 <= icmp_ln954_fu_376_p2;
        select_ln954_reg_1580 <= select_ln954_fu_396_p3;
        sub_ln944_1_reg_1601 <= sub_ln944_1_fu_494_p2;
        sub_ln944_reg_1569 <= sub_ln944_fu_278_p2;
        tmp_V_36_reg_1563 <= tmp_V_36_fu_242_p3;
        tmp_V_37_reg_1595 <= tmp_V_37_fu_418_p3;
        trunc_ln943_8_reg_1613 <= trunc_ln943_8_fu_504_p1;
        trunc_ln943_reg_1585 <= trunc_ln943_fu_404_p1;
        trunc_ln947_8_reg_1608 <= trunc_ln947_8_fu_500_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_Result_253_reg_1535 <= gamma_dout[32'd59];
        p_Result_259_reg_1552 <= r_V_60_fu_214_p2[32'd119];
        p_Val2_s_reg_1528 <= gamma_dout;
        r_V_60_reg_1541 <= r_V_60_fu_214_p2;
        trunc_ln1115_reg_1546 <= trunc_ln1115_fu_220_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v_assign_2_reg_1628 <= grp_fu_193_p2;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alpha_blk_n = alpha_empty_n;
    end else begin
        alpha_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alpha_read = 1'b1;
    end else begin
        alpha_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) & (sine_reconstructor_16_1378_full_n == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) & (sine_reconstructor_16_1378_full_n == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        beta_blk_n = beta_empty_n;
    end else begin
        beta_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        beta_read = 1'b1;
    end else begin
        beta_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gamma_blk_n = gamma_empty_n;
    end else begin
        gamma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gamma_read = 1'b1;
    end else begin
        gamma_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1517_ap_start = 1'b1;
    end else begin
        grp_fu_1517_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_1517_ce = 1'b0;
    end else begin
        grp_fu_1517_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        sine_reconstructor_16_1378_blk_n = sine_reconstructor_16_1378_full_n;
    end else begin
        sine_reconstructor_16_1378_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) & (sine_reconstructor_16_1378_full_n == 1'b1))) begin
        sine_reconstructor_16_1378_write = 1'b1;
    end else begin
        sine_reconstructor_16_1378_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            if (((1'b1 == ap_CS_fsm_state118) & (sine_reconstructor_16_1378_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_7_fu_1048_p2 = (12'd1075 - zext_ln455_2_fu_1034_p1);

assign F2_fu_944_p2 = (12'd1075 - zext_ln455_fu_930_p1);

assign LD_21_fu_881_p1 = p_Result_262_fu_869_p5[31:0];

assign LD_fu_616_p1 = p_Result_256_fu_604_p5[30:0];

assign NZeros_4_fu_480_p2 = (trunc_ln1074_fu_476_p1 + NZeros_fu_446_p1);

assign NZeros_6_fu_486_p3 = ((hitNonZero_fu_450_p2[0:0] == 1'b1) ? NZeros_4_fu_480_p2 : NZeros_fu_446_p1);

assign NZeros_fu_446_p1 = tmp_i_159_fu_438_p3[31:0];

assign add_ln415_6_fu_1383_p2 = ($signed(sext_ln591_1_fu_1352_p1) + $signed(zext_ln415_7_fu_1379_p1));

assign add_ln415_fu_1200_p2 = ($signed(sext_ln591_fu_1160_p1) + $signed(zext_ln415_fu_1196_p1));

assign add_ln581_2_fu_1064_p2 = ($signed(F2_7_fu_1048_p2) + $signed(12'd4057));

assign add_ln581_fu_960_p2 = ($signed(F2_fu_944_p2) + $signed(12'd4057));

assign add_ln591_2_fu_1356_p2 = ($signed(trunc_ln575_7_reg_1715) + $signed(11'd2008));

assign add_ln591_fu_1173_p2 = ($signed(trunc_ln575_reg_1658) + $signed(11'd2008));

assign add_ln954_1_fu_772_p2 = ($signed(sub_ln944_1_reg_1601) + $signed(32'd4294967271));

assign add_ln954_fu_522_p2 = ($signed(sub_ln944_reg_1569) + $signed(32'd4294967271));

assign add_ln964_1_fu_856_p2 = (sub_ln964_1_fu_851_p2 + select_ln943_8_fu_843_p3);

assign add_ln964_fu_591_p2 = (sub_ln964_fu_586_p2 + select_ln943_fu_578_p3);

assign and_ln581_2_fu_1409_p2 = (xor_ln582_2_fu_1403_p2 & icmp_ln581_2_reg_1720);

assign and_ln581_fu_1226_p2 = (xor_ln582_fu_1220_p2 & icmp_ln581_reg_1663);

assign and_ln582_2_fu_1394_p2 = (xor_ln571_2_fu_1389_p2 & icmp_ln582_2_reg_1726);

assign and_ln582_fu_1211_p2 = (xor_ln571_fu_1206_p2 & icmp_ln582_reg_1669);

assign and_ln603_2_fu_1425_p2 = (xor_ln581_2_fu_1419_p2 & icmp_ln603_2_reg_1737);

assign and_ln603_fu_1242_p2 = (xor_ln581_fu_1236_p2 & icmp_ln603_reg_1680);

assign and_ln949_1_fu_686_p2 = (trunc_ln949_fu_682_p1 & tmp_V_37_reg_1595);

assign and_ln949_2_fu_382_p2 = (xor_ln949_fu_362_p2 & p_Result_255_fu_368_p3);

assign and_ln949_3_fu_743_p2 = (xor_ln949_8_fu_723_p2 & p_Result_261_fu_729_p3);

assign and_ln949_fu_342_p2 = (tmp_V_36_fu_242_p3 & or_ln949_15_fu_336_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ashr_ln586_2_fu_1311_p2 = $signed(man_V_fu_1293_p3) >>> zext_ln586_2_fu_1308_p1;

assign ashr_ln586_fu_1147_p2 = $signed(man_V_34_fu_1129_p3) >>> zext_ln586_fu_1144_p1;

assign bitcast_ln702_fu_1317_p1 = v_assign_2_reg_1628;

assign bitcast_ln744_fu_885_p1 = LD_21_fu_881_p1;

assign data_V_fu_620_p3 = ((icmp_ln935_reg_1558[0:0] == 1'b1) ? 31'd0 : LD_fu_616_p1);

assign exp_tmp_2_fu_1024_p4 = {{ireg_10_fu_1008_p1[62:52]}};

assign exp_tmp_fu_920_p4 = {{ireg_fu_904_p1[62:52]}};

assign grp_fu_1517_p0 = {{select_ln571_16_fu_1497_p3}, {39'd0}};

assign grp_fu_187_p0 = zext_ln368_fu_896_p1;

assign hitNonZero_fu_450_p2 = ((t_9_fu_424_p4 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_1042_p2 = ((trunc_ln555_7_fu_1012_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_938_p2 = ((trunc_ln555_fu_908_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_1058_p2 = (($signed(F2_7_fu_1048_p2) > $signed(12'd39)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_954_p2 = (($signed(F2_fu_944_p2) > $signed(12'd39)) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_1084_p2 = ((F2_7_fu_1048_p2 == 12'd39) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_980_p2 = ((F2_fu_944_p2 == 12'd39) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_1090_p2 = ((sh_amt_7_fu_1076_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_986_p2 = ((sh_amt_fu_972_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln591_2_fu_1106_p2 = (($signed(add_ln581_2_fu_1064_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_1002_p2 = (($signed(add_ln581_fu_960_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_1096_p2 = ((sh_amt_7_fu_1076_p3 < 12'd60) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_992_p2 = ((sh_amt_fu_972_p3 < 12'd60) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_408_p2 = ((r_V_60_reg_1541 == 120'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_232_p2 = ((p_Val2_s_reg_1528 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_8_fu_645_p2 = (($signed(tmp_145_fu_635_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_300_p2 = (($signed(tmp_fu_290_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_3_fu_709_p2 = ((or_ln949_1_fu_701_p3 != 120'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_348_p2 = ((and_ln949_fu_342_p2 != 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln954_1_fu_737_p2 = (($signed(lsb_index_11_fu_630_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_376_p2 = (($signed(lsb_index_fu_284_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_10_fu_1008_p1 = grp_fu_190_p1;

assign ireg_fu_904_p1 = grp_fu_187_p1;

assign l_fu_274_p1 = tmp_i_fu_266_p3[31:0];

assign lsb_index_11_fu_630_p2 = ($signed(sub_ln944_1_reg_1601) + $signed(32'd4294967272));

assign lsb_index_fu_284_p2 = ($signed(sub_ln944_fu_278_p2) + $signed(32'd4294967272));

assign lshr_ln947_8_fu_660_p2 = 120'd1329227995784915872903807060280344575 >> zext_ln947_8_fu_656_p1;

assign lshr_ln947_fu_320_p2 = 60'd1152921504606846975 >> zext_ln947_fu_316_p1;

assign lshr_ln954_1_fu_781_p2 = zext_ln937_fu_627_p1 >> zext_ln954_1_fu_777_p1;

assign lshr_ln954_fu_531_p2 = tmp_V_36_reg_1563 >> zext_ln954_fu_527_p1;

assign m_56_fu_550_p2 = (zext_ln951_fu_543_p1 + zext_ln961_fu_547_p1);

assign m_58_fu_803_p3 = ((icmp_ln954_1_fu_737_p2[0:0] == 1'b1) ? trunc_ln954_fu_795_p1 : trunc_ln954_2_fu_799_p1);

assign m_59_fu_815_p2 = (m_58_fu_803_p3 + zext_ln961_1_fu_811_p1);

assign m_61_fu_821_p4 = {{m_59_fu_815_p2[63:1]}};

assign m_fu_536_p3 = ((icmp_ln954_reg_1575[0:0] == 1'b1) ? lshr_ln954_fu_531_p2 : shl_ln955_fu_517_p2);

assign m_s_fu_556_p4 = {{m_56_fu_550_p2[60:1]}};

assign man_V_31_fu_1123_p2 = (54'd0 - zext_ln569_fu_1119_p1);

assign man_V_32_fu_1287_p2 = (54'd0 - zext_ln569_2_fu_1283_p1);

assign man_V_34_fu_1129_p3 = ((p_Result_257_reg_1639[0:0] == 1'b1) ? man_V_31_fu_1123_p2 : zext_ln569_fu_1119_p1);

assign man_V_fu_1293_p3 = ((p_Result_263_reg_1696[0:0] == 1'b1) ? man_V_32_fu_1287_p2 : zext_ln569_2_fu_1283_p1);

assign or_ln571_10_fu_1468_p2 = (or_ln571_9_fu_1454_p2 | or_ln571_8_fu_1437_p2);

assign or_ln571_6_fu_1264_p2 = (and_ln582_fu_1211_p2 | and_ln581_fu_1226_p2);

assign or_ln571_7_fu_1270_p2 = (or_ln571_fu_1247_p2 | or_ln571_6_fu_1264_p2);

assign or_ln571_8_fu_1437_p2 = (icmp_ln571_2_reg_1707 | and_ln603_2_fu_1425_p2);

assign or_ln571_9_fu_1454_p2 = (and_ln582_2_fu_1394_p2 | and_ln581_2_fu_1409_p2);

assign or_ln571_fu_1247_p2 = (icmp_ln571_reg_1650 | and_ln603_fu_1242_p2);

assign or_ln581_2_fu_1414_p2 = (or_ln582_2_fu_1399_p2 | icmp_ln581_2_reg_1720);

assign or_ln581_fu_1231_p2 = (or_ln582_fu_1216_p2 | icmp_ln581_reg_1663);

assign or_ln582_2_fu_1399_p2 = (icmp_ln582_2_reg_1726 | icmp_ln571_2_reg_1707);

assign or_ln582_fu_1216_p2 = (icmp_ln582_reg_1669 | icmp_ln571_reg_1650);

assign or_ln949_15_fu_336_p2 = (shl_ln949_fu_330_p2 | lshr_ln947_fu_320_p2);

assign or_ln949_1_fu_701_p3 = {{1'd0}, {or_ln949_2_fu_695_p2}};

assign or_ln949_2_fu_695_p2 = (trunc_ln949_1_fu_691_p1 | and_ln949_1_fu_686_p2);

assign p_Result_239_fu_570_p3 = m_56_fu_550_p2[32'd25];

assign p_Result_244_fu_1182_p3 = man_V_34_fu_1129_p3[zext_ln591_fu_1178_p1];

assign p_Result_247_fu_666_p2 = (zext_ln937_fu_627_p1 & lshr_ln947_8_fu_660_p2);

assign p_Result_248_fu_835_p3 = m_59_fu_815_p2[32'd25];

assign p_Result_252_fu_1365_p3 = man_V_fu_1293_p3[zext_ln591_2_fu_1361_p1];

assign p_Result_254_fu_258_p3 = {{4'd15}, {p_Result_s_fu_248_p4}};

assign p_Result_255_fu_368_p3 = tmp_V_36_fu_242_p3[lsb_index_fu_284_p2];

assign p_Result_256_fu_604_p5 = {{zext_ln951_2_fu_566_p1[63:32]}, {tmp_22_i_fu_597_p3}, {zext_ln951_2_fu_566_p1[22:0]}};

assign p_Result_258_fu_1112_p3 = {{1'd1}, {trunc_ln565_reg_1645}};

assign p_Result_260_fu_460_p3 = {{trunc_ln1072_fu_456_p1}, {8'd255}};

assign p_Result_261_fu_729_p3 = zext_ln937_fu_627_p1[lsb_index_11_fu_630_p2];

assign p_Result_262_fu_869_p5 = {{zext_ln962_fu_831_p1[63:32]}, {tmp_25_i_fu_862_p3}, {zext_ln962_fu_831_p1[22:0]}};

assign p_Result_264_fu_1276_p3 = {{1'd1}, {trunc_ln565_7_reg_1702}};

integer ap_tvar_int_0;

always @ (tmp_V_36_fu_242_p3) begin
    for (ap_tvar_int_0 = 60 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 59 - 0) begin
            p_Result_s_fu_248_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_248_p4[ap_tvar_int_0] = tmp_V_36_fu_242_p3[59 - ap_tvar_int_0];
        end
    end
end

assign qb_7_fu_1373_p3 = ((icmp_ln591_2_reg_1748[0:0] == 1'b1) ? p_Result_263_reg_1696 : p_Result_252_fu_1365_p3);

assign qb_fu_1190_p3 = ((icmp_ln591_reg_1691[0:0] == 1'b1) ? p_Result_257_reg_1639 : p_Result_244_fu_1182_p3);

assign select_ln571_11_fu_1430_p3 = ((icmp_ln571_2_reg_1707[0:0] == 1'b1) ? 60'd0 : shl_ln604_1_fu_1339_p2);

assign select_ln571_12_fu_1442_p3 = ((and_ln581_2_fu_1409_p2[0:0] == 1'b1) ? add_ln415_6_fu_1383_p2 : sext_ln585_1_fu_1304_p1);

assign select_ln571_13_fu_1460_p3 = ((or_ln571_8_fu_1437_p2[0:0] == 1'b1) ? select_ln571_11_fu_1430_p3 : sext_ln571_2_fu_1450_p1);

assign select_ln571_14_fu_1482_p3 = ((icmp_ln571_reg_1650[0:0] == 1'b1) ? 60'd0 : shl_ln604_fu_1167_p2);

assign select_ln571_15_fu_1489_p3 = ((or_ln571_fu_1247_p2[0:0] == 1'b1) ? select_ln571_14_fu_1482_p3 : sext_ln571_fu_1260_p1);

assign select_ln571_16_fu_1497_p3 = ((or_ln571_7_fu_1270_p2[0:0] == 1'b1) ? select_ln571_15_fu_1489_p3 : 60'd0);

assign select_ln571_8_fu_1252_p3 = ((and_ln581_fu_1226_p2[0:0] == 1'b1) ? add_ln415_fu_1200_p2 : sext_ln585_fu_1140_p1);

assign select_ln571_fu_1474_p3 = ((or_ln571_10_fu_1468_p2[0:0] == 1'b1) ? select_ln571_13_fu_1460_p3 : 60'd0);

assign select_ln585_1_fu_1345_p3 = ((icmp_ln585_2_reg_1732[0:0] == 1'b1) ? ashr_ln586_2_fu_1311_p2 : trunc_ln588_cast_i_fu_1328_p3);

assign select_ln585_fu_1153_p3 = ((icmp_ln585_reg_1675[0:0] == 1'b1) ? ashr_ln586_fu_1147_p2 : 54'd0);

assign select_ln935_fu_889_p3 = ((icmp_ln935_1_reg_1590[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_885_p1);

assign select_ln943_8_fu_843_p3 = ((p_Result_248_fu_835_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_578_p3 = ((p_Result_239_fu_570_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_1_fu_764_p3 = ((icmp_ln946_8_fu_645_p2[0:0] == 1'b1) ? icmp_ln949_3_fu_709_p2 : p_Result_261_fu_729_p3);

assign select_ln946_fu_388_p3 = ((icmp_ln946_fu_300_p2[0:0] == 1'b1) ? icmp_ln949_fu_348_p2 : p_Result_255_fu_368_p3);

assign select_ln954_3_fu_787_p3 = ((icmp_ln954_1_fu_737_p2[0:0] == 1'b1) ? select_ln946_1_fu_764_p3 : and_ln949_3_fu_743_p2);

assign select_ln954_fu_396_p3 = ((icmp_ln954_fu_376_p2[0:0] == 1'b1) ? select_ln946_fu_388_p3 : and_ln949_2_fu_382_p2);

assign sext_ln571_2_fu_1450_p1 = $signed(select_ln571_12_fu_1442_p3);

assign sext_ln571_fu_1260_p1 = $signed(select_ln571_8_fu_1252_p3);

assign sext_ln583_2_fu_1300_p1 = man_V_fu_1293_p3;

assign sext_ln583_fu_1136_p1 = man_V_34_fu_1129_p3;

assign sext_ln585_1_fu_1304_p1 = man_V_fu_1293_p3;

assign sext_ln585_fu_1140_p1 = man_V_34_fu_1129_p3;

assign sext_ln591_1_fu_1352_p1 = $signed(select_ln585_1_fu_1345_p3);

assign sext_ln591_fu_1160_p1 = $signed(select_ln585_fu_1153_p3);

assign sh_amt_7_fu_1076_p3 = ((icmp_ln581_2_fu_1058_p2[0:0] == 1'b1) ? add_ln581_2_fu_1064_p2 : sub_ln581_2_fu_1070_p2);

assign sh_amt_fu_972_p3 = ((icmp_ln581_fu_954_p2[0:0] == 1'b1) ? add_ln581_fu_960_p2 : sub_ln581_fu_966_p2);

assign shl_ln604_1_fu_1339_p2 = sext_ln583_2_fu_1300_p1 << zext_ln604_2_fu_1336_p1;

assign shl_ln604_fu_1167_p2 = sext_ln583_fu_1136_p1 << zext_ln604_fu_1164_p1;

assign shl_ln949_1_fu_676_p2 = 120'd1 << zext_ln949_1_fu_672_p1;

assign shl_ln949_fu_330_p2 = 60'd1 << zext_ln949_fu_326_p1;

assign shl_ln955_1_fu_758_p2 = zext_ln937_fu_627_p1 << zext_ln955_1_fu_754_p1;

assign shl_ln955_fu_517_p2 = tmp_V_36_reg_1563 << zext_ln955_fu_513_p1;

assign sine_reconstructor_16_1378_din = grp_fu_1517_p2[59:0];

assign sub_ln581_2_fu_1070_p2 = (12'd39 - F2_7_fu_1048_p2);

assign sub_ln581_fu_966_p2 = (12'd39 - F2_fu_944_p2);

assign sub_ln944_1_fu_494_p2 = (32'd120 - NZeros_6_fu_486_p3);

assign sub_ln944_fu_278_p2 = (32'd60 - l_fu_274_p1);

assign sub_ln947_8_fu_651_p2 = (7'd17 - trunc_ln947_8_reg_1608);

assign sub_ln947_fu_310_p2 = (6'd21 - trunc_ln947_fu_306_p1);

assign sub_ln955_1_fu_749_p2 = (32'd25 - sub_ln944_1_reg_1601);

assign sub_ln955_fu_508_p2 = (32'd25 - sub_ln944_reg_1569);

assign sub_ln964_1_fu_851_p2 = (8'd42 - trunc_ln943_8_reg_1613);

assign sub_ln964_fu_586_p2 = (8'd21 - trunc_ln943_reg_1585);

assign t_9_fu_424_p4 = {{tmp_V_37_fu_418_p3[118:56]}};

assign tmp_141_fu_354_p3 = lsb_index_fu_284_p2[32'd31];

assign tmp_145_fu_635_p4 = {{lsb_index_11_fu_630_p2[31:1]}};

assign tmp_146_fu_715_p3 = lsb_index_11_fu_630_p2[32'd31];

assign tmp_149_fu_1320_p3 = bitcast_ln702_fu_1317_p1[32'd31];

assign tmp_22_i_fu_597_p3 = {{p_Result_253_reg_1535}, {add_ln964_fu_591_p2}};

assign tmp_25_i_fu_862_p3 = {{p_Result_259_reg_1552}, {add_ln964_1_fu_856_p2}};

always @ (p_Result_260_fu_460_p3) begin
    if (p_Result_260_fu_460_p3[63] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd0;
    end else if (p_Result_260_fu_460_p3[62] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd1;
    end else if (p_Result_260_fu_460_p3[61] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd2;
    end else if (p_Result_260_fu_460_p3[60] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd3;
    end else if (p_Result_260_fu_460_p3[59] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd4;
    end else if (p_Result_260_fu_460_p3[58] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd5;
    end else if (p_Result_260_fu_460_p3[57] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd6;
    end else if (p_Result_260_fu_460_p3[56] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd7;
    end else if (p_Result_260_fu_460_p3[55] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd8;
    end else if (p_Result_260_fu_460_p3[54] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd9;
    end else if (p_Result_260_fu_460_p3[53] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd10;
    end else if (p_Result_260_fu_460_p3[52] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd11;
    end else if (p_Result_260_fu_460_p3[51] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd12;
    end else if (p_Result_260_fu_460_p3[50] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd13;
    end else if (p_Result_260_fu_460_p3[49] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd14;
    end else if (p_Result_260_fu_460_p3[48] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd15;
    end else if (p_Result_260_fu_460_p3[47] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd16;
    end else if (p_Result_260_fu_460_p3[46] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd17;
    end else if (p_Result_260_fu_460_p3[45] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd18;
    end else if (p_Result_260_fu_460_p3[44] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd19;
    end else if (p_Result_260_fu_460_p3[43] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd20;
    end else if (p_Result_260_fu_460_p3[42] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd21;
    end else if (p_Result_260_fu_460_p3[41] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd22;
    end else if (p_Result_260_fu_460_p3[40] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd23;
    end else if (p_Result_260_fu_460_p3[39] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd24;
    end else if (p_Result_260_fu_460_p3[38] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd25;
    end else if (p_Result_260_fu_460_p3[37] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd26;
    end else if (p_Result_260_fu_460_p3[36] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd27;
    end else if (p_Result_260_fu_460_p3[35] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd28;
    end else if (p_Result_260_fu_460_p3[34] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd29;
    end else if (p_Result_260_fu_460_p3[33] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd30;
    end else if (p_Result_260_fu_460_p3[32] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd31;
    end else if (p_Result_260_fu_460_p3[31] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd32;
    end else if (p_Result_260_fu_460_p3[30] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd33;
    end else if (p_Result_260_fu_460_p3[29] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd34;
    end else if (p_Result_260_fu_460_p3[28] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd35;
    end else if (p_Result_260_fu_460_p3[27] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd36;
    end else if (p_Result_260_fu_460_p3[26] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd37;
    end else if (p_Result_260_fu_460_p3[25] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd38;
    end else if (p_Result_260_fu_460_p3[24] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd39;
    end else if (p_Result_260_fu_460_p3[23] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd40;
    end else if (p_Result_260_fu_460_p3[22] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd41;
    end else if (p_Result_260_fu_460_p3[21] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd42;
    end else if (p_Result_260_fu_460_p3[20] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd43;
    end else if (p_Result_260_fu_460_p3[19] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd44;
    end else if (p_Result_260_fu_460_p3[18] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd45;
    end else if (p_Result_260_fu_460_p3[17] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd46;
    end else if (p_Result_260_fu_460_p3[16] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd47;
    end else if (p_Result_260_fu_460_p3[15] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd48;
    end else if (p_Result_260_fu_460_p3[14] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd49;
    end else if (p_Result_260_fu_460_p3[13] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd50;
    end else if (p_Result_260_fu_460_p3[12] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd51;
    end else if (p_Result_260_fu_460_p3[11] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd52;
    end else if (p_Result_260_fu_460_p3[10] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd53;
    end else if (p_Result_260_fu_460_p3[9] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd54;
    end else if (p_Result_260_fu_460_p3[8] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd55;
    end else if (p_Result_260_fu_460_p3[7] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd56;
    end else if (p_Result_260_fu_460_p3[6] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd57;
    end else if (p_Result_260_fu_460_p3[5] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd58;
    end else if (p_Result_260_fu_460_p3[4] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd59;
    end else if (p_Result_260_fu_460_p3[3] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd60;
    end else if (p_Result_260_fu_460_p3[2] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd61;
    end else if (p_Result_260_fu_460_p3[1] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd62;
    end else if (p_Result_260_fu_460_p3[0] == 1'b1) begin
        tmp_3_i_fu_468_p3 = 64'd63;
    end else begin
        tmp_3_i_fu_468_p3 = 64'd64;
    end
end

assign tmp_V_34_fu_413_p2 = (119'd0 - trunc_ln1115_reg_1546);

assign tmp_V_36_fu_242_p3 = ((p_Result_253_reg_1535[0:0] == 1'b1) ? tmp_V_fu_237_p2 : p_Val2_s_reg_1528);

assign tmp_V_37_fu_418_p3 = ((p_Result_259_reg_1552[0:0] == 1'b1) ? tmp_V_34_fu_413_p2 : trunc_ln1115_reg_1546);

assign tmp_V_fu_237_p2 = (60'd0 - p_Val2_s_reg_1528);

assign tmp_fu_290_p4 = {{lsb_index_fu_284_p2[31:1]}};

always @ (zext_ln1064_fu_434_p1) begin
    if (zext_ln1064_fu_434_p1[63] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd0;
    end else if (zext_ln1064_fu_434_p1[62] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd1;
    end else if (zext_ln1064_fu_434_p1[61] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd2;
    end else if (zext_ln1064_fu_434_p1[60] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd3;
    end else if (zext_ln1064_fu_434_p1[59] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd4;
    end else if (zext_ln1064_fu_434_p1[58] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd5;
    end else if (zext_ln1064_fu_434_p1[57] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd6;
    end else if (zext_ln1064_fu_434_p1[56] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd7;
    end else if (zext_ln1064_fu_434_p1[55] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd8;
    end else if (zext_ln1064_fu_434_p1[54] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd9;
    end else if (zext_ln1064_fu_434_p1[53] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd10;
    end else if (zext_ln1064_fu_434_p1[52] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd11;
    end else if (zext_ln1064_fu_434_p1[51] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd12;
    end else if (zext_ln1064_fu_434_p1[50] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd13;
    end else if (zext_ln1064_fu_434_p1[49] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd14;
    end else if (zext_ln1064_fu_434_p1[48] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd15;
    end else if (zext_ln1064_fu_434_p1[47] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd16;
    end else if (zext_ln1064_fu_434_p1[46] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd17;
    end else if (zext_ln1064_fu_434_p1[45] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd18;
    end else if (zext_ln1064_fu_434_p1[44] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd19;
    end else if (zext_ln1064_fu_434_p1[43] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd20;
    end else if (zext_ln1064_fu_434_p1[42] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd21;
    end else if (zext_ln1064_fu_434_p1[41] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd22;
    end else if (zext_ln1064_fu_434_p1[40] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd23;
    end else if (zext_ln1064_fu_434_p1[39] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd24;
    end else if (zext_ln1064_fu_434_p1[38] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd25;
    end else if (zext_ln1064_fu_434_p1[37] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd26;
    end else if (zext_ln1064_fu_434_p1[36] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd27;
    end else if (zext_ln1064_fu_434_p1[35] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd28;
    end else if (zext_ln1064_fu_434_p1[34] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd29;
    end else if (zext_ln1064_fu_434_p1[33] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd30;
    end else if (zext_ln1064_fu_434_p1[32] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd31;
    end else if (zext_ln1064_fu_434_p1[31] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd32;
    end else if (zext_ln1064_fu_434_p1[30] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd33;
    end else if (zext_ln1064_fu_434_p1[29] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd34;
    end else if (zext_ln1064_fu_434_p1[28] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd35;
    end else if (zext_ln1064_fu_434_p1[27] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd36;
    end else if (zext_ln1064_fu_434_p1[26] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd37;
    end else if (zext_ln1064_fu_434_p1[25] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd38;
    end else if (zext_ln1064_fu_434_p1[24] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd39;
    end else if (zext_ln1064_fu_434_p1[23] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd40;
    end else if (zext_ln1064_fu_434_p1[22] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd41;
    end else if (zext_ln1064_fu_434_p1[21] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd42;
    end else if (zext_ln1064_fu_434_p1[20] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd43;
    end else if (zext_ln1064_fu_434_p1[19] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd44;
    end else if (zext_ln1064_fu_434_p1[18] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd45;
    end else if (zext_ln1064_fu_434_p1[17] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd46;
    end else if (zext_ln1064_fu_434_p1[16] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd47;
    end else if (zext_ln1064_fu_434_p1[15] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd48;
    end else if (zext_ln1064_fu_434_p1[14] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd49;
    end else if (zext_ln1064_fu_434_p1[13] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd50;
    end else if (zext_ln1064_fu_434_p1[12] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd51;
    end else if (zext_ln1064_fu_434_p1[11] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd52;
    end else if (zext_ln1064_fu_434_p1[10] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd53;
    end else if (zext_ln1064_fu_434_p1[9] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd54;
    end else if (zext_ln1064_fu_434_p1[8] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd55;
    end else if (zext_ln1064_fu_434_p1[7] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd56;
    end else if (zext_ln1064_fu_434_p1[6] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd57;
    end else if (zext_ln1064_fu_434_p1[5] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd58;
    end else if (zext_ln1064_fu_434_p1[4] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd59;
    end else if (zext_ln1064_fu_434_p1[3] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd60;
    end else if (zext_ln1064_fu_434_p1[2] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd61;
    end else if (zext_ln1064_fu_434_p1[1] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd62;
    end else if (zext_ln1064_fu_434_p1[0] == 1'b1) begin
        tmp_i_159_fu_438_p3 = 64'd63;
    end else begin
        tmp_i_159_fu_438_p3 = 64'd64;
    end
end


always @ (p_Result_254_fu_258_p3) begin
    if (p_Result_254_fu_258_p3[0] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd0;
    end else if (p_Result_254_fu_258_p3[1] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd1;
    end else if (p_Result_254_fu_258_p3[2] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd2;
    end else if (p_Result_254_fu_258_p3[3] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd3;
    end else if (p_Result_254_fu_258_p3[4] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd4;
    end else if (p_Result_254_fu_258_p3[5] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd5;
    end else if (p_Result_254_fu_258_p3[6] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd6;
    end else if (p_Result_254_fu_258_p3[7] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd7;
    end else if (p_Result_254_fu_258_p3[8] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd8;
    end else if (p_Result_254_fu_258_p3[9] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd9;
    end else if (p_Result_254_fu_258_p3[10] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd10;
    end else if (p_Result_254_fu_258_p3[11] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd11;
    end else if (p_Result_254_fu_258_p3[12] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd12;
    end else if (p_Result_254_fu_258_p3[13] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd13;
    end else if (p_Result_254_fu_258_p3[14] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd14;
    end else if (p_Result_254_fu_258_p3[15] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd15;
    end else if (p_Result_254_fu_258_p3[16] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd16;
    end else if (p_Result_254_fu_258_p3[17] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd17;
    end else if (p_Result_254_fu_258_p3[18] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd18;
    end else if (p_Result_254_fu_258_p3[19] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd19;
    end else if (p_Result_254_fu_258_p3[20] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd20;
    end else if (p_Result_254_fu_258_p3[21] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd21;
    end else if (p_Result_254_fu_258_p3[22] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd22;
    end else if (p_Result_254_fu_258_p3[23] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd23;
    end else if (p_Result_254_fu_258_p3[24] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd24;
    end else if (p_Result_254_fu_258_p3[25] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd25;
    end else if (p_Result_254_fu_258_p3[26] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd26;
    end else if (p_Result_254_fu_258_p3[27] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd27;
    end else if (p_Result_254_fu_258_p3[28] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd28;
    end else if (p_Result_254_fu_258_p3[29] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd29;
    end else if (p_Result_254_fu_258_p3[30] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd30;
    end else if (p_Result_254_fu_258_p3[31] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd31;
    end else if (p_Result_254_fu_258_p3[32] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd32;
    end else if (p_Result_254_fu_258_p3[33] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd33;
    end else if (p_Result_254_fu_258_p3[34] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd34;
    end else if (p_Result_254_fu_258_p3[35] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd35;
    end else if (p_Result_254_fu_258_p3[36] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd36;
    end else if (p_Result_254_fu_258_p3[37] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd37;
    end else if (p_Result_254_fu_258_p3[38] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd38;
    end else if (p_Result_254_fu_258_p3[39] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd39;
    end else if (p_Result_254_fu_258_p3[40] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd40;
    end else if (p_Result_254_fu_258_p3[41] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd41;
    end else if (p_Result_254_fu_258_p3[42] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd42;
    end else if (p_Result_254_fu_258_p3[43] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd43;
    end else if (p_Result_254_fu_258_p3[44] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd44;
    end else if (p_Result_254_fu_258_p3[45] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd45;
    end else if (p_Result_254_fu_258_p3[46] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd46;
    end else if (p_Result_254_fu_258_p3[47] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd47;
    end else if (p_Result_254_fu_258_p3[48] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd48;
    end else if (p_Result_254_fu_258_p3[49] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd49;
    end else if (p_Result_254_fu_258_p3[50] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd50;
    end else if (p_Result_254_fu_258_p3[51] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd51;
    end else if (p_Result_254_fu_258_p3[52] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd52;
    end else if (p_Result_254_fu_258_p3[53] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd53;
    end else if (p_Result_254_fu_258_p3[54] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd54;
    end else if (p_Result_254_fu_258_p3[55] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd55;
    end else if (p_Result_254_fu_258_p3[56] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd56;
    end else if (p_Result_254_fu_258_p3[57] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd57;
    end else if (p_Result_254_fu_258_p3[58] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd58;
    end else if (p_Result_254_fu_258_p3[59] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd59;
    end else if (p_Result_254_fu_258_p3[60] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd60;
    end else if (p_Result_254_fu_258_p3[61] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd61;
    end else if (p_Result_254_fu_258_p3[62] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd62;
    end else if (p_Result_254_fu_258_p3[63] == 1'b1) begin
        tmp_i_fu_266_p3 = 64'd63;
    end else begin
        tmp_i_fu_266_p3 = 64'd64;
    end
end

assign trunc_ln1072_fu_456_p1 = tmp_V_37_fu_418_p3[55:0];

assign trunc_ln1074_fu_476_p1 = tmp_3_i_fu_468_p3[31:0];

assign trunc_ln1115_fu_220_p1 = r_V_60_fu_214_p2[118:0];

assign trunc_ln555_7_fu_1012_p1 = ireg_10_fu_1008_p1[62:0];

assign trunc_ln555_fu_908_p1 = ireg_fu_904_p1[62:0];

assign trunc_ln565_7_fu_1038_p1 = ireg_10_fu_1008_p1[51:0];

assign trunc_ln565_fu_934_p1 = ireg_fu_904_p1[51:0];

assign trunc_ln575_7_fu_1054_p1 = F2_7_fu_1048_p2[10:0];

assign trunc_ln575_fu_950_p1 = F2_fu_944_p2[10:0];

assign trunc_ln586_7_fu_1102_p1 = sh_amt_7_fu_1076_p3[5:0];

assign trunc_ln586_fu_998_p1 = sh_amt_fu_972_p3[5:0];

assign trunc_ln588_cast_i_fu_1328_p3 = ((tmp_149_fu_1320_p3[0:0] == 1'b1) ? 54'd18014398509481983 : 54'd0);

assign trunc_ln943_8_fu_504_p1 = NZeros_6_fu_486_p3[7:0];

assign trunc_ln943_fu_404_p1 = tmp_i_fu_266_p3[7:0];

assign trunc_ln947_8_fu_500_p1 = sub_ln944_1_fu_494_p2[6:0];

assign trunc_ln947_fu_306_p1 = sub_ln944_fu_278_p2[5:0];

assign trunc_ln949_1_fu_691_p1 = p_Result_247_fu_666_p2[118:0];

assign trunc_ln949_fu_682_p1 = shl_ln949_1_fu_676_p2[118:0];

assign trunc_ln954_2_fu_799_p1 = shl_ln955_1_fu_758_p2[63:0];

assign trunc_ln954_fu_795_p1 = lshr_ln954_1_fu_781_p2[63:0];

assign xor_ln571_2_fu_1389_p2 = (icmp_ln571_2_reg_1707 ^ 1'd1);

assign xor_ln571_fu_1206_p2 = (icmp_ln571_reg_1650 ^ 1'd1);

assign xor_ln581_2_fu_1419_p2 = (or_ln581_2_fu_1414_p2 ^ 1'd1);

assign xor_ln581_fu_1236_p2 = (or_ln581_fu_1231_p2 ^ 1'd1);

assign xor_ln582_2_fu_1403_p2 = (or_ln582_2_fu_1399_p2 ^ 1'd1);

assign xor_ln582_fu_1220_p2 = (or_ln582_fu_1216_p2 ^ 1'd1);

assign xor_ln949_8_fu_723_p2 = (tmp_146_fu_715_p3 ^ 1'd1);

assign xor_ln949_fu_362_p2 = (tmp_141_fu_354_p3 ^ 1'd1);

assign zext_ln1064_fu_434_p1 = t_9_fu_424_p4;

assign zext_ln368_fu_896_p1 = data_V_reg_1618;

assign zext_ln415_7_fu_1379_p1 = qb_7_fu_1373_p3;

assign zext_ln415_fu_1196_p1 = qb_fu_1190_p3;

assign zext_ln455_2_fu_1034_p1 = exp_tmp_2_fu_1024_p4;

assign zext_ln455_fu_930_p1 = exp_tmp_fu_920_p4;

assign zext_ln569_2_fu_1283_p1 = p_Result_264_fu_1276_p3;

assign zext_ln569_fu_1119_p1 = p_Result_258_fu_1112_p3;

assign zext_ln586_2_fu_1308_p1 = trunc_ln586_7_reg_1742;

assign zext_ln586_fu_1144_p1 = trunc_ln586_reg_1685;

assign zext_ln591_2_fu_1361_p1 = add_ln591_2_fu_1356_p2;

assign zext_ln591_fu_1178_p1 = add_ln591_fu_1173_p2;

assign zext_ln604_2_fu_1336_p1 = trunc_ln586_7_reg_1742;

assign zext_ln604_fu_1164_p1 = trunc_ln586_reg_1685;

assign zext_ln937_fu_627_p1 = tmp_V_37_reg_1595;

assign zext_ln947_8_fu_656_p1 = sub_ln947_8_fu_651_p2;

assign zext_ln947_fu_316_p1 = sub_ln947_fu_310_p2;

assign zext_ln949_1_fu_672_p1 = lsb_index_11_fu_630_p2;

assign zext_ln949_fu_326_p1 = lsb_index_fu_284_p2;

assign zext_ln951_2_fu_566_p1 = m_s_fu_556_p4;

assign zext_ln951_fu_543_p1 = m_fu_536_p3;

assign zext_ln954_1_fu_777_p1 = add_ln954_1_fu_772_p2;

assign zext_ln954_fu_527_p1 = add_ln954_fu_522_p2;

assign zext_ln955_1_fu_754_p1 = sub_ln955_1_fu_749_p2;

assign zext_ln955_fu_513_p1 = sub_ln955_fu_508_p2;

assign zext_ln961_1_fu_811_p1 = select_ln954_3_fu_787_p3;

assign zext_ln961_fu_547_p1 = select_ln954_reg_1580;

assign zext_ln962_fu_831_p1 = m_61_fu_821_p4;

endmodule //LLSSineReconstruction_calc_converge
