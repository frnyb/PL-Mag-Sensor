-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LLSSineReconstruction_atan2_cordic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    y_in : IN STD_LOGIC_VECTOR (31 downto 0);
    x_in : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of LLSSineReconstruction_atan2_cordic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3F490FDB : STD_LOGIC_VECTOR (31 downto 0) := "00111111010010010000111111011011";
    constant ap_const_lv32_C016CBE4 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000101101100101111100100";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_4016CBE4 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000101101100101111100100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_BF490FDB : STD_LOGIC_VECTOR (31 downto 0) := "10111111010010010000111111011011";
    constant ap_const_lv32_C0490FDB : STD_LOGIC_VECTOR (31 downto 0) := "11000000010010010000111111011011";
    constant ap_const_lv32_40490FDB : STD_LOGIC_VECTOR (31 downto 0) := "01000000010010010000111111011011";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3FC90FDB : STD_LOGIC_VECTOR (31 downto 0) := "00111111110010010000111111011011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_BFC90FDB : STD_LOGIC_VECTOR (31 downto 0) := "10111111110010010000111111011011";
    constant ap_const_lv31_3FC90FDB : STD_LOGIC_VECTOR (30 downto 0) := "0111111110010010000111111011011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_40490FDB : STD_LOGIC_VECTOR (30 downto 0) := "1000000010010010000111111011011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_Result_230_fu_220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_230_reg_546 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln757_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln757_reg_562 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_1_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_1_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln757_1_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln757_1_reg_571 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_575 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_1_reg_582 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln762_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln766_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln766_reg_586 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_342_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_reg_590 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln18_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_594 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_598 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_370_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln746_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln746_reg_619 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_2_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln746_1_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln746_1_reg_624 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_atan2_generic_float_s_fu_171_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_143_reg_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_i_reg_637 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_179_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal d_reg_647 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal bitcast_ln822_1_fu_452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln809_fu_470_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal bitcast_ln351_6_fu_484_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal bitcast_ln351_5_fu_495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal bitcast_ln351_4_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal bitcast_ln351_3_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal bitcast_ln351_2_fu_528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal bitcast_ln351_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_atan2_generic_float_s_fu_171_ap_start : STD_LOGIC;
    signal grp_atan2_generic_float_s_fu_171_ap_done : STD_LOGIC;
    signal grp_atan2_generic_float_s_fu_171_ap_idle : STD_LOGIC;
    signal grp_atan2_generic_float_s_fu_171_ap_ready : STD_LOGIC;
    signal grp_atan2_generic_float_s_fu_171_y_in : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atan2_generic_float_s_fu_171_x_in : STD_LOGIC_VECTOR (31 downto 0);
    signal c_reg_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_phi_mux_UnifiedRetVal_phi_fu_116_p42 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_reg_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln826_1_fu_465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_atan2_generic_float_s_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_179_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_186_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_190_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_4_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_fu_228_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln757_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_161_fu_238_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal xor_ln18_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_202_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln757_1_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_fu_212_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal xor_ln18_1_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_194_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln766_fu_308_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_318_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln766_fu_312_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_328_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_237_fu_362_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_fu_366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_238_fu_375_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_1_fu_379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_239_fu_388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_240_fu_396_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln746_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln746_1_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln746_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln822_fu_442_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln822_fu_446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln826_fu_456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln826_fu_459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_236_fu_477_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_235_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_234_fu_499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_233_fu_510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_232_fu_521_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_231_fu_532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln746_1_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component LLSSineReconstruction_atan2_generic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y_in : IN STD_LOGIC_VECTOR (31 downto 0);
        x_in : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LLSSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LLSSineReconstruction_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_atan2_generic_float_s_fu_171 : component LLSSineReconstruction_atan2_generic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atan2_generic_float_s_fu_171_ap_start,
        ap_done => grp_atan2_generic_float_s_fu_171_ap_done,
        ap_idle => grp_atan2_generic_float_s_fu_171_ap_idle,
        ap_ready => grp_atan2_generic_float_s_fu_171_ap_ready,
        y_in => grp_atan2_generic_float_s_fu_171_y_in,
        x_in => grp_atan2_generic_float_s_fu_171_x_in,
        ap_return => grp_atan2_generic_float_s_fu_171_ap_return);

    fsub_32ns_32ns_32_5_full_dsp_1_U714 : component LLSSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_179_p0,
        din1 => grp_fu_179_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_179_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U715 : component LLSSineReconstruction_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_186_p0,
        din1 => grp_fu_186_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_186_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_116_p42;
                end if; 
            end if;
        end if;
    end process;


    grp_atan2_generic_float_s_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atan2_generic_float_s_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_atan2_generic_float_s_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atan2_generic_float_s_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_atan2_generic_float_s_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((or_ln757_1_fu_284_p2 = ap_const_lv1_0) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((or_ln757_fu_260_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_7FFFFFFF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                UnifiedRetVal_reg_104 <= bitcast_ln351_6_fu_484_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                UnifiedRetVal_reg_104 <= bitcast_ln351_5_fu_495_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                UnifiedRetVal_reg_104 <= bitcast_ln351_4_fu_506_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                UnifiedRetVal_reg_104 <= bitcast_ln351_3_fu_517_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                UnifiedRetVal_reg_104 <= bitcast_ln351_2_fu_528_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                UnifiedRetVal_reg_104 <= bitcast_ln351_fu_539_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                UnifiedRetVal_reg_104 <= select_ln809_fu_470_p3;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_0) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_0;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_0) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_1_fu_356_p2) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_3F490FDB;
            elsif (((tmp_24_reg_590 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                UnifiedRetVal_reg_104 <= c_reg_90;
            elsif (((tmp_24_reg_590 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                UnifiedRetVal_reg_104 <= bitcast_ln822_1_fu_452_p1;
            elsif (((tmp_24_reg_590 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                UnifiedRetVal_reg_104 <= grp_fu_179_p2;
            elsif (((tmp_24_reg_590 = ap_const_lv2_3) and (icmp_ln766_reg_586 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_reg_598) and (ap_const_lv1_0 = and_ln18_reg_594) and (icmp_ln824_1_reg_582 = ap_const_lv1_0) and (icmp_ln824_reg_575 = ap_const_lv1_0) and (or_ln757_1_reg_571 = ap_const_lv1_1) and (or_ln757_reg_562 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                UnifiedRetVal_reg_104 <= bitcast_ln826_1_fu_465_p1;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_1) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_80000000;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_2) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_40490FDB;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_3) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_C0490FDB;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_1) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_1_fu_356_p2) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_BF490FDB;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_2) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_1_fu_356_p2) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_4016CBE4;
            elsif (((tmp_24_fu_342_p3 = ap_const_lv2_3) and (icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_1_fu_356_p2) and (ap_const_lv1_1 = and_ln18_fu_350_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_104 <= ap_const_lv32_C016CBE4;
            end if; 
        end if;
    end process;

    c_reg_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (ap_const_lv1_0 = and_ln18_fu_350_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_2_fu_404_p2 = ap_const_lv1_1))) then 
                c_reg_90 <= ap_const_lv32_3F490FDB;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                c_reg_90 <= tmp_i_143_reg_632;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                c_reg_90 <= grp_fu_179_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (ap_const_lv1_0 = and_ln18_fu_350_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    a_reg_602(30 downto 0) <= a_fu_370_p1(30 downto 0);
                    b_reg_609(30 downto 0) <= b_fu_383_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln18_1_reg_598 <= and_ln18_1_fu_356_p2;
                and_ln18_reg_594 <= and_ln18_fu_350_p2;
                tmp_24_reg_590 <= tmp_24_fu_342_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                d_reg_647 <= grp_fu_179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (ap_const_lv1_0 = and_ln18_fu_350_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_2_fu_404_p2 = ap_const_lv1_0))) then
                icmp_ln746_1_reg_624 <= icmp_ln746_1_fu_416_p2;
                icmp_ln746_reg_619 <= icmp_ln746_fu_410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (((icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1)) or ((ap_const_lv1_0 = and_ln762_fu_296_p2) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (icmp_ln828_fu_254_p2 = ap_const_lv1_0))))) then
                icmp_ln766_reg_586 <= icmp_ln766_fu_336_p2;
                icmp_ln824_1_reg_582 <= icmp_ln824_1_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln824_reg_575 <= icmp_ln824_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln828_1_reg_566 <= icmp_ln828_1_fu_278_p2;
                or_ln757_1_reg_571 <= or_ln757_1_fu_284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln828_reg_557 <= icmp_ln828_fu_254_p2;
                or_ln757_reg_562 <= or_ln757_fu_260_p2;
                p_Result_230_reg_546 <= data_V_4_fu_216_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_i_143_reg_632 <= grp_atan2_generic_float_s_fu_171_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_i_reg_637 <= grp_atan2_generic_float_s_fu_171_ap_return;
            end if;
        end if;
    end process;
    a_reg_602(31) <= '0';
    b_reg_609(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln828_fu_254_p2, or_ln757_fu_260_p2, or_ln757_1_fu_284_p2, icmp_ln824_fu_290_p2, icmp_ln824_1_fu_302_p2, and_ln762_fu_296_p2, icmp_ln766_fu_336_p2, and_ln18_fu_350_p2, and_ln18_1_fu_356_p2, icmp_ln824_2_fu_404_p2, ap_CS_fsm_state4, ap_CS_fsm_state7, grp_atan2_generic_float_s_fu_171_ap_done, p_Result_s_fu_194_p3, ap_CS_fsm_state2, and_ln746_1_fu_436_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln762_fu_296_p2) and (icmp_ln824_fu_290_p2 = ap_const_lv1_1) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (icmp_ln828_fu_254_p2 = ap_const_lv1_0) and (p_Result_s_fu_194_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln762_fu_296_p2) and (icmp_ln824_fu_290_p2 = ap_const_lv1_1) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (icmp_ln828_fu_254_p2 = ap_const_lv1_0) and (p_Result_s_fu_194_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (ap_const_lv1_0 = and_ln18_fu_350_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_2_fu_404_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_fu_356_p2) and (ap_const_lv1_0 = and_ln18_fu_350_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_2_fu_404_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_fu_350_p2) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln18_1_fu_356_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_1) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((icmp_ln766_fu_336_p2 = ap_const_lv1_1) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1)) or ((icmp_ln766_fu_336_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln762_fu_296_p2) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (icmp_ln828_fu_254_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_const_lv1_0 = and_ln762_fu_296_p2) and (icmp_ln824_fu_290_p2 = ap_const_lv1_1) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (icmp_ln828_fu_254_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif (((icmp_ln824_fu_290_p2 = ap_const_lv1_1) and (or_ln757_1_fu_284_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln762_fu_296_p2) and (or_ln757_fu_260_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((or_ln757_fu_260_p2 = ap_const_lv1_0) or ((or_ln757_1_fu_284_p2 = ap_const_lv1_0) or ((icmp_ln766_fu_336_p2 = ap_const_lv1_0) and (icmp_ln824_1_fu_302_p2 = ap_const_lv1_0) and (icmp_ln824_fu_290_p2 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln18_fu_350_p2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_lv1_1 = and_ln746_1_fu_436_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_atan2_generic_float_s_fu_171_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_atan2_generic_float_s_fu_171_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_fu_370_p1 <= zext_ln368_fu_366_p1;
    and_ln18_1_fu_356_p2 <= (icmp_ln828_fu_254_p2 and icmp_ln757_fu_242_p2);
    and_ln18_fu_350_p2 <= (icmp_ln828_1_fu_278_p2 and icmp_ln757_1_fu_266_p2);
    and_ln746_1_fu_436_p2 <= (grp_fu_186_p2 and and_ln746_fu_430_p2);
    and_ln746_fu_430_p2 <= (or_ln746_fu_422_p2 and or_ln746_1_fu_426_p2);
    and_ln762_fu_296_p2 <= (p_Result_s_fu_194_p3 and icmp_ln828_fu_254_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_116_p42_assign_proc : process(or_ln757_reg_562, or_ln757_1_reg_571, icmp_ln824_reg_575, icmp_ln824_1_reg_582, icmp_ln766_reg_586, tmp_24_reg_590, and_ln18_reg_594, and_ln18_1_reg_598, UnifiedRetVal_reg_104, bitcast_ln826_1_fu_465_p1, ap_CS_fsm_state18)
    begin
        if (((tmp_24_reg_590 = ap_const_lv2_3) and (icmp_ln766_reg_586 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_1_reg_598) and (ap_const_lv1_0 = and_ln18_reg_594) and (icmp_ln824_1_reg_582 = ap_const_lv1_0) and (icmp_ln824_reg_575 = ap_const_lv1_0) and (or_ln757_1_reg_571 = ap_const_lv1_1) and (or_ln757_reg_562 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_116_p42 <= bitcast_ln826_1_fu_465_p1;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_116_p42 <= UnifiedRetVal_reg_104;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_116_p42, ap_CS_fsm_state18, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_116_p42;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    b_fu_383_p1 <= zext_ln368_1_fu_379_p1;
    bitcast_ln351_2_fu_528_p1 <= p_Result_232_fu_521_p3;
    bitcast_ln351_3_fu_517_p1 <= p_Result_233_fu_510_p3;
    bitcast_ln351_4_fu_506_p1 <= p_Result_234_fu_499_p3;
    bitcast_ln351_5_fu_495_p1 <= p_Result_235_fu_488_p3;
    bitcast_ln351_6_fu_484_p1 <= p_Result_236_fu_477_p3;
    bitcast_ln351_fu_539_p1 <= p_Result_231_fu_532_p3;
    bitcast_ln822_1_fu_452_p1 <= xor_ln822_fu_446_p2;
    bitcast_ln822_fu_442_p1 <= c_reg_90;
    bitcast_ln826_1_fu_465_p1 <= xor_ln826_fu_459_p2;
    bitcast_ln826_fu_456_p1 <= d_reg_647;
    data_V_4_fu_216_p1 <= y_in;
    data_V_fu_190_p1 <= x_in;
    grp_atan2_generic_float_s_fu_171_ap_start <= grp_atan2_generic_float_s_fu_171_ap_start_reg;

    grp_atan2_generic_float_s_fu_171_x_in_assign_proc : process(a_reg_602, b_reg_609, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_atan2_generic_float_s_fu_171_x_in <= a_reg_602;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_atan2_generic_float_s_fu_171_x_in <= b_reg_609;
        else 
            grp_atan2_generic_float_s_fu_171_x_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_atan2_generic_float_s_fu_171_y_in_assign_proc : process(a_reg_602, b_reg_609, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_atan2_generic_float_s_fu_171_y_in <= b_reg_609;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_atan2_generic_float_s_fu_171_y_in <= a_reg_602;
        else 
            grp_atan2_generic_float_s_fu_171_y_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_179_p0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_179_p0 <= ap_const_lv32_40490FDB;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_179_p0 <= ap_const_lv32_3FC90FDB;
        else 
            grp_fu_179_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_179_p1_assign_proc : process(tmp_i_reg_637, c_reg_90, ap_CS_fsm_state8, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_179_p1 <= c_reg_90;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_179_p1 <= tmp_i_reg_637;
        else 
            grp_fu_179_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_186_p0 <= zext_ln368_fu_366_p1;
    grp_fu_186_p1 <= zext_ln368_1_fu_379_p1;
    icmp_ln746_1_fu_416_p2 <= "0" when (tmp_fu_202_p4 = ap_const_lv8_FF) else "1";
    icmp_ln746_fu_410_p2 <= "0" when (tmp_160_fu_228_p4 = ap_const_lv8_FF) else "1";
    icmp_ln757_1_fu_266_p2 <= "1" when (tmp_fu_202_p4 = ap_const_lv8_FF) else "0";
    icmp_ln757_fu_242_p2 <= "1" when (tmp_160_fu_228_p4 = ap_const_lv8_FF) else "0";
    icmp_ln766_fu_336_p2 <= "1" when (tmp_23_fu_328_p3 = ap_const_lv23_0) else "0";
    icmp_ln824_1_fu_302_p2 <= "1" when (tmp_fu_202_p4 = ap_const_lv8_0) else "0";
    icmp_ln824_2_fu_404_p2 <= "1" when (p_Result_239_fu_388_p3 = p_Result_240_fu_396_p3) else "0";
    icmp_ln824_fu_290_p2 <= "1" when (tmp_160_fu_228_p4 = ap_const_lv8_0) else "0";
    icmp_ln828_1_fu_278_p2 <= "1" when (tmp_159_fu_212_p1 = ap_const_lv23_0) else "0";
    icmp_ln828_fu_254_p2 <= "1" when (tmp_161_fu_238_p1 = ap_const_lv23_0) else "0";
    or_ln746_1_fu_426_p2 <= (icmp_ln828_1_reg_566 or icmp_ln746_1_reg_624);
    or_ln746_fu_422_p2 <= (icmp_ln828_reg_557 or icmp_ln746_reg_619);
    or_ln757_1_fu_284_p2 <= (xor_ln18_1_fu_272_p2 or icmp_ln828_1_fu_278_p2);
    or_ln757_fu_260_p2 <= (xor_ln18_fu_248_p2 or icmp_ln828_fu_254_p2);
    or_ln766_fu_312_p2 <= (trunc_ln766_fu_308_p1 or tmp_fu_202_p4);
    p_Result_230_fu_220_p3 <= data_V_4_fu_216_p1(31 downto 31);
    p_Result_231_fu_532_p3 <= (p_Result_230_reg_546 & ap_const_lv31_40490FDB);
    p_Result_232_fu_521_p3 <= (p_Result_230_reg_546 & ap_const_lv31_0);
    p_Result_233_fu_510_p3 <= (p_Result_230_reg_546 & ap_const_lv31_3FC90FDB);
    p_Result_234_fu_499_p3 <= (p_Result_230_reg_546 & ap_const_lv31_40490FDB);
    p_Result_235_fu_488_p3 <= (p_Result_230_reg_546 & ap_const_lv31_0);
    p_Result_236_fu_477_p3 <= (p_Result_230_reg_546 & ap_const_lv31_3FC90FDB);
    p_Result_237_fu_362_p1 <= data_V_4_fu_216_p1(31 - 1 downto 0);
    p_Result_238_fu_375_p1 <= data_V_fu_190_p1(31 - 1 downto 0);
    p_Result_239_fu_388_p3 <= (ap_const_lv1_0 & p_Result_238_fu_375_p1);
    p_Result_240_fu_396_p3 <= (ap_const_lv1_0 & p_Result_237_fu_362_p1);
    p_Result_s_fu_194_p3 <= data_V_fu_190_p1(31 downto 31);
    select_ln809_fu_470_p3 <= 
        ap_const_lv32_BFC90FDB when (p_Result_230_reg_546(0) = '1') else 
        ap_const_lv32_3FC90FDB;
    tmp_159_fu_212_p1 <= data_V_fu_190_p1(23 - 1 downto 0);
    tmp_160_fu_228_p4 <= data_V_4_fu_216_p1(30 downto 23);
    tmp_161_fu_238_p1 <= data_V_4_fu_216_p1(23 - 1 downto 0);
    tmp_23_fu_328_p3 <= (tmp_s_fu_318_p4 & or_ln766_fu_312_p2);
    tmp_24_fu_342_p3 <= (p_Result_s_fu_194_p3 & p_Result_230_fu_220_p3);
    tmp_fu_202_p4 <= data_V_fu_190_p1(30 downto 23);
    tmp_s_fu_318_p4 <= data_V_fu_190_p1(22 downto 8);
    trunc_ln766_fu_308_p1 <= data_V_fu_190_p1(8 - 1 downto 0);
    xor_ln18_1_fu_272_p2 <= (icmp_ln757_1_fu_266_p2 xor ap_const_lv1_1);
    xor_ln18_fu_248_p2 <= (icmp_ln757_fu_242_p2 xor ap_const_lv1_1);
    xor_ln822_fu_446_p2 <= (bitcast_ln822_fu_442_p1 xor ap_const_lv32_80000000);
    xor_ln826_fu_459_p2 <= (bitcast_ln826_fu_456_p1 xor ap_const_lv32_80000000);
    zext_ln368_1_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_238_fu_375_p1),32));
    zext_ln368_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_237_fu_362_p1),32));
end behav;
