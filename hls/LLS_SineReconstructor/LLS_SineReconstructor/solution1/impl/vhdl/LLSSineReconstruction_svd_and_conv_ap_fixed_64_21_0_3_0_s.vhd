-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LLSSineReconstruction_svd_and_conv_ap_fixed_64_21_0_3_0_s is
port (
    conv_strm6_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    conv_strm6_full_n : IN STD_LOGIC;
    conv_strm6_write : OUT STD_LOGIC;
    s_strm4_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    s_strm4_full_n : IN STD_LOGIC;
    s_strm4_write : OUT STD_LOGIC;
    c_strm5_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    c_strm5_full_n : IN STD_LOGIC;
    c_strm5_write : OUT STD_LOGIC;
    alpha : IN STD_LOGIC_VECTOR (63 downto 0);
    beta : IN STD_LOGIC_VECTOR (63 downto 0);
    gamma : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    alpha_ap_vld : IN STD_LOGIC;
    beta_ap_vld : IN STD_LOGIC;
    gamma_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of LLSSineReconstruction_svd_and_conv_ap_fixed_64_21_0_3_0_s is 
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';

attribute shreg_extract : string;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_start : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_full_n : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_done : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_continue : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_idle : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_ready : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_out : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_write : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out_write : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out1_write : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out_write : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out2_din : STD_LOGIC_VECTOR (63 downto 0);
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out2_write : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out_write : STD_LOGIC;
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out3_din : STD_LOGIC_VECTOR (63 downto 0);
    signal svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out3_write : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_start : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_done : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_continue : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_idle : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_ready : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_alpha_read : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_beta_read : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_gamma_read : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_s_strm4_din : STD_LOGIC_VECTOR (63 downto 0);
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_s_strm4_write : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_c_strm5_din : STD_LOGIC_VECTOR (63 downto 0);
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_c_strm5_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_ap_start : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_ap_done : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_ap_continue : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_ap_idle : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_ap_ready : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_conv_strm6_din : STD_LOGIC_VECTOR (63 downto 0);
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_conv_strm6_write : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_alpha_read : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_beta_read : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_gamma_read : STD_LOGIC;
    signal alpha_c_full_n : STD_LOGIC;
    signal alpha_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal alpha_c_empty_n : STD_LOGIC;
    signal alpha_c18_full_n : STD_LOGIC;
    signal alpha_c18_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal alpha_c18_empty_n : STD_LOGIC;
    signal beta_c_full_n : STD_LOGIC;
    signal beta_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal beta_c_empty_n : STD_LOGIC;
    signal beta_c19_full_n : STD_LOGIC;
    signal beta_c19_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal beta_c19_empty_n : STD_LOGIC;
    signal gamma_c_full_n : STD_LOGIC;
    signal gamma_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal gamma_c_empty_n : STD_LOGIC;
    signal gamma_c20_full_n : STD_LOGIC;
    signal gamma_c20_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal gamma_c20_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_full_n : STD_LOGIC;
    signal start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_empty_n : STD_LOGIC;
    signal start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_full_n : STD_LOGIC;
    signal start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_empty_n : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_start_full_n : STD_LOGIC;
    signal jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_start_write : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_start_full_n : STD_LOGIC;
    signal calc_converge_ap_fixed_64_21_0_3_0_U0_start_write : STD_LOGIC;

    component LLSSineReconstruction_svd_and_conv_ap_fixed_64_21_0_3_0_entry61 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        alpha : IN STD_LOGIC_VECTOR (63 downto 0);
        beta : IN STD_LOGIC_VECTOR (63 downto 0);
        gamma : IN STD_LOGIC_VECTOR (63 downto 0);
        alpha_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        alpha_out_full_n : IN STD_LOGIC;
        alpha_out_write : OUT STD_LOGIC;
        alpha_out1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        alpha_out1_full_n : IN STD_LOGIC;
        alpha_out1_write : OUT STD_LOGIC;
        beta_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        beta_out_full_n : IN STD_LOGIC;
        beta_out_write : OUT STD_LOGIC;
        beta_out2_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        beta_out2_full_n : IN STD_LOGIC;
        beta_out2_write : OUT STD_LOGIC;
        gamma_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        gamma_out_full_n : IN STD_LOGIC;
        gamma_out_write : OUT STD_LOGIC;
        gamma_out3_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        gamma_out3_full_n : IN STD_LOGIC;
        gamma_out3_write : OUT STD_LOGIC );
    end component;


    component LLSSineReconstruction_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        alpha_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        alpha_empty_n : IN STD_LOGIC;
        alpha_read : OUT STD_LOGIC;
        beta_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        beta_empty_n : IN STD_LOGIC;
        beta_read : OUT STD_LOGIC;
        gamma_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        gamma_empty_n : IN STD_LOGIC;
        gamma_read : OUT STD_LOGIC;
        s_strm4_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_strm4_full_n : IN STD_LOGIC;
        s_strm4_write : OUT STD_LOGIC;
        c_strm5_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_strm5_full_n : IN STD_LOGIC;
        c_strm5_write : OUT STD_LOGIC );
    end component;


    component LLSSineReconstruction_calc_converge_ap_fixed_64_21_0_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_strm6_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv_strm6_full_n : IN STD_LOGIC;
        conv_strm6_write : OUT STD_LOGIC;
        alpha_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        alpha_empty_n : IN STD_LOGIC;
        alpha_read : OUT STD_LOGIC;
        beta_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        beta_empty_n : IN STD_LOGIC;
        beta_read : OUT STD_LOGIC;
        gamma_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        gamma_empty_n : IN STD_LOGIC;
        gamma_read : OUT STD_LOGIC );
    end component;


    component LLSSineReconstruction_fifo_w64_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component LLSSineReconstruction_start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component LLSSineReconstruction_start_for_calc_converge_ap_fixed_64_21_0_3_0_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0 : component LLSSineReconstruction_svd_and_conv_ap_fixed_64_21_0_3_0_entry61
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_start,
        start_full_n => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_full_n,
        ap_done => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_done,
        ap_continue => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_continue,
        ap_idle => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_idle,
        ap_ready => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_ready,
        start_out => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_out,
        start_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_write,
        alpha => alpha,
        beta => beta,
        gamma => gamma,
        alpha_out_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out_din,
        alpha_out_full_n => alpha_c_full_n,
        alpha_out_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out_write,
        alpha_out1_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out1_din,
        alpha_out1_full_n => alpha_c18_full_n,
        alpha_out1_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out1_write,
        beta_out_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out_din,
        beta_out_full_n => beta_c_full_n,
        beta_out_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out_write,
        beta_out2_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out2_din,
        beta_out2_full_n => beta_c19_full_n,
        beta_out2_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out2_write,
        gamma_out_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out_din,
        gamma_out_full_n => gamma_c_full_n,
        gamma_out_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out_write,
        gamma_out3_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out3_din,
        gamma_out3_full_n => gamma_c20_full_n,
        gamma_out3_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out3_write);

    jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0 : component LLSSineReconstruction_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_start,
        ap_done => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_done,
        ap_continue => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_continue,
        ap_idle => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_idle,
        ap_ready => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_ready,
        alpha_dout => alpha_c_dout,
        alpha_empty_n => alpha_c_empty_n,
        alpha_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_alpha_read,
        beta_dout => beta_c_dout,
        beta_empty_n => beta_c_empty_n,
        beta_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_beta_read,
        gamma_dout => gamma_c_dout,
        gamma_empty_n => gamma_c_empty_n,
        gamma_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_gamma_read,
        s_strm4_din => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_s_strm4_din,
        s_strm4_full_n => s_strm4_full_n,
        s_strm4_write => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_s_strm4_write,
        c_strm5_din => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_c_strm5_din,
        c_strm5_full_n => c_strm5_full_n,
        c_strm5_write => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_c_strm5_write);

    calc_converge_ap_fixed_64_21_0_3_0_U0 : component LLSSineReconstruction_calc_converge_ap_fixed_64_21_0_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => calc_converge_ap_fixed_64_21_0_3_0_U0_ap_start,
        ap_done => calc_converge_ap_fixed_64_21_0_3_0_U0_ap_done,
        ap_continue => calc_converge_ap_fixed_64_21_0_3_0_U0_ap_continue,
        ap_idle => calc_converge_ap_fixed_64_21_0_3_0_U0_ap_idle,
        ap_ready => calc_converge_ap_fixed_64_21_0_3_0_U0_ap_ready,
        conv_strm6_din => calc_converge_ap_fixed_64_21_0_3_0_U0_conv_strm6_din,
        conv_strm6_full_n => conv_strm6_full_n,
        conv_strm6_write => calc_converge_ap_fixed_64_21_0_3_0_U0_conv_strm6_write,
        alpha_dout => alpha_c18_dout,
        alpha_empty_n => alpha_c18_empty_n,
        alpha_read => calc_converge_ap_fixed_64_21_0_3_0_U0_alpha_read,
        beta_dout => beta_c19_dout,
        beta_empty_n => beta_c19_empty_n,
        beta_read => calc_converge_ap_fixed_64_21_0_3_0_U0_beta_read,
        gamma_dout => gamma_c20_dout,
        gamma_empty_n => gamma_c20_empty_n,
        gamma_read => calc_converge_ap_fixed_64_21_0_3_0_U0_gamma_read);

    alpha_c_U : component LLSSineReconstruction_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out_din,
        if_full_n => alpha_c_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out_write,
        if_dout => alpha_c_dout,
        if_empty_n => alpha_c_empty_n,
        if_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_alpha_read);

    alpha_c18_U : component LLSSineReconstruction_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out1_din,
        if_full_n => alpha_c18_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_alpha_out1_write,
        if_dout => alpha_c18_dout,
        if_empty_n => alpha_c18_empty_n,
        if_read => calc_converge_ap_fixed_64_21_0_3_0_U0_alpha_read);

    beta_c_U : component LLSSineReconstruction_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out_din,
        if_full_n => beta_c_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out_write,
        if_dout => beta_c_dout,
        if_empty_n => beta_c_empty_n,
        if_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_beta_read);

    beta_c19_U : component LLSSineReconstruction_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out2_din,
        if_full_n => beta_c19_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_beta_out2_write,
        if_dout => beta_c19_dout,
        if_empty_n => beta_c19_empty_n,
        if_read => calc_converge_ap_fixed_64_21_0_3_0_U0_beta_read);

    gamma_c_U : component LLSSineReconstruction_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out_din,
        if_full_n => gamma_c_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out_write,
        if_dout => gamma_c_dout,
        if_empty_n => gamma_c_empty_n,
        if_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_gamma_read);

    gamma_c20_U : component LLSSineReconstruction_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out3_din,
        if_full_n => gamma_c20_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_gamma_out3_write,
        if_dout => gamma_c20_dout,
        if_empty_n => gamma_c20_empty_n,
        if_read => calc_converge_ap_fixed_64_21_0_3_0_U0_gamma_read);

    start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_U : component LLSSineReconstruction_start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_din,
        if_full_n => start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_write,
        if_dout => start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_dout,
        if_empty_n => start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_empty_n,
        if_read => jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_ready);

    start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_U : component LLSSineReconstruction_start_for_calc_converge_ap_fixed_64_21_0_3_0_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_din,
        if_full_n => start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_full_n,
        if_write => svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_write,
        if_dout => start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_dout,
        if_empty_n => start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_empty_n,
        if_read => calc_converge_ap_fixed_64_21_0_3_0_U0_ap_ready);




    ap_done <= ap_sync_done;
    ap_idle <= (svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_idle and jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_idle and calc_converge_ap_fixed_64_21_0_3_0_U0_ap_idle);
    ap_ready <= svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_done and calc_converge_ap_fixed_64_21_0_3_0_U0_ap_done);
    ap_sync_ready <= svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_ready;
    c_strm5_din <= jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_c_strm5_din;
    c_strm5_write <= jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_c_strm5_write;
    calc_converge_ap_fixed_64_21_0_3_0_U0_ap_continue <= ap_sync_continue;
    calc_converge_ap_fixed_64_21_0_3_0_U0_ap_start <= start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_empty_n;
    calc_converge_ap_fixed_64_21_0_3_0_U0_start_full_n <= ap_const_logic_1;
    calc_converge_ap_fixed_64_21_0_3_0_U0_start_write <= ap_const_logic_0;
    conv_strm6_din <= calc_converge_ap_fixed_64_21_0_3_0_U0_conv_strm6_din;
    conv_strm6_write <= calc_converge_ap_fixed_64_21_0_3_0_U0_conv_strm6_write;
    jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_continue <= ap_sync_continue;
    jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_ap_start <= start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_empty_n;
    jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_start_full_n <= ap_const_logic_1;
    jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_start_write <= ap_const_logic_0;
    s_strm4_din <= jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_s_strm4_din;
    s_strm4_write <= jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_s_strm4_write;
    start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_din <= (0=>ap_const_logic_1, others=>'-');
    svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_continue <= ap_const_logic_1;
    svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_ap_start <= ap_start;
    svd_and_conv_ap_fixed_64_21_0_3_0_entry61_U0_start_full_n <= (start_for_jacobi_rotation_2x2_ap_fixed_64_21_0_3_0_U0_full_n and start_for_calc_converge_ap_fixed_64_21_0_3_0_U0_full_n);
end behav;
