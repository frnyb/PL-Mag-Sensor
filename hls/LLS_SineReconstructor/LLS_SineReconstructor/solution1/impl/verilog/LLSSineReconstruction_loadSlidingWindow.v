// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_loadSlidingWindow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buffer_in_0_address0,
        buffer_in_0_ce0,
        buffer_in_0_q0,
        buffer_in_1_address0,
        buffer_in_1_ce0,
        buffer_in_1_q0,
        buffer_in_2_address0,
        buffer_in_2_ce0,
        buffer_in_2_q0,
        buffer_in_3_address0,
        buffer_in_3_ce0,
        buffer_in_3_q0,
        buffer_in_4_address0,
        buffer_in_4_ce0,
        buffer_in_4_q0,
        buffer_in_5_address0,
        buffer_in_5_ce0,
        buffer_in_5_q0,
        buffer_in_6_address0,
        buffer_in_6_ce0,
        buffer_in_6_q0,
        buffer_in_7_address0,
        buffer_in_7_ce0,
        buffer_in_7_q0,
        buffer_in_8_address0,
        buffer_in_8_ce0,
        buffer_in_8_q0,
        buffer_in_9_address0,
        buffer_in_9_ce0,
        buffer_in_9_q0,
        buffer_in_10_address0,
        buffer_in_10_ce0,
        buffer_in_10_q0,
        buffer_in_11_address0,
        buffer_in_11_ce0,
        buffer_in_11_q0,
        sliding_window_front_ptr_s_i,
        sliding_window_front_ptr_s_o,
        sliding_window_front_ptr_s_o_ap_vld,
        sliding_window_buffer_samples_sample_V_0_0_address0,
        sliding_window_buffer_samples_sample_V_0_0_ce0,
        sliding_window_buffer_samples_sample_V_0_0_we0,
        sliding_window_buffer_samples_sample_V_0_0_d0,
        sliding_window_buffer_samples_sample_V_0_1_address0,
        sliding_window_buffer_samples_sample_V_0_1_ce0,
        sliding_window_buffer_samples_sample_V_0_1_we0,
        sliding_window_buffer_samples_sample_V_0_1_d0,
        sliding_window_buffer_samples_sample_V_0_2_address0,
        sliding_window_buffer_samples_sample_V_0_2_ce0,
        sliding_window_buffer_samples_sample_V_0_2_we0,
        sliding_window_buffer_samples_sample_V_0_2_d0,
        sliding_window_buffer_samples_sample_V_0_3_address0,
        sliding_window_buffer_samples_sample_V_0_3_ce0,
        sliding_window_buffer_samples_sample_V_0_3_we0,
        sliding_window_buffer_samples_sample_V_0_3_d0,
        sliding_window_buffer_samples_sample_V_0_4_address0,
        sliding_window_buffer_samples_sample_V_0_4_ce0,
        sliding_window_buffer_samples_sample_V_0_4_we0,
        sliding_window_buffer_samples_sample_V_0_4_d0,
        sliding_window_buffer_samples_sample_V_0_5_address0,
        sliding_window_buffer_samples_sample_V_0_5_ce0,
        sliding_window_buffer_samples_sample_V_0_5_we0,
        sliding_window_buffer_samples_sample_V_0_5_d0,
        sliding_window_buffer_samples_sample_V_0_6_address0,
        sliding_window_buffer_samples_sample_V_0_6_ce0,
        sliding_window_buffer_samples_sample_V_0_6_we0,
        sliding_window_buffer_samples_sample_V_0_6_d0,
        sliding_window_buffer_samples_sample_V_0_7_address0,
        sliding_window_buffer_samples_sample_V_0_7_ce0,
        sliding_window_buffer_samples_sample_V_0_7_we0,
        sliding_window_buffer_samples_sample_V_0_7_d0,
        sliding_window_buffer_samples_sample_V_0_8_address0,
        sliding_window_buffer_samples_sample_V_0_8_ce0,
        sliding_window_buffer_samples_sample_V_0_8_we0,
        sliding_window_buffer_samples_sample_V_0_8_d0,
        sliding_window_buffer_samples_sample_V_0_9_address0,
        sliding_window_buffer_samples_sample_V_0_9_ce0,
        sliding_window_buffer_samples_sample_V_0_9_we0,
        sliding_window_buffer_samples_sample_V_0_9_d0,
        sliding_window_buffer_samples_sample_V_0_10_address0,
        sliding_window_buffer_samples_sample_V_0_10_ce0,
        sliding_window_buffer_samples_sample_V_0_10_we0,
        sliding_window_buffer_samples_sample_V_0_10_d0,
        sliding_window_buffer_samples_sample_V_0_11_address0,
        sliding_window_buffer_samples_sample_V_0_11_ce0,
        sliding_window_buffer_samples_sample_V_0_11_we0,
        sliding_window_buffer_samples_sample_V_0_11_d0,
        sliding_window_buffer_samples_timestamp_V_0_0_address0,
        sliding_window_buffer_samples_timestamp_V_0_0_ce0,
        sliding_window_buffer_samples_timestamp_V_0_0_we0,
        sliding_window_buffer_samples_timestamp_V_0_0_d0,
        sliding_window_buffer_samples_timestamp_V_0_1_address0,
        sliding_window_buffer_samples_timestamp_V_0_1_ce0,
        sliding_window_buffer_samples_timestamp_V_0_1_we0,
        sliding_window_buffer_samples_timestamp_V_0_1_d0,
        sliding_window_buffer_samples_timestamp_V_0_2_address0,
        sliding_window_buffer_samples_timestamp_V_0_2_ce0,
        sliding_window_buffer_samples_timestamp_V_0_2_we0,
        sliding_window_buffer_samples_timestamp_V_0_2_d0,
        sliding_window_buffer_samples_timestamp_V_0_3_address0,
        sliding_window_buffer_samples_timestamp_V_0_3_ce0,
        sliding_window_buffer_samples_timestamp_V_0_3_we0,
        sliding_window_buffer_samples_timestamp_V_0_3_d0,
        sliding_window_buffer_samples_timestamp_V_0_4_address0,
        sliding_window_buffer_samples_timestamp_V_0_4_ce0,
        sliding_window_buffer_samples_timestamp_V_0_4_we0,
        sliding_window_buffer_samples_timestamp_V_0_4_d0,
        sliding_window_buffer_samples_timestamp_V_0_5_address0,
        sliding_window_buffer_samples_timestamp_V_0_5_ce0,
        sliding_window_buffer_samples_timestamp_V_0_5_we0,
        sliding_window_buffer_samples_timestamp_V_0_5_d0,
        sliding_window_buffer_samples_timestamp_V_0_6_address0,
        sliding_window_buffer_samples_timestamp_V_0_6_ce0,
        sliding_window_buffer_samples_timestamp_V_0_6_we0,
        sliding_window_buffer_samples_timestamp_V_0_6_d0,
        sliding_window_buffer_samples_timestamp_V_0_7_address0,
        sliding_window_buffer_samples_timestamp_V_0_7_ce0,
        sliding_window_buffer_samples_timestamp_V_0_7_we0,
        sliding_window_buffer_samples_timestamp_V_0_7_d0,
        sliding_window_buffer_samples_timestamp_V_0_8_address0,
        sliding_window_buffer_samples_timestamp_V_0_8_ce0,
        sliding_window_buffer_samples_timestamp_V_0_8_we0,
        sliding_window_buffer_samples_timestamp_V_0_8_d0,
        sliding_window_buffer_samples_timestamp_V_0_9_address0,
        sliding_window_buffer_samples_timestamp_V_0_9_ce0,
        sliding_window_buffer_samples_timestamp_V_0_9_we0,
        sliding_window_buffer_samples_timestamp_V_0_9_d0,
        sliding_window_buffer_samples_timestamp_V_0_10_address0,
        sliding_window_buffer_samples_timestamp_V_0_10_ce0,
        sliding_window_buffer_samples_timestamp_V_0_10_we0,
        sliding_window_buffer_samples_timestamp_V_0_10_d0,
        sliding_window_buffer_samples_timestamp_V_0_11_address0,
        sliding_window_buffer_samples_timestamp_V_0_11_ce0,
        sliding_window_buffer_samples_timestamp_V_0_11_we0,
        sliding_window_buffer_samples_timestamp_V_0_11_d0,
        sliding_window_buffer_samples_sample_V_1_0_address0,
        sliding_window_buffer_samples_sample_V_1_0_ce0,
        sliding_window_buffer_samples_sample_V_1_0_we0,
        sliding_window_buffer_samples_sample_V_1_0_d0,
        sliding_window_buffer_samples_sample_V_1_1_address0,
        sliding_window_buffer_samples_sample_V_1_1_ce0,
        sliding_window_buffer_samples_sample_V_1_1_we0,
        sliding_window_buffer_samples_sample_V_1_1_d0,
        sliding_window_buffer_samples_sample_V_1_2_address0,
        sliding_window_buffer_samples_sample_V_1_2_ce0,
        sliding_window_buffer_samples_sample_V_1_2_we0,
        sliding_window_buffer_samples_sample_V_1_2_d0,
        sliding_window_buffer_samples_sample_V_1_3_address0,
        sliding_window_buffer_samples_sample_V_1_3_ce0,
        sliding_window_buffer_samples_sample_V_1_3_we0,
        sliding_window_buffer_samples_sample_V_1_3_d0,
        sliding_window_buffer_samples_sample_V_1_4_address0,
        sliding_window_buffer_samples_sample_V_1_4_ce0,
        sliding_window_buffer_samples_sample_V_1_4_we0,
        sliding_window_buffer_samples_sample_V_1_4_d0,
        sliding_window_buffer_samples_sample_V_1_5_address0,
        sliding_window_buffer_samples_sample_V_1_5_ce0,
        sliding_window_buffer_samples_sample_V_1_5_we0,
        sliding_window_buffer_samples_sample_V_1_5_d0,
        sliding_window_buffer_samples_sample_V_1_6_address0,
        sliding_window_buffer_samples_sample_V_1_6_ce0,
        sliding_window_buffer_samples_sample_V_1_6_we0,
        sliding_window_buffer_samples_sample_V_1_6_d0,
        sliding_window_buffer_samples_sample_V_1_7_address0,
        sliding_window_buffer_samples_sample_V_1_7_ce0,
        sliding_window_buffer_samples_sample_V_1_7_we0,
        sliding_window_buffer_samples_sample_V_1_7_d0,
        sliding_window_buffer_samples_sample_V_1_8_address0,
        sliding_window_buffer_samples_sample_V_1_8_ce0,
        sliding_window_buffer_samples_sample_V_1_8_we0,
        sliding_window_buffer_samples_sample_V_1_8_d0,
        sliding_window_buffer_samples_sample_V_1_9_address0,
        sliding_window_buffer_samples_sample_V_1_9_ce0,
        sliding_window_buffer_samples_sample_V_1_9_we0,
        sliding_window_buffer_samples_sample_V_1_9_d0,
        sliding_window_buffer_samples_sample_V_1_10_address0,
        sliding_window_buffer_samples_sample_V_1_10_ce0,
        sliding_window_buffer_samples_sample_V_1_10_we0,
        sliding_window_buffer_samples_sample_V_1_10_d0,
        sliding_window_buffer_samples_sample_V_1_11_address0,
        sliding_window_buffer_samples_sample_V_1_11_ce0,
        sliding_window_buffer_samples_sample_V_1_11_we0,
        sliding_window_buffer_samples_sample_V_1_11_d0,
        sliding_window_buffer_samples_timestamp_V_1_0_address0,
        sliding_window_buffer_samples_timestamp_V_1_0_ce0,
        sliding_window_buffer_samples_timestamp_V_1_0_we0,
        sliding_window_buffer_samples_timestamp_V_1_0_d0,
        sliding_window_buffer_samples_timestamp_V_1_1_address0,
        sliding_window_buffer_samples_timestamp_V_1_1_ce0,
        sliding_window_buffer_samples_timestamp_V_1_1_we0,
        sliding_window_buffer_samples_timestamp_V_1_1_d0,
        sliding_window_buffer_samples_timestamp_V_1_2_address0,
        sliding_window_buffer_samples_timestamp_V_1_2_ce0,
        sliding_window_buffer_samples_timestamp_V_1_2_we0,
        sliding_window_buffer_samples_timestamp_V_1_2_d0,
        sliding_window_buffer_samples_timestamp_V_1_3_address0,
        sliding_window_buffer_samples_timestamp_V_1_3_ce0,
        sliding_window_buffer_samples_timestamp_V_1_3_we0,
        sliding_window_buffer_samples_timestamp_V_1_3_d0,
        sliding_window_buffer_samples_timestamp_V_1_4_address0,
        sliding_window_buffer_samples_timestamp_V_1_4_ce0,
        sliding_window_buffer_samples_timestamp_V_1_4_we0,
        sliding_window_buffer_samples_timestamp_V_1_4_d0,
        sliding_window_buffer_samples_timestamp_V_1_5_address0,
        sliding_window_buffer_samples_timestamp_V_1_5_ce0,
        sliding_window_buffer_samples_timestamp_V_1_5_we0,
        sliding_window_buffer_samples_timestamp_V_1_5_d0,
        sliding_window_buffer_samples_timestamp_V_1_6_address0,
        sliding_window_buffer_samples_timestamp_V_1_6_ce0,
        sliding_window_buffer_samples_timestamp_V_1_6_we0,
        sliding_window_buffer_samples_timestamp_V_1_6_d0,
        sliding_window_buffer_samples_timestamp_V_1_7_address0,
        sliding_window_buffer_samples_timestamp_V_1_7_ce0,
        sliding_window_buffer_samples_timestamp_V_1_7_we0,
        sliding_window_buffer_samples_timestamp_V_1_7_d0,
        sliding_window_buffer_samples_timestamp_V_1_8_address0,
        sliding_window_buffer_samples_timestamp_V_1_8_ce0,
        sliding_window_buffer_samples_timestamp_V_1_8_we0,
        sliding_window_buffer_samples_timestamp_V_1_8_d0,
        sliding_window_buffer_samples_timestamp_V_1_9_address0,
        sliding_window_buffer_samples_timestamp_V_1_9_ce0,
        sliding_window_buffer_samples_timestamp_V_1_9_we0,
        sliding_window_buffer_samples_timestamp_V_1_9_d0,
        sliding_window_buffer_samples_timestamp_V_1_10_address0,
        sliding_window_buffer_samples_timestamp_V_1_10_ce0,
        sliding_window_buffer_samples_timestamp_V_1_10_we0,
        sliding_window_buffer_samples_timestamp_V_1_10_d0,
        sliding_window_buffer_samples_timestamp_V_1_11_address0,
        sliding_window_buffer_samples_timestamp_V_1_11_ce0,
        sliding_window_buffer_samples_timestamp_V_1_11_we0,
        sliding_window_buffer_samples_timestamp_V_1_11_d0,
        sliding_window_buffer_samples_sample_V_2_0_address0,
        sliding_window_buffer_samples_sample_V_2_0_ce0,
        sliding_window_buffer_samples_sample_V_2_0_we0,
        sliding_window_buffer_samples_sample_V_2_0_d0,
        sliding_window_buffer_samples_sample_V_2_1_address0,
        sliding_window_buffer_samples_sample_V_2_1_ce0,
        sliding_window_buffer_samples_sample_V_2_1_we0,
        sliding_window_buffer_samples_sample_V_2_1_d0,
        sliding_window_buffer_samples_sample_V_2_2_address0,
        sliding_window_buffer_samples_sample_V_2_2_ce0,
        sliding_window_buffer_samples_sample_V_2_2_we0,
        sliding_window_buffer_samples_sample_V_2_2_d0,
        sliding_window_buffer_samples_sample_V_2_3_address0,
        sliding_window_buffer_samples_sample_V_2_3_ce0,
        sliding_window_buffer_samples_sample_V_2_3_we0,
        sliding_window_buffer_samples_sample_V_2_3_d0,
        sliding_window_buffer_samples_sample_V_2_4_address0,
        sliding_window_buffer_samples_sample_V_2_4_ce0,
        sliding_window_buffer_samples_sample_V_2_4_we0,
        sliding_window_buffer_samples_sample_V_2_4_d0,
        sliding_window_buffer_samples_sample_V_2_5_address0,
        sliding_window_buffer_samples_sample_V_2_5_ce0,
        sliding_window_buffer_samples_sample_V_2_5_we0,
        sliding_window_buffer_samples_sample_V_2_5_d0,
        sliding_window_buffer_samples_sample_V_2_6_address0,
        sliding_window_buffer_samples_sample_V_2_6_ce0,
        sliding_window_buffer_samples_sample_V_2_6_we0,
        sliding_window_buffer_samples_sample_V_2_6_d0,
        sliding_window_buffer_samples_sample_V_2_7_address0,
        sliding_window_buffer_samples_sample_V_2_7_ce0,
        sliding_window_buffer_samples_sample_V_2_7_we0,
        sliding_window_buffer_samples_sample_V_2_7_d0,
        sliding_window_buffer_samples_sample_V_2_8_address0,
        sliding_window_buffer_samples_sample_V_2_8_ce0,
        sliding_window_buffer_samples_sample_V_2_8_we0,
        sliding_window_buffer_samples_sample_V_2_8_d0,
        sliding_window_buffer_samples_sample_V_2_9_address0,
        sliding_window_buffer_samples_sample_V_2_9_ce0,
        sliding_window_buffer_samples_sample_V_2_9_we0,
        sliding_window_buffer_samples_sample_V_2_9_d0,
        sliding_window_buffer_samples_sample_V_2_10_address0,
        sliding_window_buffer_samples_sample_V_2_10_ce0,
        sliding_window_buffer_samples_sample_V_2_10_we0,
        sliding_window_buffer_samples_sample_V_2_10_d0,
        sliding_window_buffer_samples_sample_V_2_11_address0,
        sliding_window_buffer_samples_sample_V_2_11_ce0,
        sliding_window_buffer_samples_sample_V_2_11_we0,
        sliding_window_buffer_samples_sample_V_2_11_d0,
        sliding_window_buffer_samples_timestamp_V_2_0_address0,
        sliding_window_buffer_samples_timestamp_V_2_0_ce0,
        sliding_window_buffer_samples_timestamp_V_2_0_we0,
        sliding_window_buffer_samples_timestamp_V_2_0_d0,
        sliding_window_buffer_samples_timestamp_V_2_1_address0,
        sliding_window_buffer_samples_timestamp_V_2_1_ce0,
        sliding_window_buffer_samples_timestamp_V_2_1_we0,
        sliding_window_buffer_samples_timestamp_V_2_1_d0,
        sliding_window_buffer_samples_timestamp_V_2_2_address0,
        sliding_window_buffer_samples_timestamp_V_2_2_ce0,
        sliding_window_buffer_samples_timestamp_V_2_2_we0,
        sliding_window_buffer_samples_timestamp_V_2_2_d0,
        sliding_window_buffer_samples_timestamp_V_2_3_address0,
        sliding_window_buffer_samples_timestamp_V_2_3_ce0,
        sliding_window_buffer_samples_timestamp_V_2_3_we0,
        sliding_window_buffer_samples_timestamp_V_2_3_d0,
        sliding_window_buffer_samples_timestamp_V_2_4_address0,
        sliding_window_buffer_samples_timestamp_V_2_4_ce0,
        sliding_window_buffer_samples_timestamp_V_2_4_we0,
        sliding_window_buffer_samples_timestamp_V_2_4_d0,
        sliding_window_buffer_samples_timestamp_V_2_5_address0,
        sliding_window_buffer_samples_timestamp_V_2_5_ce0,
        sliding_window_buffer_samples_timestamp_V_2_5_we0,
        sliding_window_buffer_samples_timestamp_V_2_5_d0,
        sliding_window_buffer_samples_timestamp_V_2_6_address0,
        sliding_window_buffer_samples_timestamp_V_2_6_ce0,
        sliding_window_buffer_samples_timestamp_V_2_6_we0,
        sliding_window_buffer_samples_timestamp_V_2_6_d0,
        sliding_window_buffer_samples_timestamp_V_2_7_address0,
        sliding_window_buffer_samples_timestamp_V_2_7_ce0,
        sliding_window_buffer_samples_timestamp_V_2_7_we0,
        sliding_window_buffer_samples_timestamp_V_2_7_d0,
        sliding_window_buffer_samples_timestamp_V_2_8_address0,
        sliding_window_buffer_samples_timestamp_V_2_8_ce0,
        sliding_window_buffer_samples_timestamp_V_2_8_we0,
        sliding_window_buffer_samples_timestamp_V_2_8_d0,
        sliding_window_buffer_samples_timestamp_V_2_9_address0,
        sliding_window_buffer_samples_timestamp_V_2_9_ce0,
        sliding_window_buffer_samples_timestamp_V_2_9_we0,
        sliding_window_buffer_samples_timestamp_V_2_9_d0,
        sliding_window_buffer_samples_timestamp_V_2_10_address0,
        sliding_window_buffer_samples_timestamp_V_2_10_ce0,
        sliding_window_buffer_samples_timestamp_V_2_10_we0,
        sliding_window_buffer_samples_timestamp_V_2_10_d0,
        sliding_window_buffer_samples_timestamp_V_2_11_address0,
        sliding_window_buffer_samples_timestamp_V_2_11_ce0,
        sliding_window_buffer_samples_timestamp_V_2_11_we0,
        sliding_window_buffer_samples_timestamp_V_2_11_d0,
        sliding_window_buffer_samples_sample_V_3_0_address0,
        sliding_window_buffer_samples_sample_V_3_0_ce0,
        sliding_window_buffer_samples_sample_V_3_0_we0,
        sliding_window_buffer_samples_sample_V_3_0_d0,
        sliding_window_buffer_samples_sample_V_3_1_address0,
        sliding_window_buffer_samples_sample_V_3_1_ce0,
        sliding_window_buffer_samples_sample_V_3_1_we0,
        sliding_window_buffer_samples_sample_V_3_1_d0,
        sliding_window_buffer_samples_sample_V_3_2_address0,
        sliding_window_buffer_samples_sample_V_3_2_ce0,
        sliding_window_buffer_samples_sample_V_3_2_we0,
        sliding_window_buffer_samples_sample_V_3_2_d0,
        sliding_window_buffer_samples_sample_V_3_3_address0,
        sliding_window_buffer_samples_sample_V_3_3_ce0,
        sliding_window_buffer_samples_sample_V_3_3_we0,
        sliding_window_buffer_samples_sample_V_3_3_d0,
        sliding_window_buffer_samples_sample_V_3_4_address0,
        sliding_window_buffer_samples_sample_V_3_4_ce0,
        sliding_window_buffer_samples_sample_V_3_4_we0,
        sliding_window_buffer_samples_sample_V_3_4_d0,
        sliding_window_buffer_samples_sample_V_3_5_address0,
        sliding_window_buffer_samples_sample_V_3_5_ce0,
        sliding_window_buffer_samples_sample_V_3_5_we0,
        sliding_window_buffer_samples_sample_V_3_5_d0,
        sliding_window_buffer_samples_sample_V_3_6_address0,
        sliding_window_buffer_samples_sample_V_3_6_ce0,
        sliding_window_buffer_samples_sample_V_3_6_we0,
        sliding_window_buffer_samples_sample_V_3_6_d0,
        sliding_window_buffer_samples_sample_V_3_7_address0,
        sliding_window_buffer_samples_sample_V_3_7_ce0,
        sliding_window_buffer_samples_sample_V_3_7_we0,
        sliding_window_buffer_samples_sample_V_3_7_d0,
        sliding_window_buffer_samples_sample_V_3_8_address0,
        sliding_window_buffer_samples_sample_V_3_8_ce0,
        sliding_window_buffer_samples_sample_V_3_8_we0,
        sliding_window_buffer_samples_sample_V_3_8_d0,
        sliding_window_buffer_samples_sample_V_3_9_address0,
        sliding_window_buffer_samples_sample_V_3_9_ce0,
        sliding_window_buffer_samples_sample_V_3_9_we0,
        sliding_window_buffer_samples_sample_V_3_9_d0,
        sliding_window_buffer_samples_sample_V_3_10_address0,
        sliding_window_buffer_samples_sample_V_3_10_ce0,
        sliding_window_buffer_samples_sample_V_3_10_we0,
        sliding_window_buffer_samples_sample_V_3_10_d0,
        sliding_window_buffer_samples_sample_V_3_11_address0,
        sliding_window_buffer_samples_sample_V_3_11_ce0,
        sliding_window_buffer_samples_sample_V_3_11_we0,
        sliding_window_buffer_samples_sample_V_3_11_d0,
        sliding_window_buffer_samples_timestamp_V_3_0_address0,
        sliding_window_buffer_samples_timestamp_V_3_0_ce0,
        sliding_window_buffer_samples_timestamp_V_3_0_we0,
        sliding_window_buffer_samples_timestamp_V_3_0_d0,
        sliding_window_buffer_samples_timestamp_V_3_1_address0,
        sliding_window_buffer_samples_timestamp_V_3_1_ce0,
        sliding_window_buffer_samples_timestamp_V_3_1_we0,
        sliding_window_buffer_samples_timestamp_V_3_1_d0,
        sliding_window_buffer_samples_timestamp_V_3_2_address0,
        sliding_window_buffer_samples_timestamp_V_3_2_ce0,
        sliding_window_buffer_samples_timestamp_V_3_2_we0,
        sliding_window_buffer_samples_timestamp_V_3_2_d0,
        sliding_window_buffer_samples_timestamp_V_3_3_address0,
        sliding_window_buffer_samples_timestamp_V_3_3_ce0,
        sliding_window_buffer_samples_timestamp_V_3_3_we0,
        sliding_window_buffer_samples_timestamp_V_3_3_d0,
        sliding_window_buffer_samples_timestamp_V_3_4_address0,
        sliding_window_buffer_samples_timestamp_V_3_4_ce0,
        sliding_window_buffer_samples_timestamp_V_3_4_we0,
        sliding_window_buffer_samples_timestamp_V_3_4_d0,
        sliding_window_buffer_samples_timestamp_V_3_5_address0,
        sliding_window_buffer_samples_timestamp_V_3_5_ce0,
        sliding_window_buffer_samples_timestamp_V_3_5_we0,
        sliding_window_buffer_samples_timestamp_V_3_5_d0,
        sliding_window_buffer_samples_timestamp_V_3_6_address0,
        sliding_window_buffer_samples_timestamp_V_3_6_ce0,
        sliding_window_buffer_samples_timestamp_V_3_6_we0,
        sliding_window_buffer_samples_timestamp_V_3_6_d0,
        sliding_window_buffer_samples_timestamp_V_3_7_address0,
        sliding_window_buffer_samples_timestamp_V_3_7_ce0,
        sliding_window_buffer_samples_timestamp_V_3_7_we0,
        sliding_window_buffer_samples_timestamp_V_3_7_d0,
        sliding_window_buffer_samples_timestamp_V_3_8_address0,
        sliding_window_buffer_samples_timestamp_V_3_8_ce0,
        sliding_window_buffer_samples_timestamp_V_3_8_we0,
        sliding_window_buffer_samples_timestamp_V_3_8_d0,
        sliding_window_buffer_samples_timestamp_V_3_9_address0,
        sliding_window_buffer_samples_timestamp_V_3_9_ce0,
        sliding_window_buffer_samples_timestamp_V_3_9_we0,
        sliding_window_buffer_samples_timestamp_V_3_9_d0,
        sliding_window_buffer_samples_timestamp_V_3_10_address0,
        sliding_window_buffer_samples_timestamp_V_3_10_ce0,
        sliding_window_buffer_samples_timestamp_V_3_10_we0,
        sliding_window_buffer_samples_timestamp_V_3_10_d0,
        sliding_window_buffer_samples_timestamp_V_3_11_address0,
        sliding_window_buffer_samples_timestamp_V_3_11_ce0,
        sliding_window_buffer_samples_timestamp_V_3_11_we0,
        sliding_window_buffer_samples_timestamp_V_3_11_d0,
        sliding_window_buffer_samples_sample_V_4_0_address0,
        sliding_window_buffer_samples_sample_V_4_0_ce0,
        sliding_window_buffer_samples_sample_V_4_0_we0,
        sliding_window_buffer_samples_sample_V_4_0_d0,
        sliding_window_buffer_samples_sample_V_4_1_address0,
        sliding_window_buffer_samples_sample_V_4_1_ce0,
        sliding_window_buffer_samples_sample_V_4_1_we0,
        sliding_window_buffer_samples_sample_V_4_1_d0,
        sliding_window_buffer_samples_sample_V_4_2_address0,
        sliding_window_buffer_samples_sample_V_4_2_ce0,
        sliding_window_buffer_samples_sample_V_4_2_we0,
        sliding_window_buffer_samples_sample_V_4_2_d0,
        sliding_window_buffer_samples_sample_V_4_3_address0,
        sliding_window_buffer_samples_sample_V_4_3_ce0,
        sliding_window_buffer_samples_sample_V_4_3_we0,
        sliding_window_buffer_samples_sample_V_4_3_d0,
        sliding_window_buffer_samples_sample_V_4_4_address0,
        sliding_window_buffer_samples_sample_V_4_4_ce0,
        sliding_window_buffer_samples_sample_V_4_4_we0,
        sliding_window_buffer_samples_sample_V_4_4_d0,
        sliding_window_buffer_samples_sample_V_4_5_address0,
        sliding_window_buffer_samples_sample_V_4_5_ce0,
        sliding_window_buffer_samples_sample_V_4_5_we0,
        sliding_window_buffer_samples_sample_V_4_5_d0,
        sliding_window_buffer_samples_sample_V_4_6_address0,
        sliding_window_buffer_samples_sample_V_4_6_ce0,
        sliding_window_buffer_samples_sample_V_4_6_we0,
        sliding_window_buffer_samples_sample_V_4_6_d0,
        sliding_window_buffer_samples_sample_V_4_7_address0,
        sliding_window_buffer_samples_sample_V_4_7_ce0,
        sliding_window_buffer_samples_sample_V_4_7_we0,
        sliding_window_buffer_samples_sample_V_4_7_d0,
        sliding_window_buffer_samples_sample_V_4_8_address0,
        sliding_window_buffer_samples_sample_V_4_8_ce0,
        sliding_window_buffer_samples_sample_V_4_8_we0,
        sliding_window_buffer_samples_sample_V_4_8_d0,
        sliding_window_buffer_samples_sample_V_4_9_address0,
        sliding_window_buffer_samples_sample_V_4_9_ce0,
        sliding_window_buffer_samples_sample_V_4_9_we0,
        sliding_window_buffer_samples_sample_V_4_9_d0,
        sliding_window_buffer_samples_sample_V_4_10_address0,
        sliding_window_buffer_samples_sample_V_4_10_ce0,
        sliding_window_buffer_samples_sample_V_4_10_we0,
        sliding_window_buffer_samples_sample_V_4_10_d0,
        sliding_window_buffer_samples_sample_V_4_11_address0,
        sliding_window_buffer_samples_sample_V_4_11_ce0,
        sliding_window_buffer_samples_sample_V_4_11_we0,
        sliding_window_buffer_samples_sample_V_4_11_d0,
        sliding_window_buffer_samples_timestamp_V_4_0_address0,
        sliding_window_buffer_samples_timestamp_V_4_0_ce0,
        sliding_window_buffer_samples_timestamp_V_4_0_we0,
        sliding_window_buffer_samples_timestamp_V_4_0_d0,
        sliding_window_buffer_samples_timestamp_V_4_1_address0,
        sliding_window_buffer_samples_timestamp_V_4_1_ce0,
        sliding_window_buffer_samples_timestamp_V_4_1_we0,
        sliding_window_buffer_samples_timestamp_V_4_1_d0,
        sliding_window_buffer_samples_timestamp_V_4_2_address0,
        sliding_window_buffer_samples_timestamp_V_4_2_ce0,
        sliding_window_buffer_samples_timestamp_V_4_2_we0,
        sliding_window_buffer_samples_timestamp_V_4_2_d0,
        sliding_window_buffer_samples_timestamp_V_4_3_address0,
        sliding_window_buffer_samples_timestamp_V_4_3_ce0,
        sliding_window_buffer_samples_timestamp_V_4_3_we0,
        sliding_window_buffer_samples_timestamp_V_4_3_d0,
        sliding_window_buffer_samples_timestamp_V_4_4_address0,
        sliding_window_buffer_samples_timestamp_V_4_4_ce0,
        sliding_window_buffer_samples_timestamp_V_4_4_we0,
        sliding_window_buffer_samples_timestamp_V_4_4_d0,
        sliding_window_buffer_samples_timestamp_V_4_5_address0,
        sliding_window_buffer_samples_timestamp_V_4_5_ce0,
        sliding_window_buffer_samples_timestamp_V_4_5_we0,
        sliding_window_buffer_samples_timestamp_V_4_5_d0,
        sliding_window_buffer_samples_timestamp_V_4_6_address0,
        sliding_window_buffer_samples_timestamp_V_4_6_ce0,
        sliding_window_buffer_samples_timestamp_V_4_6_we0,
        sliding_window_buffer_samples_timestamp_V_4_6_d0,
        sliding_window_buffer_samples_timestamp_V_4_7_address0,
        sliding_window_buffer_samples_timestamp_V_4_7_ce0,
        sliding_window_buffer_samples_timestamp_V_4_7_we0,
        sliding_window_buffer_samples_timestamp_V_4_7_d0,
        sliding_window_buffer_samples_timestamp_V_4_8_address0,
        sliding_window_buffer_samples_timestamp_V_4_8_ce0,
        sliding_window_buffer_samples_timestamp_V_4_8_we0,
        sliding_window_buffer_samples_timestamp_V_4_8_d0,
        sliding_window_buffer_samples_timestamp_V_4_9_address0,
        sliding_window_buffer_samples_timestamp_V_4_9_ce0,
        sliding_window_buffer_samples_timestamp_V_4_9_we0,
        sliding_window_buffer_samples_timestamp_V_4_9_d0,
        sliding_window_buffer_samples_timestamp_V_4_10_address0,
        sliding_window_buffer_samples_timestamp_V_4_10_ce0,
        sliding_window_buffer_samples_timestamp_V_4_10_we0,
        sliding_window_buffer_samples_timestamp_V_4_10_d0,
        sliding_window_buffer_samples_timestamp_V_4_11_address0,
        sliding_window_buffer_samples_timestamp_V_4_11_ce0,
        sliding_window_buffer_samples_timestamp_V_4_11_we0,
        sliding_window_buffer_samples_timestamp_V_4_11_d0,
        sliding_window_buffer_samples_sample_V_5_0_address0,
        sliding_window_buffer_samples_sample_V_5_0_ce0,
        sliding_window_buffer_samples_sample_V_5_0_we0,
        sliding_window_buffer_samples_sample_V_5_0_d0,
        sliding_window_buffer_samples_sample_V_5_1_address0,
        sliding_window_buffer_samples_sample_V_5_1_ce0,
        sliding_window_buffer_samples_sample_V_5_1_we0,
        sliding_window_buffer_samples_sample_V_5_1_d0,
        sliding_window_buffer_samples_sample_V_5_2_address0,
        sliding_window_buffer_samples_sample_V_5_2_ce0,
        sliding_window_buffer_samples_sample_V_5_2_we0,
        sliding_window_buffer_samples_sample_V_5_2_d0,
        sliding_window_buffer_samples_sample_V_5_3_address0,
        sliding_window_buffer_samples_sample_V_5_3_ce0,
        sliding_window_buffer_samples_sample_V_5_3_we0,
        sliding_window_buffer_samples_sample_V_5_3_d0,
        sliding_window_buffer_samples_sample_V_5_4_address0,
        sliding_window_buffer_samples_sample_V_5_4_ce0,
        sliding_window_buffer_samples_sample_V_5_4_we0,
        sliding_window_buffer_samples_sample_V_5_4_d0,
        sliding_window_buffer_samples_sample_V_5_5_address0,
        sliding_window_buffer_samples_sample_V_5_5_ce0,
        sliding_window_buffer_samples_sample_V_5_5_we0,
        sliding_window_buffer_samples_sample_V_5_5_d0,
        sliding_window_buffer_samples_sample_V_5_6_address0,
        sliding_window_buffer_samples_sample_V_5_6_ce0,
        sliding_window_buffer_samples_sample_V_5_6_we0,
        sliding_window_buffer_samples_sample_V_5_6_d0,
        sliding_window_buffer_samples_sample_V_5_7_address0,
        sliding_window_buffer_samples_sample_V_5_7_ce0,
        sliding_window_buffer_samples_sample_V_5_7_we0,
        sliding_window_buffer_samples_sample_V_5_7_d0,
        sliding_window_buffer_samples_sample_V_5_8_address0,
        sliding_window_buffer_samples_sample_V_5_8_ce0,
        sliding_window_buffer_samples_sample_V_5_8_we0,
        sliding_window_buffer_samples_sample_V_5_8_d0,
        sliding_window_buffer_samples_sample_V_5_9_address0,
        sliding_window_buffer_samples_sample_V_5_9_ce0,
        sliding_window_buffer_samples_sample_V_5_9_we0,
        sliding_window_buffer_samples_sample_V_5_9_d0,
        sliding_window_buffer_samples_sample_V_5_10_address0,
        sliding_window_buffer_samples_sample_V_5_10_ce0,
        sliding_window_buffer_samples_sample_V_5_10_we0,
        sliding_window_buffer_samples_sample_V_5_10_d0,
        sliding_window_buffer_samples_sample_V_5_11_address0,
        sliding_window_buffer_samples_sample_V_5_11_ce0,
        sliding_window_buffer_samples_sample_V_5_11_we0,
        sliding_window_buffer_samples_sample_V_5_11_d0,
        sliding_window_buffer_samples_timestamp_V_5_0_address0,
        sliding_window_buffer_samples_timestamp_V_5_0_ce0,
        sliding_window_buffer_samples_timestamp_V_5_0_we0,
        sliding_window_buffer_samples_timestamp_V_5_0_d0,
        sliding_window_buffer_samples_timestamp_V_5_1_address0,
        sliding_window_buffer_samples_timestamp_V_5_1_ce0,
        sliding_window_buffer_samples_timestamp_V_5_1_we0,
        sliding_window_buffer_samples_timestamp_V_5_1_d0,
        sliding_window_buffer_samples_timestamp_V_5_2_address0,
        sliding_window_buffer_samples_timestamp_V_5_2_ce0,
        sliding_window_buffer_samples_timestamp_V_5_2_we0,
        sliding_window_buffer_samples_timestamp_V_5_2_d0,
        sliding_window_buffer_samples_timestamp_V_5_3_address0,
        sliding_window_buffer_samples_timestamp_V_5_3_ce0,
        sliding_window_buffer_samples_timestamp_V_5_3_we0,
        sliding_window_buffer_samples_timestamp_V_5_3_d0,
        sliding_window_buffer_samples_timestamp_V_5_4_address0,
        sliding_window_buffer_samples_timestamp_V_5_4_ce0,
        sliding_window_buffer_samples_timestamp_V_5_4_we0,
        sliding_window_buffer_samples_timestamp_V_5_4_d0,
        sliding_window_buffer_samples_timestamp_V_5_5_address0,
        sliding_window_buffer_samples_timestamp_V_5_5_ce0,
        sliding_window_buffer_samples_timestamp_V_5_5_we0,
        sliding_window_buffer_samples_timestamp_V_5_5_d0,
        sliding_window_buffer_samples_timestamp_V_5_6_address0,
        sliding_window_buffer_samples_timestamp_V_5_6_ce0,
        sliding_window_buffer_samples_timestamp_V_5_6_we0,
        sliding_window_buffer_samples_timestamp_V_5_6_d0,
        sliding_window_buffer_samples_timestamp_V_5_7_address0,
        sliding_window_buffer_samples_timestamp_V_5_7_ce0,
        sliding_window_buffer_samples_timestamp_V_5_7_we0,
        sliding_window_buffer_samples_timestamp_V_5_7_d0,
        sliding_window_buffer_samples_timestamp_V_5_8_address0,
        sliding_window_buffer_samples_timestamp_V_5_8_ce0,
        sliding_window_buffer_samples_timestamp_V_5_8_we0,
        sliding_window_buffer_samples_timestamp_V_5_8_d0,
        sliding_window_buffer_samples_timestamp_V_5_9_address0,
        sliding_window_buffer_samples_timestamp_V_5_9_ce0,
        sliding_window_buffer_samples_timestamp_V_5_9_we0,
        sliding_window_buffer_samples_timestamp_V_5_9_d0,
        sliding_window_buffer_samples_timestamp_V_5_10_address0,
        sliding_window_buffer_samples_timestamp_V_5_10_ce0,
        sliding_window_buffer_samples_timestamp_V_5_10_we0,
        sliding_window_buffer_samples_timestamp_V_5_10_d0,
        sliding_window_buffer_samples_timestamp_V_5_11_address0,
        sliding_window_buffer_samples_timestamp_V_5_11_ce0,
        sliding_window_buffer_samples_timestamp_V_5_11_we0,
        sliding_window_buffer_samples_timestamp_V_5_11_d0,
        sliding_window_buffer_samples_sample_V_6_0_address0,
        sliding_window_buffer_samples_sample_V_6_0_ce0,
        sliding_window_buffer_samples_sample_V_6_0_we0,
        sliding_window_buffer_samples_sample_V_6_0_d0,
        sliding_window_buffer_samples_sample_V_6_1_address0,
        sliding_window_buffer_samples_sample_V_6_1_ce0,
        sliding_window_buffer_samples_sample_V_6_1_we0,
        sliding_window_buffer_samples_sample_V_6_1_d0,
        sliding_window_buffer_samples_sample_V_6_2_address0,
        sliding_window_buffer_samples_sample_V_6_2_ce0,
        sliding_window_buffer_samples_sample_V_6_2_we0,
        sliding_window_buffer_samples_sample_V_6_2_d0,
        sliding_window_buffer_samples_sample_V_6_3_address0,
        sliding_window_buffer_samples_sample_V_6_3_ce0,
        sliding_window_buffer_samples_sample_V_6_3_we0,
        sliding_window_buffer_samples_sample_V_6_3_d0,
        sliding_window_buffer_samples_sample_V_6_4_address0,
        sliding_window_buffer_samples_sample_V_6_4_ce0,
        sliding_window_buffer_samples_sample_V_6_4_we0,
        sliding_window_buffer_samples_sample_V_6_4_d0,
        sliding_window_buffer_samples_sample_V_6_5_address0,
        sliding_window_buffer_samples_sample_V_6_5_ce0,
        sliding_window_buffer_samples_sample_V_6_5_we0,
        sliding_window_buffer_samples_sample_V_6_5_d0,
        sliding_window_buffer_samples_sample_V_6_6_address0,
        sliding_window_buffer_samples_sample_V_6_6_ce0,
        sliding_window_buffer_samples_sample_V_6_6_we0,
        sliding_window_buffer_samples_sample_V_6_6_d0,
        sliding_window_buffer_samples_sample_V_6_7_address0,
        sliding_window_buffer_samples_sample_V_6_7_ce0,
        sliding_window_buffer_samples_sample_V_6_7_we0,
        sliding_window_buffer_samples_sample_V_6_7_d0,
        sliding_window_buffer_samples_sample_V_6_8_address0,
        sliding_window_buffer_samples_sample_V_6_8_ce0,
        sliding_window_buffer_samples_sample_V_6_8_we0,
        sliding_window_buffer_samples_sample_V_6_8_d0,
        sliding_window_buffer_samples_sample_V_6_9_address0,
        sliding_window_buffer_samples_sample_V_6_9_ce0,
        sliding_window_buffer_samples_sample_V_6_9_we0,
        sliding_window_buffer_samples_sample_V_6_9_d0,
        sliding_window_buffer_samples_sample_V_6_10_address0,
        sliding_window_buffer_samples_sample_V_6_10_ce0,
        sliding_window_buffer_samples_sample_V_6_10_we0,
        sliding_window_buffer_samples_sample_V_6_10_d0,
        sliding_window_buffer_samples_sample_V_6_11_address0,
        sliding_window_buffer_samples_sample_V_6_11_ce0,
        sliding_window_buffer_samples_sample_V_6_11_we0,
        sliding_window_buffer_samples_sample_V_6_11_d0,
        sliding_window_buffer_samples_timestamp_V_6_0_address0,
        sliding_window_buffer_samples_timestamp_V_6_0_ce0,
        sliding_window_buffer_samples_timestamp_V_6_0_we0,
        sliding_window_buffer_samples_timestamp_V_6_0_d0,
        sliding_window_buffer_samples_timestamp_V_6_1_address0,
        sliding_window_buffer_samples_timestamp_V_6_1_ce0,
        sliding_window_buffer_samples_timestamp_V_6_1_we0,
        sliding_window_buffer_samples_timestamp_V_6_1_d0,
        sliding_window_buffer_samples_timestamp_V_6_2_address0,
        sliding_window_buffer_samples_timestamp_V_6_2_ce0,
        sliding_window_buffer_samples_timestamp_V_6_2_we0,
        sliding_window_buffer_samples_timestamp_V_6_2_d0,
        sliding_window_buffer_samples_timestamp_V_6_3_address0,
        sliding_window_buffer_samples_timestamp_V_6_3_ce0,
        sliding_window_buffer_samples_timestamp_V_6_3_we0,
        sliding_window_buffer_samples_timestamp_V_6_3_d0,
        sliding_window_buffer_samples_timestamp_V_6_4_address0,
        sliding_window_buffer_samples_timestamp_V_6_4_ce0,
        sliding_window_buffer_samples_timestamp_V_6_4_we0,
        sliding_window_buffer_samples_timestamp_V_6_4_d0,
        sliding_window_buffer_samples_timestamp_V_6_5_address0,
        sliding_window_buffer_samples_timestamp_V_6_5_ce0,
        sliding_window_buffer_samples_timestamp_V_6_5_we0,
        sliding_window_buffer_samples_timestamp_V_6_5_d0,
        sliding_window_buffer_samples_timestamp_V_6_6_address0,
        sliding_window_buffer_samples_timestamp_V_6_6_ce0,
        sliding_window_buffer_samples_timestamp_V_6_6_we0,
        sliding_window_buffer_samples_timestamp_V_6_6_d0,
        sliding_window_buffer_samples_timestamp_V_6_7_address0,
        sliding_window_buffer_samples_timestamp_V_6_7_ce0,
        sliding_window_buffer_samples_timestamp_V_6_7_we0,
        sliding_window_buffer_samples_timestamp_V_6_7_d0,
        sliding_window_buffer_samples_timestamp_V_6_8_address0,
        sliding_window_buffer_samples_timestamp_V_6_8_ce0,
        sliding_window_buffer_samples_timestamp_V_6_8_we0,
        sliding_window_buffer_samples_timestamp_V_6_8_d0,
        sliding_window_buffer_samples_timestamp_V_6_9_address0,
        sliding_window_buffer_samples_timestamp_V_6_9_ce0,
        sliding_window_buffer_samples_timestamp_V_6_9_we0,
        sliding_window_buffer_samples_timestamp_V_6_9_d0,
        sliding_window_buffer_samples_timestamp_V_6_10_address0,
        sliding_window_buffer_samples_timestamp_V_6_10_ce0,
        sliding_window_buffer_samples_timestamp_V_6_10_we0,
        sliding_window_buffer_samples_timestamp_V_6_10_d0,
        sliding_window_buffer_samples_timestamp_V_6_11_address0,
        sliding_window_buffer_samples_timestamp_V_6_11_ce0,
        sliding_window_buffer_samples_timestamp_V_6_11_we0,
        sliding_window_buffer_samples_timestamp_V_6_11_d0,
        sliding_window_buffer_samples_sample_V_7_0_address0,
        sliding_window_buffer_samples_sample_V_7_0_ce0,
        sliding_window_buffer_samples_sample_V_7_0_we0,
        sliding_window_buffer_samples_sample_V_7_0_d0,
        sliding_window_buffer_samples_sample_V_7_1_address0,
        sliding_window_buffer_samples_sample_V_7_1_ce0,
        sliding_window_buffer_samples_sample_V_7_1_we0,
        sliding_window_buffer_samples_sample_V_7_1_d0,
        sliding_window_buffer_samples_sample_V_7_2_address0,
        sliding_window_buffer_samples_sample_V_7_2_ce0,
        sliding_window_buffer_samples_sample_V_7_2_we0,
        sliding_window_buffer_samples_sample_V_7_2_d0,
        sliding_window_buffer_samples_sample_V_7_3_address0,
        sliding_window_buffer_samples_sample_V_7_3_ce0,
        sliding_window_buffer_samples_sample_V_7_3_we0,
        sliding_window_buffer_samples_sample_V_7_3_d0,
        sliding_window_buffer_samples_sample_V_7_4_address0,
        sliding_window_buffer_samples_sample_V_7_4_ce0,
        sliding_window_buffer_samples_sample_V_7_4_we0,
        sliding_window_buffer_samples_sample_V_7_4_d0,
        sliding_window_buffer_samples_sample_V_7_5_address0,
        sliding_window_buffer_samples_sample_V_7_5_ce0,
        sliding_window_buffer_samples_sample_V_7_5_we0,
        sliding_window_buffer_samples_sample_V_7_5_d0,
        sliding_window_buffer_samples_sample_V_7_6_address0,
        sliding_window_buffer_samples_sample_V_7_6_ce0,
        sliding_window_buffer_samples_sample_V_7_6_we0,
        sliding_window_buffer_samples_sample_V_7_6_d0,
        sliding_window_buffer_samples_sample_V_7_7_address0,
        sliding_window_buffer_samples_sample_V_7_7_ce0,
        sliding_window_buffer_samples_sample_V_7_7_we0,
        sliding_window_buffer_samples_sample_V_7_7_d0,
        sliding_window_buffer_samples_sample_V_7_8_address0,
        sliding_window_buffer_samples_sample_V_7_8_ce0,
        sliding_window_buffer_samples_sample_V_7_8_we0,
        sliding_window_buffer_samples_sample_V_7_8_d0,
        sliding_window_buffer_samples_sample_V_7_9_address0,
        sliding_window_buffer_samples_sample_V_7_9_ce0,
        sliding_window_buffer_samples_sample_V_7_9_we0,
        sliding_window_buffer_samples_sample_V_7_9_d0,
        sliding_window_buffer_samples_sample_V_7_10_address0,
        sliding_window_buffer_samples_sample_V_7_10_ce0,
        sliding_window_buffer_samples_sample_V_7_10_we0,
        sliding_window_buffer_samples_sample_V_7_10_d0,
        sliding_window_buffer_samples_sample_V_7_11_address0,
        sliding_window_buffer_samples_sample_V_7_11_ce0,
        sliding_window_buffer_samples_sample_V_7_11_we0,
        sliding_window_buffer_samples_sample_V_7_11_d0,
        sliding_window_buffer_samples_timestamp_V_7_0_address0,
        sliding_window_buffer_samples_timestamp_V_7_0_ce0,
        sliding_window_buffer_samples_timestamp_V_7_0_we0,
        sliding_window_buffer_samples_timestamp_V_7_0_d0,
        sliding_window_buffer_samples_timestamp_V_7_1_address0,
        sliding_window_buffer_samples_timestamp_V_7_1_ce0,
        sliding_window_buffer_samples_timestamp_V_7_1_we0,
        sliding_window_buffer_samples_timestamp_V_7_1_d0,
        sliding_window_buffer_samples_timestamp_V_7_2_address0,
        sliding_window_buffer_samples_timestamp_V_7_2_ce0,
        sliding_window_buffer_samples_timestamp_V_7_2_we0,
        sliding_window_buffer_samples_timestamp_V_7_2_d0,
        sliding_window_buffer_samples_timestamp_V_7_3_address0,
        sliding_window_buffer_samples_timestamp_V_7_3_ce0,
        sliding_window_buffer_samples_timestamp_V_7_3_we0,
        sliding_window_buffer_samples_timestamp_V_7_3_d0,
        sliding_window_buffer_samples_timestamp_V_7_4_address0,
        sliding_window_buffer_samples_timestamp_V_7_4_ce0,
        sliding_window_buffer_samples_timestamp_V_7_4_we0,
        sliding_window_buffer_samples_timestamp_V_7_4_d0,
        sliding_window_buffer_samples_timestamp_V_7_5_address0,
        sliding_window_buffer_samples_timestamp_V_7_5_ce0,
        sliding_window_buffer_samples_timestamp_V_7_5_we0,
        sliding_window_buffer_samples_timestamp_V_7_5_d0,
        sliding_window_buffer_samples_timestamp_V_7_6_address0,
        sliding_window_buffer_samples_timestamp_V_7_6_ce0,
        sliding_window_buffer_samples_timestamp_V_7_6_we0,
        sliding_window_buffer_samples_timestamp_V_7_6_d0,
        sliding_window_buffer_samples_timestamp_V_7_7_address0,
        sliding_window_buffer_samples_timestamp_V_7_7_ce0,
        sliding_window_buffer_samples_timestamp_V_7_7_we0,
        sliding_window_buffer_samples_timestamp_V_7_7_d0,
        sliding_window_buffer_samples_timestamp_V_7_8_address0,
        sliding_window_buffer_samples_timestamp_V_7_8_ce0,
        sliding_window_buffer_samples_timestamp_V_7_8_we0,
        sliding_window_buffer_samples_timestamp_V_7_8_d0,
        sliding_window_buffer_samples_timestamp_V_7_9_address0,
        sliding_window_buffer_samples_timestamp_V_7_9_ce0,
        sliding_window_buffer_samples_timestamp_V_7_9_we0,
        sliding_window_buffer_samples_timestamp_V_7_9_d0,
        sliding_window_buffer_samples_timestamp_V_7_10_address0,
        sliding_window_buffer_samples_timestamp_V_7_10_ce0,
        sliding_window_buffer_samples_timestamp_V_7_10_we0,
        sliding_window_buffer_samples_timestamp_V_7_10_d0,
        sliding_window_buffer_samples_timestamp_V_7_11_address0,
        sliding_window_buffer_samples_timestamp_V_7_11_ce0,
        sliding_window_buffer_samples_timestamp_V_7_11_we0,
        sliding_window_buffer_samples_timestamp_V_7_11_d0,
        sliding_window_back_ptr_s_i,
        sliding_window_back_ptr_s_o,
        sliding_window_back_ptr_s_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_pp0_stage0 = 28'd2;
parameter    ap_ST_fsm_state4 = 28'd4;
parameter    ap_ST_fsm_state5 = 28'd8;
parameter    ap_ST_fsm_state6 = 28'd16;
parameter    ap_ST_fsm_state7 = 28'd32;
parameter    ap_ST_fsm_state8 = 28'd64;
parameter    ap_ST_fsm_state9 = 28'd128;
parameter    ap_ST_fsm_state10 = 28'd256;
parameter    ap_ST_fsm_state11 = 28'd512;
parameter    ap_ST_fsm_state12 = 28'd1024;
parameter    ap_ST_fsm_state13 = 28'd2048;
parameter    ap_ST_fsm_state14 = 28'd4096;
parameter    ap_ST_fsm_state15 = 28'd8192;
parameter    ap_ST_fsm_state16 = 28'd16384;
parameter    ap_ST_fsm_state17 = 28'd32768;
parameter    ap_ST_fsm_state18 = 28'd65536;
parameter    ap_ST_fsm_state19 = 28'd131072;
parameter    ap_ST_fsm_state20 = 28'd262144;
parameter    ap_ST_fsm_state21 = 28'd524288;
parameter    ap_ST_fsm_state22 = 28'd1048576;
parameter    ap_ST_fsm_state23 = 28'd2097152;
parameter    ap_ST_fsm_state24 = 28'd4194304;
parameter    ap_ST_fsm_state25 = 28'd8388608;
parameter    ap_ST_fsm_state26 = 28'd16777216;
parameter    ap_ST_fsm_state27 = 28'd33554432;
parameter    ap_ST_fsm_state28 = 28'd67108864;
parameter    ap_ST_fsm_state29 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] buffer_in_0_address0;
output   buffer_in_0_ce0;
input  [31:0] buffer_in_0_q0;
output  [2:0] buffer_in_1_address0;
output   buffer_in_1_ce0;
input  [31:0] buffer_in_1_q0;
output  [2:0] buffer_in_2_address0;
output   buffer_in_2_ce0;
input  [31:0] buffer_in_2_q0;
output  [2:0] buffer_in_3_address0;
output   buffer_in_3_ce0;
input  [31:0] buffer_in_3_q0;
output  [2:0] buffer_in_4_address0;
output   buffer_in_4_ce0;
input  [31:0] buffer_in_4_q0;
output  [2:0] buffer_in_5_address0;
output   buffer_in_5_ce0;
input  [31:0] buffer_in_5_q0;
output  [2:0] buffer_in_6_address0;
output   buffer_in_6_ce0;
input  [31:0] buffer_in_6_q0;
output  [2:0] buffer_in_7_address0;
output   buffer_in_7_ce0;
input  [31:0] buffer_in_7_q0;
output  [2:0] buffer_in_8_address0;
output   buffer_in_8_ce0;
input  [31:0] buffer_in_8_q0;
output  [2:0] buffer_in_9_address0;
output   buffer_in_9_ce0;
input  [31:0] buffer_in_9_q0;
output  [2:0] buffer_in_10_address0;
output   buffer_in_10_ce0;
input  [31:0] buffer_in_10_q0;
output  [2:0] buffer_in_11_address0;
output   buffer_in_11_ce0;
input  [31:0] buffer_in_11_q0;
input  [5:0] sliding_window_front_ptr_s_i;
output  [5:0] sliding_window_front_ptr_s_o;
output   sliding_window_front_ptr_s_o_ap_vld;
output  [4:0] sliding_window_buffer_samples_sample_V_0_0_address0;
output   sliding_window_buffer_samples_sample_V_0_0_ce0;
output   sliding_window_buffer_samples_sample_V_0_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_1_address0;
output   sliding_window_buffer_samples_sample_V_0_1_ce0;
output   sliding_window_buffer_samples_sample_V_0_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_2_address0;
output   sliding_window_buffer_samples_sample_V_0_2_ce0;
output   sliding_window_buffer_samples_sample_V_0_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_3_address0;
output   sliding_window_buffer_samples_sample_V_0_3_ce0;
output   sliding_window_buffer_samples_sample_V_0_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_4_address0;
output   sliding_window_buffer_samples_sample_V_0_4_ce0;
output   sliding_window_buffer_samples_sample_V_0_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_5_address0;
output   sliding_window_buffer_samples_sample_V_0_5_ce0;
output   sliding_window_buffer_samples_sample_V_0_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_6_address0;
output   sliding_window_buffer_samples_sample_V_0_6_ce0;
output   sliding_window_buffer_samples_sample_V_0_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_7_address0;
output   sliding_window_buffer_samples_sample_V_0_7_ce0;
output   sliding_window_buffer_samples_sample_V_0_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_8_address0;
output   sliding_window_buffer_samples_sample_V_0_8_ce0;
output   sliding_window_buffer_samples_sample_V_0_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_9_address0;
output   sliding_window_buffer_samples_sample_V_0_9_ce0;
output   sliding_window_buffer_samples_sample_V_0_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_10_address0;
output   sliding_window_buffer_samples_sample_V_0_10_ce0;
output   sliding_window_buffer_samples_sample_V_0_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_0_11_address0;
output   sliding_window_buffer_samples_sample_V_0_11_ce0;
output   sliding_window_buffer_samples_sample_V_0_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_0_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_0_address0;
output   sliding_window_buffer_samples_timestamp_V_0_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_1_address0;
output   sliding_window_buffer_samples_timestamp_V_0_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_2_address0;
output   sliding_window_buffer_samples_timestamp_V_0_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_3_address0;
output   sliding_window_buffer_samples_timestamp_V_0_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_4_address0;
output   sliding_window_buffer_samples_timestamp_V_0_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_5_address0;
output   sliding_window_buffer_samples_timestamp_V_0_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_6_address0;
output   sliding_window_buffer_samples_timestamp_V_0_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_7_address0;
output   sliding_window_buffer_samples_timestamp_V_0_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_8_address0;
output   sliding_window_buffer_samples_timestamp_V_0_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_9_address0;
output   sliding_window_buffer_samples_timestamp_V_0_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_10_address0;
output   sliding_window_buffer_samples_timestamp_V_0_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_0_11_address0;
output   sliding_window_buffer_samples_timestamp_V_0_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_0_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_0_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_0_address0;
output   sliding_window_buffer_samples_sample_V_1_0_ce0;
output   sliding_window_buffer_samples_sample_V_1_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_1_address0;
output   sliding_window_buffer_samples_sample_V_1_1_ce0;
output   sliding_window_buffer_samples_sample_V_1_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_2_address0;
output   sliding_window_buffer_samples_sample_V_1_2_ce0;
output   sliding_window_buffer_samples_sample_V_1_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_3_address0;
output   sliding_window_buffer_samples_sample_V_1_3_ce0;
output   sliding_window_buffer_samples_sample_V_1_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_4_address0;
output   sliding_window_buffer_samples_sample_V_1_4_ce0;
output   sliding_window_buffer_samples_sample_V_1_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_5_address0;
output   sliding_window_buffer_samples_sample_V_1_5_ce0;
output   sliding_window_buffer_samples_sample_V_1_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_6_address0;
output   sliding_window_buffer_samples_sample_V_1_6_ce0;
output   sliding_window_buffer_samples_sample_V_1_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_7_address0;
output   sliding_window_buffer_samples_sample_V_1_7_ce0;
output   sliding_window_buffer_samples_sample_V_1_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_8_address0;
output   sliding_window_buffer_samples_sample_V_1_8_ce0;
output   sliding_window_buffer_samples_sample_V_1_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_9_address0;
output   sliding_window_buffer_samples_sample_V_1_9_ce0;
output   sliding_window_buffer_samples_sample_V_1_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_10_address0;
output   sliding_window_buffer_samples_sample_V_1_10_ce0;
output   sliding_window_buffer_samples_sample_V_1_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_1_11_address0;
output   sliding_window_buffer_samples_sample_V_1_11_ce0;
output   sliding_window_buffer_samples_sample_V_1_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_1_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_0_address0;
output   sliding_window_buffer_samples_timestamp_V_1_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_1_address0;
output   sliding_window_buffer_samples_timestamp_V_1_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_2_address0;
output   sliding_window_buffer_samples_timestamp_V_1_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_3_address0;
output   sliding_window_buffer_samples_timestamp_V_1_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_4_address0;
output   sliding_window_buffer_samples_timestamp_V_1_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_5_address0;
output   sliding_window_buffer_samples_timestamp_V_1_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_6_address0;
output   sliding_window_buffer_samples_timestamp_V_1_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_7_address0;
output   sliding_window_buffer_samples_timestamp_V_1_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_8_address0;
output   sliding_window_buffer_samples_timestamp_V_1_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_9_address0;
output   sliding_window_buffer_samples_timestamp_V_1_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_10_address0;
output   sliding_window_buffer_samples_timestamp_V_1_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_1_11_address0;
output   sliding_window_buffer_samples_timestamp_V_1_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_1_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_1_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_0_address0;
output   sliding_window_buffer_samples_sample_V_2_0_ce0;
output   sliding_window_buffer_samples_sample_V_2_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_1_address0;
output   sliding_window_buffer_samples_sample_V_2_1_ce0;
output   sliding_window_buffer_samples_sample_V_2_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_2_address0;
output   sliding_window_buffer_samples_sample_V_2_2_ce0;
output   sliding_window_buffer_samples_sample_V_2_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_3_address0;
output   sliding_window_buffer_samples_sample_V_2_3_ce0;
output   sliding_window_buffer_samples_sample_V_2_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_4_address0;
output   sliding_window_buffer_samples_sample_V_2_4_ce0;
output   sliding_window_buffer_samples_sample_V_2_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_5_address0;
output   sliding_window_buffer_samples_sample_V_2_5_ce0;
output   sliding_window_buffer_samples_sample_V_2_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_6_address0;
output   sliding_window_buffer_samples_sample_V_2_6_ce0;
output   sliding_window_buffer_samples_sample_V_2_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_7_address0;
output   sliding_window_buffer_samples_sample_V_2_7_ce0;
output   sliding_window_buffer_samples_sample_V_2_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_8_address0;
output   sliding_window_buffer_samples_sample_V_2_8_ce0;
output   sliding_window_buffer_samples_sample_V_2_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_9_address0;
output   sliding_window_buffer_samples_sample_V_2_9_ce0;
output   sliding_window_buffer_samples_sample_V_2_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_10_address0;
output   sliding_window_buffer_samples_sample_V_2_10_ce0;
output   sliding_window_buffer_samples_sample_V_2_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_2_11_address0;
output   sliding_window_buffer_samples_sample_V_2_11_ce0;
output   sliding_window_buffer_samples_sample_V_2_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_2_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_0_address0;
output   sliding_window_buffer_samples_timestamp_V_2_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_1_address0;
output   sliding_window_buffer_samples_timestamp_V_2_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_2_address0;
output   sliding_window_buffer_samples_timestamp_V_2_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_3_address0;
output   sliding_window_buffer_samples_timestamp_V_2_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_4_address0;
output   sliding_window_buffer_samples_timestamp_V_2_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_5_address0;
output   sliding_window_buffer_samples_timestamp_V_2_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_6_address0;
output   sliding_window_buffer_samples_timestamp_V_2_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_7_address0;
output   sliding_window_buffer_samples_timestamp_V_2_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_8_address0;
output   sliding_window_buffer_samples_timestamp_V_2_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_9_address0;
output   sliding_window_buffer_samples_timestamp_V_2_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_10_address0;
output   sliding_window_buffer_samples_timestamp_V_2_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_2_11_address0;
output   sliding_window_buffer_samples_timestamp_V_2_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_2_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_2_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_0_address0;
output   sliding_window_buffer_samples_sample_V_3_0_ce0;
output   sliding_window_buffer_samples_sample_V_3_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_1_address0;
output   sliding_window_buffer_samples_sample_V_3_1_ce0;
output   sliding_window_buffer_samples_sample_V_3_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_2_address0;
output   sliding_window_buffer_samples_sample_V_3_2_ce0;
output   sliding_window_buffer_samples_sample_V_3_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_3_address0;
output   sliding_window_buffer_samples_sample_V_3_3_ce0;
output   sliding_window_buffer_samples_sample_V_3_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_4_address0;
output   sliding_window_buffer_samples_sample_V_3_4_ce0;
output   sliding_window_buffer_samples_sample_V_3_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_5_address0;
output   sliding_window_buffer_samples_sample_V_3_5_ce0;
output   sliding_window_buffer_samples_sample_V_3_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_6_address0;
output   sliding_window_buffer_samples_sample_V_3_6_ce0;
output   sliding_window_buffer_samples_sample_V_3_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_7_address0;
output   sliding_window_buffer_samples_sample_V_3_7_ce0;
output   sliding_window_buffer_samples_sample_V_3_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_8_address0;
output   sliding_window_buffer_samples_sample_V_3_8_ce0;
output   sliding_window_buffer_samples_sample_V_3_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_9_address0;
output   sliding_window_buffer_samples_sample_V_3_9_ce0;
output   sliding_window_buffer_samples_sample_V_3_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_10_address0;
output   sliding_window_buffer_samples_sample_V_3_10_ce0;
output   sliding_window_buffer_samples_sample_V_3_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_3_11_address0;
output   sliding_window_buffer_samples_sample_V_3_11_ce0;
output   sliding_window_buffer_samples_sample_V_3_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_3_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_0_address0;
output   sliding_window_buffer_samples_timestamp_V_3_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_1_address0;
output   sliding_window_buffer_samples_timestamp_V_3_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_2_address0;
output   sliding_window_buffer_samples_timestamp_V_3_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_3_address0;
output   sliding_window_buffer_samples_timestamp_V_3_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_4_address0;
output   sliding_window_buffer_samples_timestamp_V_3_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_5_address0;
output   sliding_window_buffer_samples_timestamp_V_3_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_6_address0;
output   sliding_window_buffer_samples_timestamp_V_3_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_7_address0;
output   sliding_window_buffer_samples_timestamp_V_3_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_8_address0;
output   sliding_window_buffer_samples_timestamp_V_3_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_9_address0;
output   sliding_window_buffer_samples_timestamp_V_3_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_10_address0;
output   sliding_window_buffer_samples_timestamp_V_3_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_3_11_address0;
output   sliding_window_buffer_samples_timestamp_V_3_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_3_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_3_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_0_address0;
output   sliding_window_buffer_samples_sample_V_4_0_ce0;
output   sliding_window_buffer_samples_sample_V_4_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_1_address0;
output   sliding_window_buffer_samples_sample_V_4_1_ce0;
output   sliding_window_buffer_samples_sample_V_4_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_2_address0;
output   sliding_window_buffer_samples_sample_V_4_2_ce0;
output   sliding_window_buffer_samples_sample_V_4_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_3_address0;
output   sliding_window_buffer_samples_sample_V_4_3_ce0;
output   sliding_window_buffer_samples_sample_V_4_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_4_address0;
output   sliding_window_buffer_samples_sample_V_4_4_ce0;
output   sliding_window_buffer_samples_sample_V_4_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_5_address0;
output   sliding_window_buffer_samples_sample_V_4_5_ce0;
output   sliding_window_buffer_samples_sample_V_4_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_6_address0;
output   sliding_window_buffer_samples_sample_V_4_6_ce0;
output   sliding_window_buffer_samples_sample_V_4_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_7_address0;
output   sliding_window_buffer_samples_sample_V_4_7_ce0;
output   sliding_window_buffer_samples_sample_V_4_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_8_address0;
output   sliding_window_buffer_samples_sample_V_4_8_ce0;
output   sliding_window_buffer_samples_sample_V_4_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_9_address0;
output   sliding_window_buffer_samples_sample_V_4_9_ce0;
output   sliding_window_buffer_samples_sample_V_4_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_10_address0;
output   sliding_window_buffer_samples_sample_V_4_10_ce0;
output   sliding_window_buffer_samples_sample_V_4_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_4_11_address0;
output   sliding_window_buffer_samples_sample_V_4_11_ce0;
output   sliding_window_buffer_samples_sample_V_4_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_4_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_0_address0;
output   sliding_window_buffer_samples_timestamp_V_4_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_1_address0;
output   sliding_window_buffer_samples_timestamp_V_4_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_2_address0;
output   sliding_window_buffer_samples_timestamp_V_4_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_3_address0;
output   sliding_window_buffer_samples_timestamp_V_4_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_4_address0;
output   sliding_window_buffer_samples_timestamp_V_4_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_5_address0;
output   sliding_window_buffer_samples_timestamp_V_4_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_6_address0;
output   sliding_window_buffer_samples_timestamp_V_4_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_7_address0;
output   sliding_window_buffer_samples_timestamp_V_4_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_8_address0;
output   sliding_window_buffer_samples_timestamp_V_4_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_9_address0;
output   sliding_window_buffer_samples_timestamp_V_4_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_10_address0;
output   sliding_window_buffer_samples_timestamp_V_4_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_4_11_address0;
output   sliding_window_buffer_samples_timestamp_V_4_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_4_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_4_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_0_address0;
output   sliding_window_buffer_samples_sample_V_5_0_ce0;
output   sliding_window_buffer_samples_sample_V_5_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_1_address0;
output   sliding_window_buffer_samples_sample_V_5_1_ce0;
output   sliding_window_buffer_samples_sample_V_5_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_2_address0;
output   sliding_window_buffer_samples_sample_V_5_2_ce0;
output   sliding_window_buffer_samples_sample_V_5_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_3_address0;
output   sliding_window_buffer_samples_sample_V_5_3_ce0;
output   sliding_window_buffer_samples_sample_V_5_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_4_address0;
output   sliding_window_buffer_samples_sample_V_5_4_ce0;
output   sliding_window_buffer_samples_sample_V_5_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_5_address0;
output   sliding_window_buffer_samples_sample_V_5_5_ce0;
output   sliding_window_buffer_samples_sample_V_5_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_6_address0;
output   sliding_window_buffer_samples_sample_V_5_6_ce0;
output   sliding_window_buffer_samples_sample_V_5_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_7_address0;
output   sliding_window_buffer_samples_sample_V_5_7_ce0;
output   sliding_window_buffer_samples_sample_V_5_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_8_address0;
output   sliding_window_buffer_samples_sample_V_5_8_ce0;
output   sliding_window_buffer_samples_sample_V_5_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_9_address0;
output   sliding_window_buffer_samples_sample_V_5_9_ce0;
output   sliding_window_buffer_samples_sample_V_5_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_10_address0;
output   sliding_window_buffer_samples_sample_V_5_10_ce0;
output   sliding_window_buffer_samples_sample_V_5_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_5_11_address0;
output   sliding_window_buffer_samples_sample_V_5_11_ce0;
output   sliding_window_buffer_samples_sample_V_5_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_5_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_0_address0;
output   sliding_window_buffer_samples_timestamp_V_5_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_1_address0;
output   sliding_window_buffer_samples_timestamp_V_5_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_2_address0;
output   sliding_window_buffer_samples_timestamp_V_5_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_3_address0;
output   sliding_window_buffer_samples_timestamp_V_5_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_4_address0;
output   sliding_window_buffer_samples_timestamp_V_5_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_5_address0;
output   sliding_window_buffer_samples_timestamp_V_5_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_6_address0;
output   sliding_window_buffer_samples_timestamp_V_5_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_7_address0;
output   sliding_window_buffer_samples_timestamp_V_5_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_8_address0;
output   sliding_window_buffer_samples_timestamp_V_5_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_9_address0;
output   sliding_window_buffer_samples_timestamp_V_5_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_10_address0;
output   sliding_window_buffer_samples_timestamp_V_5_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_5_11_address0;
output   sliding_window_buffer_samples_timestamp_V_5_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_5_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_5_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_0_address0;
output   sliding_window_buffer_samples_sample_V_6_0_ce0;
output   sliding_window_buffer_samples_sample_V_6_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_1_address0;
output   sliding_window_buffer_samples_sample_V_6_1_ce0;
output   sliding_window_buffer_samples_sample_V_6_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_2_address0;
output   sliding_window_buffer_samples_sample_V_6_2_ce0;
output   sliding_window_buffer_samples_sample_V_6_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_3_address0;
output   sliding_window_buffer_samples_sample_V_6_3_ce0;
output   sliding_window_buffer_samples_sample_V_6_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_4_address0;
output   sliding_window_buffer_samples_sample_V_6_4_ce0;
output   sliding_window_buffer_samples_sample_V_6_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_5_address0;
output   sliding_window_buffer_samples_sample_V_6_5_ce0;
output   sliding_window_buffer_samples_sample_V_6_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_6_address0;
output   sliding_window_buffer_samples_sample_V_6_6_ce0;
output   sliding_window_buffer_samples_sample_V_6_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_7_address0;
output   sliding_window_buffer_samples_sample_V_6_7_ce0;
output   sliding_window_buffer_samples_sample_V_6_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_8_address0;
output   sliding_window_buffer_samples_sample_V_6_8_ce0;
output   sliding_window_buffer_samples_sample_V_6_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_9_address0;
output   sliding_window_buffer_samples_sample_V_6_9_ce0;
output   sliding_window_buffer_samples_sample_V_6_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_10_address0;
output   sliding_window_buffer_samples_sample_V_6_10_ce0;
output   sliding_window_buffer_samples_sample_V_6_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_6_11_address0;
output   sliding_window_buffer_samples_sample_V_6_11_ce0;
output   sliding_window_buffer_samples_sample_V_6_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_6_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_0_address0;
output   sliding_window_buffer_samples_timestamp_V_6_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_1_address0;
output   sliding_window_buffer_samples_timestamp_V_6_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_2_address0;
output   sliding_window_buffer_samples_timestamp_V_6_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_3_address0;
output   sliding_window_buffer_samples_timestamp_V_6_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_4_address0;
output   sliding_window_buffer_samples_timestamp_V_6_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_5_address0;
output   sliding_window_buffer_samples_timestamp_V_6_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_6_address0;
output   sliding_window_buffer_samples_timestamp_V_6_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_7_address0;
output   sliding_window_buffer_samples_timestamp_V_6_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_8_address0;
output   sliding_window_buffer_samples_timestamp_V_6_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_9_address0;
output   sliding_window_buffer_samples_timestamp_V_6_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_10_address0;
output   sliding_window_buffer_samples_timestamp_V_6_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_6_11_address0;
output   sliding_window_buffer_samples_timestamp_V_6_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_6_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_6_11_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_0_address0;
output   sliding_window_buffer_samples_sample_V_7_0_ce0;
output   sliding_window_buffer_samples_sample_V_7_0_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_0_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_1_address0;
output   sliding_window_buffer_samples_sample_V_7_1_ce0;
output   sliding_window_buffer_samples_sample_V_7_1_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_1_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_2_address0;
output   sliding_window_buffer_samples_sample_V_7_2_ce0;
output   sliding_window_buffer_samples_sample_V_7_2_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_2_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_3_address0;
output   sliding_window_buffer_samples_sample_V_7_3_ce0;
output   sliding_window_buffer_samples_sample_V_7_3_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_3_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_4_address0;
output   sliding_window_buffer_samples_sample_V_7_4_ce0;
output   sliding_window_buffer_samples_sample_V_7_4_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_4_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_5_address0;
output   sliding_window_buffer_samples_sample_V_7_5_ce0;
output   sliding_window_buffer_samples_sample_V_7_5_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_5_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_6_address0;
output   sliding_window_buffer_samples_sample_V_7_6_ce0;
output   sliding_window_buffer_samples_sample_V_7_6_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_6_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_7_address0;
output   sliding_window_buffer_samples_sample_V_7_7_ce0;
output   sliding_window_buffer_samples_sample_V_7_7_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_7_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_8_address0;
output   sliding_window_buffer_samples_sample_V_7_8_ce0;
output   sliding_window_buffer_samples_sample_V_7_8_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_8_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_9_address0;
output   sliding_window_buffer_samples_sample_V_7_9_ce0;
output   sliding_window_buffer_samples_sample_V_7_9_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_9_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_10_address0;
output   sliding_window_buffer_samples_sample_V_7_10_ce0;
output   sliding_window_buffer_samples_sample_V_7_10_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_10_d0;
output  [4:0] sliding_window_buffer_samples_sample_V_7_11_address0;
output   sliding_window_buffer_samples_sample_V_7_11_ce0;
output   sliding_window_buffer_samples_sample_V_7_11_we0;
output  [11:0] sliding_window_buffer_samples_sample_V_7_11_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_0_address0;
output   sliding_window_buffer_samples_timestamp_V_7_0_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_0_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_0_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_1_address0;
output   sliding_window_buffer_samples_timestamp_V_7_1_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_1_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_1_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_2_address0;
output   sliding_window_buffer_samples_timestamp_V_7_2_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_2_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_2_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_3_address0;
output   sliding_window_buffer_samples_timestamp_V_7_3_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_3_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_3_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_4_address0;
output   sliding_window_buffer_samples_timestamp_V_7_4_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_4_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_4_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_5_address0;
output   sliding_window_buffer_samples_timestamp_V_7_5_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_5_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_5_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_6_address0;
output   sliding_window_buffer_samples_timestamp_V_7_6_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_6_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_6_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_7_address0;
output   sliding_window_buffer_samples_timestamp_V_7_7_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_7_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_7_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_8_address0;
output   sliding_window_buffer_samples_timestamp_V_7_8_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_8_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_8_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_9_address0;
output   sliding_window_buffer_samples_timestamp_V_7_9_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_9_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_9_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_10_address0;
output   sliding_window_buffer_samples_timestamp_V_7_10_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_10_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_10_d0;
output  [4:0] sliding_window_buffer_samples_timestamp_V_7_11_address0;
output   sliding_window_buffer_samples_timestamp_V_7_11_ce0;
output   sliding_window_buffer_samples_timestamp_V_7_11_we0;
output  [19:0] sliding_window_buffer_samples_timestamp_V_7_11_d0;
input  [5:0] sliding_window_back_ptr_s_i;
output  [5:0] sliding_window_back_ptr_s_o;
output   sliding_window_back_ptr_s_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg buffer_in_0_ce0;
reg buffer_in_1_ce0;
reg buffer_in_2_ce0;
reg buffer_in_3_ce0;
reg buffer_in_4_ce0;
reg buffer_in_5_ce0;
reg buffer_in_6_ce0;
reg buffer_in_7_ce0;
reg buffer_in_8_ce0;
reg buffer_in_9_ce0;
reg buffer_in_10_ce0;
reg buffer_in_11_ce0;
reg[5:0] sliding_window_front_ptr_s_o;
reg sliding_window_front_ptr_s_o_ap_vld;
reg[4:0] sliding_window_buffer_samples_sample_V_0_0_address0;
reg sliding_window_buffer_samples_sample_V_0_0_ce0;
reg sliding_window_buffer_samples_sample_V_0_0_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_1_address0;
reg sliding_window_buffer_samples_sample_V_0_1_ce0;
reg sliding_window_buffer_samples_sample_V_0_1_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_2_address0;
reg sliding_window_buffer_samples_sample_V_0_2_ce0;
reg sliding_window_buffer_samples_sample_V_0_2_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_3_address0;
reg sliding_window_buffer_samples_sample_V_0_3_ce0;
reg sliding_window_buffer_samples_sample_V_0_3_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_4_address0;
reg sliding_window_buffer_samples_sample_V_0_4_ce0;
reg sliding_window_buffer_samples_sample_V_0_4_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_5_address0;
reg sliding_window_buffer_samples_sample_V_0_5_ce0;
reg sliding_window_buffer_samples_sample_V_0_5_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_6_address0;
reg sliding_window_buffer_samples_sample_V_0_6_ce0;
reg sliding_window_buffer_samples_sample_V_0_6_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_7_address0;
reg sliding_window_buffer_samples_sample_V_0_7_ce0;
reg sliding_window_buffer_samples_sample_V_0_7_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_8_address0;
reg sliding_window_buffer_samples_sample_V_0_8_ce0;
reg sliding_window_buffer_samples_sample_V_0_8_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_9_address0;
reg sliding_window_buffer_samples_sample_V_0_9_ce0;
reg sliding_window_buffer_samples_sample_V_0_9_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_10_address0;
reg sliding_window_buffer_samples_sample_V_0_10_ce0;
reg sliding_window_buffer_samples_sample_V_0_10_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_0_11_address0;
reg sliding_window_buffer_samples_sample_V_0_11_ce0;
reg sliding_window_buffer_samples_sample_V_0_11_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_0_address0;
reg sliding_window_buffer_samples_timestamp_V_0_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_0_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_1_address0;
reg sliding_window_buffer_samples_timestamp_V_0_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_1_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_2_address0;
reg sliding_window_buffer_samples_timestamp_V_0_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_2_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_3_address0;
reg sliding_window_buffer_samples_timestamp_V_0_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_3_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_4_address0;
reg sliding_window_buffer_samples_timestamp_V_0_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_4_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_5_address0;
reg sliding_window_buffer_samples_timestamp_V_0_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_5_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_6_address0;
reg sliding_window_buffer_samples_timestamp_V_0_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_6_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_7_address0;
reg sliding_window_buffer_samples_timestamp_V_0_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_7_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_8_address0;
reg sliding_window_buffer_samples_timestamp_V_0_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_8_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_9_address0;
reg sliding_window_buffer_samples_timestamp_V_0_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_9_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_10_address0;
reg sliding_window_buffer_samples_timestamp_V_0_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_10_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_0_11_address0;
reg sliding_window_buffer_samples_timestamp_V_0_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_0_11_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_0_address0;
reg sliding_window_buffer_samples_sample_V_1_0_ce0;
reg sliding_window_buffer_samples_sample_V_1_0_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_1_address0;
reg sliding_window_buffer_samples_sample_V_1_1_ce0;
reg sliding_window_buffer_samples_sample_V_1_1_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_2_address0;
reg sliding_window_buffer_samples_sample_V_1_2_ce0;
reg sliding_window_buffer_samples_sample_V_1_2_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_3_address0;
reg sliding_window_buffer_samples_sample_V_1_3_ce0;
reg sliding_window_buffer_samples_sample_V_1_3_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_4_address0;
reg sliding_window_buffer_samples_sample_V_1_4_ce0;
reg sliding_window_buffer_samples_sample_V_1_4_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_5_address0;
reg sliding_window_buffer_samples_sample_V_1_5_ce0;
reg sliding_window_buffer_samples_sample_V_1_5_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_6_address0;
reg sliding_window_buffer_samples_sample_V_1_6_ce0;
reg sliding_window_buffer_samples_sample_V_1_6_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_7_address0;
reg sliding_window_buffer_samples_sample_V_1_7_ce0;
reg sliding_window_buffer_samples_sample_V_1_7_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_8_address0;
reg sliding_window_buffer_samples_sample_V_1_8_ce0;
reg sliding_window_buffer_samples_sample_V_1_8_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_9_address0;
reg sliding_window_buffer_samples_sample_V_1_9_ce0;
reg sliding_window_buffer_samples_sample_V_1_9_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_10_address0;
reg sliding_window_buffer_samples_sample_V_1_10_ce0;
reg sliding_window_buffer_samples_sample_V_1_10_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_1_11_address0;
reg sliding_window_buffer_samples_sample_V_1_11_ce0;
reg sliding_window_buffer_samples_sample_V_1_11_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_0_address0;
reg sliding_window_buffer_samples_timestamp_V_1_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_0_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_1_address0;
reg sliding_window_buffer_samples_timestamp_V_1_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_1_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_2_address0;
reg sliding_window_buffer_samples_timestamp_V_1_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_2_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_3_address0;
reg sliding_window_buffer_samples_timestamp_V_1_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_3_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_4_address0;
reg sliding_window_buffer_samples_timestamp_V_1_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_4_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_5_address0;
reg sliding_window_buffer_samples_timestamp_V_1_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_5_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_6_address0;
reg sliding_window_buffer_samples_timestamp_V_1_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_6_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_7_address0;
reg sliding_window_buffer_samples_timestamp_V_1_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_7_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_8_address0;
reg sliding_window_buffer_samples_timestamp_V_1_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_8_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_9_address0;
reg sliding_window_buffer_samples_timestamp_V_1_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_9_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_10_address0;
reg sliding_window_buffer_samples_timestamp_V_1_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_10_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_1_11_address0;
reg sliding_window_buffer_samples_timestamp_V_1_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_1_11_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_0_address0;
reg sliding_window_buffer_samples_sample_V_2_0_ce0;
reg sliding_window_buffer_samples_sample_V_2_0_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_1_address0;
reg sliding_window_buffer_samples_sample_V_2_1_ce0;
reg sliding_window_buffer_samples_sample_V_2_1_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_2_address0;
reg sliding_window_buffer_samples_sample_V_2_2_ce0;
reg sliding_window_buffer_samples_sample_V_2_2_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_3_address0;
reg sliding_window_buffer_samples_sample_V_2_3_ce0;
reg sliding_window_buffer_samples_sample_V_2_3_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_4_address0;
reg sliding_window_buffer_samples_sample_V_2_4_ce0;
reg sliding_window_buffer_samples_sample_V_2_4_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_5_address0;
reg sliding_window_buffer_samples_sample_V_2_5_ce0;
reg sliding_window_buffer_samples_sample_V_2_5_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_6_address0;
reg sliding_window_buffer_samples_sample_V_2_6_ce0;
reg sliding_window_buffer_samples_sample_V_2_6_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_7_address0;
reg sliding_window_buffer_samples_sample_V_2_7_ce0;
reg sliding_window_buffer_samples_sample_V_2_7_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_8_address0;
reg sliding_window_buffer_samples_sample_V_2_8_ce0;
reg sliding_window_buffer_samples_sample_V_2_8_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_9_address0;
reg sliding_window_buffer_samples_sample_V_2_9_ce0;
reg sliding_window_buffer_samples_sample_V_2_9_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_10_address0;
reg sliding_window_buffer_samples_sample_V_2_10_ce0;
reg sliding_window_buffer_samples_sample_V_2_10_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_2_11_address0;
reg sliding_window_buffer_samples_sample_V_2_11_ce0;
reg sliding_window_buffer_samples_sample_V_2_11_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_0_address0;
reg sliding_window_buffer_samples_timestamp_V_2_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_0_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_1_address0;
reg sliding_window_buffer_samples_timestamp_V_2_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_1_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_2_address0;
reg sliding_window_buffer_samples_timestamp_V_2_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_2_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_3_address0;
reg sliding_window_buffer_samples_timestamp_V_2_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_3_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_4_address0;
reg sliding_window_buffer_samples_timestamp_V_2_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_4_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_5_address0;
reg sliding_window_buffer_samples_timestamp_V_2_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_5_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_6_address0;
reg sliding_window_buffer_samples_timestamp_V_2_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_6_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_7_address0;
reg sliding_window_buffer_samples_timestamp_V_2_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_7_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_8_address0;
reg sliding_window_buffer_samples_timestamp_V_2_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_8_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_9_address0;
reg sliding_window_buffer_samples_timestamp_V_2_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_9_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_10_address0;
reg sliding_window_buffer_samples_timestamp_V_2_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_10_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_2_11_address0;
reg sliding_window_buffer_samples_timestamp_V_2_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_2_11_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_0_address0;
reg sliding_window_buffer_samples_sample_V_3_0_ce0;
reg sliding_window_buffer_samples_sample_V_3_0_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_1_address0;
reg sliding_window_buffer_samples_sample_V_3_1_ce0;
reg sliding_window_buffer_samples_sample_V_3_1_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_2_address0;
reg sliding_window_buffer_samples_sample_V_3_2_ce0;
reg sliding_window_buffer_samples_sample_V_3_2_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_3_address0;
reg sliding_window_buffer_samples_sample_V_3_3_ce0;
reg sliding_window_buffer_samples_sample_V_3_3_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_4_address0;
reg sliding_window_buffer_samples_sample_V_3_4_ce0;
reg sliding_window_buffer_samples_sample_V_3_4_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_5_address0;
reg sliding_window_buffer_samples_sample_V_3_5_ce0;
reg sliding_window_buffer_samples_sample_V_3_5_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_6_address0;
reg sliding_window_buffer_samples_sample_V_3_6_ce0;
reg sliding_window_buffer_samples_sample_V_3_6_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_7_address0;
reg sliding_window_buffer_samples_sample_V_3_7_ce0;
reg sliding_window_buffer_samples_sample_V_3_7_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_8_address0;
reg sliding_window_buffer_samples_sample_V_3_8_ce0;
reg sliding_window_buffer_samples_sample_V_3_8_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_9_address0;
reg sliding_window_buffer_samples_sample_V_3_9_ce0;
reg sliding_window_buffer_samples_sample_V_3_9_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_10_address0;
reg sliding_window_buffer_samples_sample_V_3_10_ce0;
reg sliding_window_buffer_samples_sample_V_3_10_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_3_11_address0;
reg sliding_window_buffer_samples_sample_V_3_11_ce0;
reg sliding_window_buffer_samples_sample_V_3_11_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_0_address0;
reg sliding_window_buffer_samples_timestamp_V_3_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_0_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_1_address0;
reg sliding_window_buffer_samples_timestamp_V_3_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_1_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_2_address0;
reg sliding_window_buffer_samples_timestamp_V_3_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_2_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_3_address0;
reg sliding_window_buffer_samples_timestamp_V_3_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_3_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_4_address0;
reg sliding_window_buffer_samples_timestamp_V_3_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_4_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_5_address0;
reg sliding_window_buffer_samples_timestamp_V_3_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_5_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_6_address0;
reg sliding_window_buffer_samples_timestamp_V_3_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_6_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_7_address0;
reg sliding_window_buffer_samples_timestamp_V_3_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_7_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_8_address0;
reg sliding_window_buffer_samples_timestamp_V_3_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_8_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_9_address0;
reg sliding_window_buffer_samples_timestamp_V_3_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_9_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_10_address0;
reg sliding_window_buffer_samples_timestamp_V_3_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_10_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_3_11_address0;
reg sliding_window_buffer_samples_timestamp_V_3_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_3_11_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_0_address0;
reg sliding_window_buffer_samples_sample_V_4_0_ce0;
reg sliding_window_buffer_samples_sample_V_4_0_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_1_address0;
reg sliding_window_buffer_samples_sample_V_4_1_ce0;
reg sliding_window_buffer_samples_sample_V_4_1_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_2_address0;
reg sliding_window_buffer_samples_sample_V_4_2_ce0;
reg sliding_window_buffer_samples_sample_V_4_2_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_3_address0;
reg sliding_window_buffer_samples_sample_V_4_3_ce0;
reg sliding_window_buffer_samples_sample_V_4_3_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_4_address0;
reg sliding_window_buffer_samples_sample_V_4_4_ce0;
reg sliding_window_buffer_samples_sample_V_4_4_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_5_address0;
reg sliding_window_buffer_samples_sample_V_4_5_ce0;
reg sliding_window_buffer_samples_sample_V_4_5_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_6_address0;
reg sliding_window_buffer_samples_sample_V_4_6_ce0;
reg sliding_window_buffer_samples_sample_V_4_6_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_7_address0;
reg sliding_window_buffer_samples_sample_V_4_7_ce0;
reg sliding_window_buffer_samples_sample_V_4_7_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_8_address0;
reg sliding_window_buffer_samples_sample_V_4_8_ce0;
reg sliding_window_buffer_samples_sample_V_4_8_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_9_address0;
reg sliding_window_buffer_samples_sample_V_4_9_ce0;
reg sliding_window_buffer_samples_sample_V_4_9_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_10_address0;
reg sliding_window_buffer_samples_sample_V_4_10_ce0;
reg sliding_window_buffer_samples_sample_V_4_10_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_4_11_address0;
reg sliding_window_buffer_samples_sample_V_4_11_ce0;
reg sliding_window_buffer_samples_sample_V_4_11_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_0_address0;
reg sliding_window_buffer_samples_timestamp_V_4_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_0_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_1_address0;
reg sliding_window_buffer_samples_timestamp_V_4_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_1_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_2_address0;
reg sliding_window_buffer_samples_timestamp_V_4_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_2_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_3_address0;
reg sliding_window_buffer_samples_timestamp_V_4_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_3_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_4_address0;
reg sliding_window_buffer_samples_timestamp_V_4_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_4_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_5_address0;
reg sliding_window_buffer_samples_timestamp_V_4_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_5_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_6_address0;
reg sliding_window_buffer_samples_timestamp_V_4_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_6_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_7_address0;
reg sliding_window_buffer_samples_timestamp_V_4_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_7_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_8_address0;
reg sliding_window_buffer_samples_timestamp_V_4_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_8_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_9_address0;
reg sliding_window_buffer_samples_timestamp_V_4_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_9_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_10_address0;
reg sliding_window_buffer_samples_timestamp_V_4_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_10_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_4_11_address0;
reg sliding_window_buffer_samples_timestamp_V_4_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_4_11_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_0_address0;
reg sliding_window_buffer_samples_sample_V_5_0_ce0;
reg sliding_window_buffer_samples_sample_V_5_0_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_1_address0;
reg sliding_window_buffer_samples_sample_V_5_1_ce0;
reg sliding_window_buffer_samples_sample_V_5_1_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_2_address0;
reg sliding_window_buffer_samples_sample_V_5_2_ce0;
reg sliding_window_buffer_samples_sample_V_5_2_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_3_address0;
reg sliding_window_buffer_samples_sample_V_5_3_ce0;
reg sliding_window_buffer_samples_sample_V_5_3_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_4_address0;
reg sliding_window_buffer_samples_sample_V_5_4_ce0;
reg sliding_window_buffer_samples_sample_V_5_4_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_5_address0;
reg sliding_window_buffer_samples_sample_V_5_5_ce0;
reg sliding_window_buffer_samples_sample_V_5_5_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_6_address0;
reg sliding_window_buffer_samples_sample_V_5_6_ce0;
reg sliding_window_buffer_samples_sample_V_5_6_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_7_address0;
reg sliding_window_buffer_samples_sample_V_5_7_ce0;
reg sliding_window_buffer_samples_sample_V_5_7_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_8_address0;
reg sliding_window_buffer_samples_sample_V_5_8_ce0;
reg sliding_window_buffer_samples_sample_V_5_8_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_9_address0;
reg sliding_window_buffer_samples_sample_V_5_9_ce0;
reg sliding_window_buffer_samples_sample_V_5_9_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_10_address0;
reg sliding_window_buffer_samples_sample_V_5_10_ce0;
reg sliding_window_buffer_samples_sample_V_5_10_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_5_11_address0;
reg sliding_window_buffer_samples_sample_V_5_11_ce0;
reg sliding_window_buffer_samples_sample_V_5_11_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_0_address0;
reg sliding_window_buffer_samples_timestamp_V_5_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_0_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_1_address0;
reg sliding_window_buffer_samples_timestamp_V_5_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_1_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_2_address0;
reg sliding_window_buffer_samples_timestamp_V_5_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_2_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_3_address0;
reg sliding_window_buffer_samples_timestamp_V_5_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_3_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_4_address0;
reg sliding_window_buffer_samples_timestamp_V_5_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_4_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_5_address0;
reg sliding_window_buffer_samples_timestamp_V_5_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_5_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_6_address0;
reg sliding_window_buffer_samples_timestamp_V_5_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_6_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_7_address0;
reg sliding_window_buffer_samples_timestamp_V_5_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_7_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_8_address0;
reg sliding_window_buffer_samples_timestamp_V_5_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_8_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_9_address0;
reg sliding_window_buffer_samples_timestamp_V_5_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_9_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_10_address0;
reg sliding_window_buffer_samples_timestamp_V_5_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_10_we0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_5_11_address0;
reg sliding_window_buffer_samples_timestamp_V_5_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_5_11_we0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_0_address0;
reg sliding_window_buffer_samples_sample_V_6_0_ce0;
reg sliding_window_buffer_samples_sample_V_6_0_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_0_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_1_address0;
reg sliding_window_buffer_samples_sample_V_6_1_ce0;
reg sliding_window_buffer_samples_sample_V_6_1_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_1_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_2_address0;
reg sliding_window_buffer_samples_sample_V_6_2_ce0;
reg sliding_window_buffer_samples_sample_V_6_2_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_2_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_3_address0;
reg sliding_window_buffer_samples_sample_V_6_3_ce0;
reg sliding_window_buffer_samples_sample_V_6_3_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_3_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_4_address0;
reg sliding_window_buffer_samples_sample_V_6_4_ce0;
reg sliding_window_buffer_samples_sample_V_6_4_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_4_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_5_address0;
reg sliding_window_buffer_samples_sample_V_6_5_ce0;
reg sliding_window_buffer_samples_sample_V_6_5_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_5_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_6_address0;
reg sliding_window_buffer_samples_sample_V_6_6_ce0;
reg sliding_window_buffer_samples_sample_V_6_6_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_6_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_7_address0;
reg sliding_window_buffer_samples_sample_V_6_7_ce0;
reg sliding_window_buffer_samples_sample_V_6_7_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_7_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_8_address0;
reg sliding_window_buffer_samples_sample_V_6_8_ce0;
reg sliding_window_buffer_samples_sample_V_6_8_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_8_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_9_address0;
reg sliding_window_buffer_samples_sample_V_6_9_ce0;
reg sliding_window_buffer_samples_sample_V_6_9_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_9_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_10_address0;
reg sliding_window_buffer_samples_sample_V_6_10_ce0;
reg sliding_window_buffer_samples_sample_V_6_10_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_10_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_6_11_address0;
reg sliding_window_buffer_samples_sample_V_6_11_ce0;
reg sliding_window_buffer_samples_sample_V_6_11_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_6_11_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_0_address0;
reg sliding_window_buffer_samples_timestamp_V_6_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_0_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_0_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_1_address0;
reg sliding_window_buffer_samples_timestamp_V_6_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_1_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_1_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_2_address0;
reg sliding_window_buffer_samples_timestamp_V_6_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_2_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_2_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_3_address0;
reg sliding_window_buffer_samples_timestamp_V_6_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_3_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_3_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_4_address0;
reg sliding_window_buffer_samples_timestamp_V_6_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_4_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_4_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_5_address0;
reg sliding_window_buffer_samples_timestamp_V_6_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_5_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_5_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_6_address0;
reg sliding_window_buffer_samples_timestamp_V_6_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_6_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_6_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_7_address0;
reg sliding_window_buffer_samples_timestamp_V_6_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_7_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_7_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_8_address0;
reg sliding_window_buffer_samples_timestamp_V_6_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_8_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_8_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_9_address0;
reg sliding_window_buffer_samples_timestamp_V_6_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_9_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_9_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_10_address0;
reg sliding_window_buffer_samples_timestamp_V_6_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_10_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_10_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_6_11_address0;
reg sliding_window_buffer_samples_timestamp_V_6_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_6_11_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_6_11_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_0_address0;
reg sliding_window_buffer_samples_sample_V_7_0_ce0;
reg sliding_window_buffer_samples_sample_V_7_0_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_0_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_1_address0;
reg sliding_window_buffer_samples_sample_V_7_1_ce0;
reg sliding_window_buffer_samples_sample_V_7_1_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_1_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_2_address0;
reg sliding_window_buffer_samples_sample_V_7_2_ce0;
reg sliding_window_buffer_samples_sample_V_7_2_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_2_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_3_address0;
reg sliding_window_buffer_samples_sample_V_7_3_ce0;
reg sliding_window_buffer_samples_sample_V_7_3_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_3_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_4_address0;
reg sliding_window_buffer_samples_sample_V_7_4_ce0;
reg sliding_window_buffer_samples_sample_V_7_4_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_4_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_5_address0;
reg sliding_window_buffer_samples_sample_V_7_5_ce0;
reg sliding_window_buffer_samples_sample_V_7_5_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_5_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_6_address0;
reg sliding_window_buffer_samples_sample_V_7_6_ce0;
reg sliding_window_buffer_samples_sample_V_7_6_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_6_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_7_address0;
reg sliding_window_buffer_samples_sample_V_7_7_ce0;
reg sliding_window_buffer_samples_sample_V_7_7_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_7_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_8_address0;
reg sliding_window_buffer_samples_sample_V_7_8_ce0;
reg sliding_window_buffer_samples_sample_V_7_8_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_8_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_9_address0;
reg sliding_window_buffer_samples_sample_V_7_9_ce0;
reg sliding_window_buffer_samples_sample_V_7_9_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_9_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_10_address0;
reg sliding_window_buffer_samples_sample_V_7_10_ce0;
reg sliding_window_buffer_samples_sample_V_7_10_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_10_d0;
reg[4:0] sliding_window_buffer_samples_sample_V_7_11_address0;
reg sliding_window_buffer_samples_sample_V_7_11_ce0;
reg sliding_window_buffer_samples_sample_V_7_11_we0;
reg[11:0] sliding_window_buffer_samples_sample_V_7_11_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_0_address0;
reg sliding_window_buffer_samples_timestamp_V_7_0_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_0_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_0_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_1_address0;
reg sliding_window_buffer_samples_timestamp_V_7_1_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_1_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_1_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_2_address0;
reg sliding_window_buffer_samples_timestamp_V_7_2_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_2_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_2_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_3_address0;
reg sliding_window_buffer_samples_timestamp_V_7_3_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_3_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_3_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_4_address0;
reg sliding_window_buffer_samples_timestamp_V_7_4_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_4_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_4_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_5_address0;
reg sliding_window_buffer_samples_timestamp_V_7_5_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_5_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_5_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_6_address0;
reg sliding_window_buffer_samples_timestamp_V_7_6_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_6_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_6_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_7_address0;
reg sliding_window_buffer_samples_timestamp_V_7_7_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_7_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_7_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_8_address0;
reg sliding_window_buffer_samples_timestamp_V_7_8_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_8_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_8_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_9_address0;
reg sliding_window_buffer_samples_timestamp_V_7_9_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_9_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_9_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_10_address0;
reg sliding_window_buffer_samples_timestamp_V_7_10_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_10_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_10_d0;
reg[4:0] sliding_window_buffer_samples_timestamp_V_7_11_address0;
reg sliding_window_buffer_samples_timestamp_V_7_11_ce0;
reg sliding_window_buffer_samples_timestamp_V_7_11_we0;
reg[19:0] sliding_window_buffer_samples_timestamp_V_7_11_d0;
reg[5:0] sliding_window_back_ptr_s_o;
reg sliding_window_back_ptr_s_o_ap_vld;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] sliding_window_size_s;
reg   [3:0] i_reg_7314;
wire   [3:0] add_ln84_fu_7337_p2;
reg   [3:0] add_ln84_reg_8113;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln84_fu_7343_p2;
reg   [0:0] icmp_ln84_reg_8118;
wire   [3:0] add_ln19_fu_7589_p2;
reg   [3:0] add_ln19_reg_8182;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln19_fu_7595_p1;
reg   [63:0] zext_ln19_reg_8187;
wire   [0:0] icmp_ln19_fu_7623_p2;
wire   [11:0] sample_period_samples_0_sample_V_q1;
reg   [11:0] sample_period_samples_0_sample_V_load_reg_8578;
wire    ap_CS_fsm_state7;
wire   [11:0] sample_period_samples_1_sample_V_q1;
reg   [11:0] sample_period_samples_1_sample_V_load_reg_8583;
wire   [11:0] sample_period_samples_2_sample_V_q1;
reg   [11:0] sample_period_samples_2_sample_V_load_reg_8588;
wire   [11:0] sample_period_samples_3_sample_V_q1;
reg   [11:0] sample_period_samples_3_sample_V_load_reg_8593;
wire   [11:0] sample_period_samples_4_sample_V_q1;
reg   [11:0] sample_period_samples_4_sample_V_load_reg_8598;
wire   [11:0] sample_period_samples_5_sample_V_q1;
reg   [11:0] sample_period_samples_5_sample_V_load_reg_8603;
wire   [11:0] sample_period_samples_6_sample_V_q1;
reg   [11:0] sample_period_samples_6_sample_V_load_reg_8608;
wire   [11:0] sample_period_samples_7_sample_V_q1;
reg   [11:0] sample_period_samples_7_sample_V_load_reg_8613;
wire   [11:0] sample_period_samples_8_sample_V_q1;
reg   [11:0] sample_period_samples_8_sample_V_load_reg_8618;
wire   [11:0] sample_period_samples_9_sample_V_q1;
reg   [11:0] sample_period_samples_9_sample_V_load_reg_8623;
wire   [11:0] sample_period_samples_10_sample_V_q1;
reg   [11:0] sample_period_samples_10_sample_V_load_reg_8628;
wire   [11:0] sample_period_samples_11_sample_V_q1;
reg   [11:0] sample_period_samples_11_sample_V_load_reg_8633;
wire   [19:0] sample_period_samples_0_timestamp_V_q1;
reg   [19:0] sample_period_samples_0_timestamp_V_load_reg_8638;
wire   [19:0] sample_period_samples_1_timestamp_V_q1;
reg   [19:0] sample_period_samples_1_timestamp_V_load_reg_8643;
wire   [19:0] sample_period_samples_2_timestamp_V_q1;
reg   [19:0] sample_period_samples_2_timestamp_V_load_reg_8648;
wire   [19:0] sample_period_samples_3_timestamp_V_q1;
reg   [19:0] sample_period_samples_3_timestamp_V_load_reg_8653;
wire   [19:0] sample_period_samples_4_timestamp_V_q1;
reg   [19:0] sample_period_samples_4_timestamp_V_load_reg_8658;
wire   [19:0] sample_period_samples_5_timestamp_V_q1;
reg   [19:0] sample_period_samples_5_timestamp_V_load_reg_8663;
wire   [19:0] sample_period_samples_6_timestamp_V_q1;
reg   [19:0] sample_period_samples_6_timestamp_V_load_reg_8668;
wire   [19:0] sample_period_samples_7_timestamp_V_q1;
reg   [19:0] sample_period_samples_7_timestamp_V_load_reg_8673;
wire   [19:0] sample_period_samples_8_timestamp_V_q1;
reg   [19:0] sample_period_samples_8_timestamp_V_load_reg_8678;
wire   [19:0] sample_period_samples_9_timestamp_V_q1;
reg   [19:0] sample_period_samples_9_timestamp_V_load_reg_8683;
wire   [19:0] sample_period_samples_10_timestamp_V_q1;
reg   [19:0] sample_period_samples_10_timestamp_V_load_reg_8688;
wire   [19:0] sample_period_samples_11_timestamp_V_q1;
reg   [19:0] sample_period_samples_11_timestamp_V_load_reg_8693;
wire   [11:0] sample_period_samples_0_sample_V_q0;
reg   [11:0] sample_period_samples_0_sample_V_load_1_reg_8698;
wire   [11:0] sample_period_samples_1_sample_V_q0;
reg   [11:0] sample_period_samples_1_sample_V_load_1_reg_8703;
wire   [11:0] sample_period_samples_2_sample_V_q0;
reg   [11:0] sample_period_samples_2_sample_V_load_1_reg_8708;
wire   [11:0] sample_period_samples_3_sample_V_q0;
reg   [11:0] sample_period_samples_3_sample_V_load_1_reg_8713;
wire   [11:0] sample_period_samples_4_sample_V_q0;
reg   [11:0] sample_period_samples_4_sample_V_load_1_reg_8718;
wire   [11:0] sample_period_samples_5_sample_V_q0;
reg   [11:0] sample_period_samples_5_sample_V_load_1_reg_8723;
wire   [11:0] sample_period_samples_6_sample_V_q0;
reg   [11:0] sample_period_samples_6_sample_V_load_1_reg_8728;
wire   [11:0] sample_period_samples_7_sample_V_q0;
reg   [11:0] sample_period_samples_7_sample_V_load_1_reg_8733;
wire   [11:0] sample_period_samples_8_sample_V_q0;
reg   [11:0] sample_period_samples_8_sample_V_load_1_reg_8738;
wire   [11:0] sample_period_samples_9_sample_V_q0;
reg   [11:0] sample_period_samples_9_sample_V_load_1_reg_8743;
wire   [11:0] sample_period_samples_10_sample_V_q0;
reg   [11:0] sample_period_samples_10_sample_V_load_1_reg_8748;
wire   [11:0] sample_period_samples_11_sample_V_q0;
reg   [11:0] sample_period_samples_11_sample_V_load_1_reg_8753;
wire   [19:0] sample_period_samples_0_timestamp_V_q0;
reg   [19:0] sample_period_samples_0_timestamp_V_load_1_reg_8758;
wire   [19:0] sample_period_samples_1_timestamp_V_q0;
reg   [19:0] sample_period_samples_1_timestamp_V_load_1_reg_8763;
wire   [19:0] sample_period_samples_2_timestamp_V_q0;
reg   [19:0] sample_period_samples_2_timestamp_V_load_1_reg_8768;
wire   [19:0] sample_period_samples_3_timestamp_V_q0;
reg   [19:0] sample_period_samples_3_timestamp_V_load_1_reg_8773;
wire   [19:0] sample_period_samples_4_timestamp_V_q0;
reg   [19:0] sample_period_samples_4_timestamp_V_load_1_reg_8778;
wire   [19:0] sample_period_samples_5_timestamp_V_q0;
reg   [19:0] sample_period_samples_5_timestamp_V_load_1_reg_8783;
wire   [19:0] sample_period_samples_6_timestamp_V_q0;
reg   [19:0] sample_period_samples_6_timestamp_V_load_1_reg_8788;
wire   [19:0] sample_period_samples_7_timestamp_V_q0;
reg   [19:0] sample_period_samples_7_timestamp_V_load_1_reg_8793;
wire   [19:0] sample_period_samples_8_timestamp_V_q0;
reg   [19:0] sample_period_samples_8_timestamp_V_load_1_reg_8798;
wire   [19:0] sample_period_samples_9_timestamp_V_q0;
reg   [19:0] sample_period_samples_9_timestamp_V_load_1_reg_8803;
wire   [19:0] sample_period_samples_10_timestamp_V_q0;
reg   [19:0] sample_period_samples_10_timestamp_V_load_1_reg_8808;
wire   [19:0] sample_period_samples_11_timestamp_V_q0;
reg   [19:0] sample_period_samples_11_timestamp_V_load_1_reg_8813;
reg   [11:0] sample_period_samples_0_sample_V_load_2_reg_9058;
wire    ap_CS_fsm_state8;
reg   [11:0] sample_period_samples_1_sample_V_load_2_reg_9063;
reg   [11:0] sample_period_samples_2_sample_V_load_2_reg_9068;
reg   [11:0] sample_period_samples_3_sample_V_load_2_reg_9073;
reg   [11:0] sample_period_samples_4_sample_V_load_2_reg_9078;
reg   [11:0] sample_period_samples_5_sample_V_load_2_reg_9083;
reg   [11:0] sample_period_samples_6_sample_V_load_2_reg_9088;
reg   [11:0] sample_period_samples_7_sample_V_load_2_reg_9093;
reg   [11:0] sample_period_samples_8_sample_V_load_2_reg_9098;
reg   [11:0] sample_period_samples_9_sample_V_load_2_reg_9103;
reg   [11:0] sample_period_samples_10_sample_V_load_2_reg_9108;
reg   [11:0] sample_period_samples_11_sample_V_load_2_reg_9113;
reg   [19:0] sample_period_samples_0_timestamp_V_load_2_reg_9118;
reg   [19:0] sample_period_samples_1_timestamp_V_load_2_reg_9123;
reg   [19:0] sample_period_samples_2_timestamp_V_load_2_reg_9128;
reg   [19:0] sample_period_samples_3_timestamp_V_load_2_reg_9133;
reg   [19:0] sample_period_samples_4_timestamp_V_load_2_reg_9138;
reg   [19:0] sample_period_samples_5_timestamp_V_load_2_reg_9143;
reg   [19:0] sample_period_samples_6_timestamp_V_load_2_reg_9148;
reg   [19:0] sample_period_samples_7_timestamp_V_load_2_reg_9153;
reg   [19:0] sample_period_samples_8_timestamp_V_load_2_reg_9158;
reg   [19:0] sample_period_samples_9_timestamp_V_load_2_reg_9163;
reg   [19:0] sample_period_samples_10_timestamp_V_load_2_reg_9168;
reg   [19:0] sample_period_samples_11_timestamp_V_load_2_reg_9173;
reg   [11:0] sample_period_samples_0_sample_V_load_3_reg_9178;
reg   [11:0] sample_period_samples_1_sample_V_load_3_reg_9183;
reg   [11:0] sample_period_samples_2_sample_V_load_3_reg_9188;
reg   [11:0] sample_period_samples_3_sample_V_load_3_reg_9193;
reg   [11:0] sample_period_samples_4_sample_V_load_3_reg_9198;
reg   [11:0] sample_period_samples_5_sample_V_load_3_reg_9203;
reg   [11:0] sample_period_samples_6_sample_V_load_3_reg_9208;
reg   [11:0] sample_period_samples_7_sample_V_load_3_reg_9213;
reg   [11:0] sample_period_samples_8_sample_V_load_3_reg_9218;
reg   [11:0] sample_period_samples_9_sample_V_load_3_reg_9223;
reg   [11:0] sample_period_samples_10_sample_V_load_3_reg_9228;
reg   [11:0] sample_period_samples_11_sample_V_load_3_reg_9233;
reg   [19:0] sample_period_samples_0_timestamp_V_load_3_reg_9238;
reg   [19:0] sample_period_samples_1_timestamp_V_load_3_reg_9243;
reg   [19:0] sample_period_samples_2_timestamp_V_load_3_reg_9248;
reg   [19:0] sample_period_samples_3_timestamp_V_load_3_reg_9253;
reg   [19:0] sample_period_samples_4_timestamp_V_load_3_reg_9258;
reg   [19:0] sample_period_samples_5_timestamp_V_load_3_reg_9263;
reg   [19:0] sample_period_samples_6_timestamp_V_load_3_reg_9268;
reg   [19:0] sample_period_samples_7_timestamp_V_load_3_reg_9273;
reg   [19:0] sample_period_samples_8_timestamp_V_load_3_reg_9278;
reg   [19:0] sample_period_samples_9_timestamp_V_load_3_reg_9283;
reg   [19:0] sample_period_samples_10_timestamp_V_load_3_reg_9288;
reg   [19:0] sample_period_samples_11_timestamp_V_load_3_reg_9293;
reg   [11:0] sample_period_samples_0_sample_V_load_4_reg_9538;
wire    ap_CS_fsm_state9;
reg   [11:0] sample_period_samples_1_sample_V_load_4_reg_9543;
reg   [11:0] sample_period_samples_2_sample_V_load_4_reg_9548;
reg   [11:0] sample_period_samples_3_sample_V_load_4_reg_9553;
reg   [11:0] sample_period_samples_4_sample_V_load_4_reg_9558;
reg   [11:0] sample_period_samples_5_sample_V_load_4_reg_9563;
reg   [11:0] sample_period_samples_6_sample_V_load_4_reg_9568;
reg   [11:0] sample_period_samples_7_sample_V_load_4_reg_9573;
reg   [11:0] sample_period_samples_8_sample_V_load_4_reg_9578;
reg   [11:0] sample_period_samples_9_sample_V_load_4_reg_9583;
reg   [11:0] sample_period_samples_10_sample_V_load_4_reg_9588;
reg   [11:0] sample_period_samples_11_sample_V_load_4_reg_9593;
reg   [19:0] sample_period_samples_0_timestamp_V_load_4_reg_9598;
reg   [19:0] sample_period_samples_1_timestamp_V_load_4_reg_9603;
reg   [19:0] sample_period_samples_2_timestamp_V_load_4_reg_9608;
reg   [19:0] sample_period_samples_3_timestamp_V_load_4_reg_9613;
reg   [19:0] sample_period_samples_4_timestamp_V_load_4_reg_9618;
reg   [19:0] sample_period_samples_5_timestamp_V_load_4_reg_9623;
reg   [19:0] sample_period_samples_6_timestamp_V_load_4_reg_9628;
reg   [19:0] sample_period_samples_7_timestamp_V_load_4_reg_9633;
reg   [19:0] sample_period_samples_8_timestamp_V_load_4_reg_9638;
reg   [19:0] sample_period_samples_9_timestamp_V_load_4_reg_9643;
reg   [19:0] sample_period_samples_10_timestamp_V_load_4_reg_9648;
reg   [19:0] sample_period_samples_11_timestamp_V_load_4_reg_9653;
reg   [11:0] sample_period_samples_0_sample_V_load_5_reg_9658;
reg   [11:0] sample_period_samples_1_sample_V_load_5_reg_9663;
reg   [11:0] sample_period_samples_2_sample_V_load_5_reg_9668;
reg   [11:0] sample_period_samples_3_sample_V_load_5_reg_9673;
reg   [11:0] sample_period_samples_4_sample_V_load_5_reg_9678;
reg   [11:0] sample_period_samples_5_sample_V_load_5_reg_9683;
reg   [11:0] sample_period_samples_6_sample_V_load_5_reg_9688;
reg   [11:0] sample_period_samples_7_sample_V_load_5_reg_9693;
reg   [11:0] sample_period_samples_8_sample_V_load_5_reg_9698;
reg   [11:0] sample_period_samples_9_sample_V_load_5_reg_9703;
reg   [11:0] sample_period_samples_10_sample_V_load_5_reg_9708;
reg   [11:0] sample_period_samples_11_sample_V_load_5_reg_9713;
reg   [19:0] sample_period_samples_0_timestamp_V_load_5_reg_9718;
reg   [19:0] sample_period_samples_1_timestamp_V_load_5_reg_9723;
reg   [19:0] sample_period_samples_2_timestamp_V_load_5_reg_9728;
reg   [19:0] sample_period_samples_3_timestamp_V_load_5_reg_9733;
reg   [19:0] sample_period_samples_4_timestamp_V_load_5_reg_9738;
reg   [19:0] sample_period_samples_5_timestamp_V_load_5_reg_9743;
reg   [19:0] sample_period_samples_6_timestamp_V_load_5_reg_9748;
reg   [19:0] sample_period_samples_7_timestamp_V_load_5_reg_9753;
reg   [19:0] sample_period_samples_8_timestamp_V_load_5_reg_9758;
reg   [19:0] sample_period_samples_9_timestamp_V_load_5_reg_9763;
reg   [19:0] sample_period_samples_10_timestamp_V_load_5_reg_9768;
reg   [19:0] sample_period_samples_11_timestamp_V_load_5_reg_9773;
reg   [11:0] sample_period_samples_0_sample_V_load_6_reg_10018;
wire    ap_CS_fsm_state10;
reg   [11:0] sample_period_samples_1_sample_V_load_6_reg_10023;
reg   [11:0] sample_period_samples_2_sample_V_load_6_reg_10028;
reg   [11:0] sample_period_samples_3_sample_V_load_6_reg_10033;
reg   [11:0] sample_period_samples_4_sample_V_load_6_reg_10038;
reg   [11:0] sample_period_samples_5_sample_V_load_6_reg_10043;
reg   [11:0] sample_period_samples_6_sample_V_load_6_reg_10048;
reg   [11:0] sample_period_samples_7_sample_V_load_6_reg_10053;
reg   [11:0] sample_period_samples_8_sample_V_load_6_reg_10058;
reg   [11:0] sample_period_samples_9_sample_V_load_6_reg_10063;
reg   [11:0] sample_period_samples_10_sample_V_load_6_reg_10068;
reg   [11:0] sample_period_samples_11_sample_V_load_6_reg_10073;
reg   [19:0] sample_period_samples_0_timestamp_V_load_6_reg_10078;
reg   [19:0] sample_period_samples_1_timestamp_V_load_6_reg_10083;
reg   [19:0] sample_period_samples_2_timestamp_V_load_6_reg_10088;
reg   [19:0] sample_period_samples_3_timestamp_V_load_6_reg_10093;
reg   [19:0] sample_period_samples_4_timestamp_V_load_6_reg_10098;
reg   [19:0] sample_period_samples_5_timestamp_V_load_6_reg_10103;
reg   [19:0] sample_period_samples_6_timestamp_V_load_6_reg_10108;
reg   [19:0] sample_period_samples_7_timestamp_V_load_6_reg_10113;
reg   [19:0] sample_period_samples_8_timestamp_V_load_6_reg_10118;
reg   [19:0] sample_period_samples_9_timestamp_V_load_6_reg_10123;
reg   [19:0] sample_period_samples_10_timestamp_V_load_6_reg_10128;
reg   [19:0] sample_period_samples_11_timestamp_V_load_6_reg_10133;
reg   [11:0] sample_period_samples_0_sample_V_load_7_reg_10138;
reg   [11:0] sample_period_samples_1_sample_V_load_7_reg_10143;
reg   [11:0] sample_period_samples_2_sample_V_load_7_reg_10148;
reg   [11:0] sample_period_samples_3_sample_V_load_7_reg_10153;
reg   [11:0] sample_period_samples_4_sample_V_load_7_reg_10158;
reg   [11:0] sample_period_samples_5_sample_V_load_7_reg_10163;
reg   [11:0] sample_period_samples_6_sample_V_load_7_reg_10168;
reg   [11:0] sample_period_samples_7_sample_V_load_7_reg_10173;
reg   [11:0] sample_period_samples_8_sample_V_load_7_reg_10178;
reg   [11:0] sample_period_samples_9_sample_V_load_7_reg_10183;
reg   [11:0] sample_period_samples_10_sample_V_load_7_reg_10188;
reg   [11:0] sample_period_samples_11_sample_V_load_7_reg_10193;
reg   [19:0] sample_period_samples_0_timestamp_V_load_7_reg_10198;
reg   [19:0] sample_period_samples_1_timestamp_V_load_7_reg_10203;
reg   [19:0] sample_period_samples_2_timestamp_V_load_7_reg_10208;
reg   [19:0] sample_period_samples_3_timestamp_V_load_7_reg_10213;
reg   [19:0] sample_period_samples_4_timestamp_V_load_7_reg_10218;
reg   [19:0] sample_period_samples_5_timestamp_V_load_7_reg_10223;
reg   [19:0] sample_period_samples_6_timestamp_V_load_7_reg_10228;
reg   [19:0] sample_period_samples_7_timestamp_V_load_7_reg_10233;
reg   [19:0] sample_period_samples_8_timestamp_V_load_7_reg_10238;
reg   [19:0] sample_period_samples_9_timestamp_V_load_7_reg_10243;
reg   [19:0] sample_period_samples_10_timestamp_V_load_7_reg_10248;
reg   [19:0] sample_period_samples_11_timestamp_V_load_7_reg_10253;
reg   [31:0] sliding_window_size_load_reg_10258;
wire   [0:0] icmp_ln52_fu_7633_p2;
reg   [0:0] icmp_ln52_reg_10264;
wire   [5:0] grp_fu_7653_p2;
reg   [5:0] new_front_ptr_reg_10273;
wire    ap_CS_fsm_state20;
wire   [5:0] trunc_ln61_fu_7861_p1;
reg   [5:0] trunc_ln61_reg_10278;
wire   [0:0] icmp_ln63_fu_7869_p2;
reg   [0:0] icmp_ln63_reg_10283;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [2:0] samples_0_sample_V_address0;
reg    samples_0_sample_V_ce0;
reg    samples_0_sample_V_we0;
wire   [11:0] samples_0_sample_V_d0;
wire   [11:0] samples_0_sample_V_q0;
reg   [2:0] samples_1_sample_V_address0;
reg    samples_1_sample_V_ce0;
reg    samples_1_sample_V_we0;
wire   [11:0] samples_1_sample_V_d0;
wire   [11:0] samples_1_sample_V_q0;
reg   [2:0] samples_2_sample_V_address0;
reg    samples_2_sample_V_ce0;
reg    samples_2_sample_V_we0;
wire   [11:0] samples_2_sample_V_d0;
wire   [11:0] samples_2_sample_V_q0;
reg   [2:0] samples_3_sample_V_address0;
reg    samples_3_sample_V_ce0;
reg    samples_3_sample_V_we0;
wire   [11:0] samples_3_sample_V_d0;
wire   [11:0] samples_3_sample_V_q0;
reg   [2:0] samples_4_sample_V_address0;
reg    samples_4_sample_V_ce0;
reg    samples_4_sample_V_we0;
wire   [11:0] samples_4_sample_V_d0;
wire   [11:0] samples_4_sample_V_q0;
reg   [2:0] samples_5_sample_V_address0;
reg    samples_5_sample_V_ce0;
reg    samples_5_sample_V_we0;
wire   [11:0] samples_5_sample_V_d0;
wire   [11:0] samples_5_sample_V_q0;
reg   [2:0] samples_6_sample_V_address0;
reg    samples_6_sample_V_ce0;
reg    samples_6_sample_V_we0;
wire   [11:0] samples_6_sample_V_d0;
wire   [11:0] samples_6_sample_V_q0;
reg   [2:0] samples_7_sample_V_address0;
reg    samples_7_sample_V_ce0;
reg    samples_7_sample_V_we0;
wire   [11:0] samples_7_sample_V_d0;
wire   [11:0] samples_7_sample_V_q0;
reg   [2:0] samples_8_sample_V_address0;
reg    samples_8_sample_V_ce0;
reg    samples_8_sample_V_we0;
wire   [11:0] samples_8_sample_V_d0;
wire   [11:0] samples_8_sample_V_q0;
reg   [2:0] samples_9_sample_V_address0;
reg    samples_9_sample_V_ce0;
reg    samples_9_sample_V_we0;
wire   [11:0] samples_9_sample_V_d0;
wire   [11:0] samples_9_sample_V_q0;
reg   [2:0] samples_10_sample_V_address0;
reg    samples_10_sample_V_ce0;
reg    samples_10_sample_V_we0;
wire   [11:0] samples_10_sample_V_d0;
wire   [11:0] samples_10_sample_V_q0;
reg   [2:0] samples_11_sample_V_address0;
reg    samples_11_sample_V_ce0;
reg    samples_11_sample_V_we0;
wire   [11:0] samples_11_sample_V_d0;
wire   [11:0] samples_11_sample_V_q0;
reg   [2:0] samples_0_timestamp_V_address0;
reg    samples_0_timestamp_V_ce0;
reg    samples_0_timestamp_V_we0;
wire   [19:0] samples_0_timestamp_V_d0;
wire   [19:0] samples_0_timestamp_V_q0;
reg   [2:0] samples_1_timestamp_V_address0;
reg    samples_1_timestamp_V_ce0;
reg    samples_1_timestamp_V_we0;
wire   [19:0] samples_1_timestamp_V_d0;
wire   [19:0] samples_1_timestamp_V_q0;
reg   [2:0] samples_2_timestamp_V_address0;
reg    samples_2_timestamp_V_ce0;
reg    samples_2_timestamp_V_we0;
wire   [19:0] samples_2_timestamp_V_d0;
wire   [19:0] samples_2_timestamp_V_q0;
reg   [2:0] samples_3_timestamp_V_address0;
reg    samples_3_timestamp_V_ce0;
reg    samples_3_timestamp_V_we0;
wire   [19:0] samples_3_timestamp_V_d0;
wire   [19:0] samples_3_timestamp_V_q0;
reg   [2:0] samples_4_timestamp_V_address0;
reg    samples_4_timestamp_V_ce0;
reg    samples_4_timestamp_V_we0;
wire   [19:0] samples_4_timestamp_V_d0;
wire   [19:0] samples_4_timestamp_V_q0;
reg   [2:0] samples_5_timestamp_V_address0;
reg    samples_5_timestamp_V_ce0;
reg    samples_5_timestamp_V_we0;
wire   [19:0] samples_5_timestamp_V_d0;
wire   [19:0] samples_5_timestamp_V_q0;
reg   [2:0] samples_6_timestamp_V_address0;
reg    samples_6_timestamp_V_ce0;
reg    samples_6_timestamp_V_we0;
wire   [19:0] samples_6_timestamp_V_d0;
wire   [19:0] samples_6_timestamp_V_q0;
reg   [2:0] samples_7_timestamp_V_address0;
reg    samples_7_timestamp_V_ce0;
reg    samples_7_timestamp_V_we0;
wire   [19:0] samples_7_timestamp_V_d0;
wire   [19:0] samples_7_timestamp_V_q0;
reg   [2:0] samples_8_timestamp_V_address0;
reg    samples_8_timestamp_V_ce0;
reg    samples_8_timestamp_V_we0;
wire   [19:0] samples_8_timestamp_V_d0;
wire   [19:0] samples_8_timestamp_V_q0;
reg   [2:0] samples_9_timestamp_V_address0;
reg    samples_9_timestamp_V_ce0;
reg    samples_9_timestamp_V_we0;
wire   [19:0] samples_9_timestamp_V_d0;
wire   [19:0] samples_9_timestamp_V_q0;
reg   [2:0] samples_10_timestamp_V_address0;
reg    samples_10_timestamp_V_ce0;
reg    samples_10_timestamp_V_we0;
wire   [19:0] samples_10_timestamp_V_d0;
wire   [19:0] samples_10_timestamp_V_q0;
reg   [2:0] samples_11_timestamp_V_address0;
reg    samples_11_timestamp_V_ce0;
reg    samples_11_timestamp_V_we0;
wire   [19:0] samples_11_timestamp_V_d0;
wire   [19:0] samples_11_timestamp_V_q0;
reg   [2:0] sample_period_samples_0_sample_V_address0;
reg    sample_period_samples_0_sample_V_ce0;
reg    sample_period_samples_0_sample_V_we0;
reg   [2:0] sample_period_samples_0_sample_V_address1;
reg    sample_period_samples_0_sample_V_ce1;
reg   [2:0] sample_period_samples_1_sample_V_address0;
reg    sample_period_samples_1_sample_V_ce0;
reg    sample_period_samples_1_sample_V_we0;
reg   [2:0] sample_period_samples_1_sample_V_address1;
reg    sample_period_samples_1_sample_V_ce1;
reg   [2:0] sample_period_samples_2_sample_V_address0;
reg    sample_period_samples_2_sample_V_ce0;
reg    sample_period_samples_2_sample_V_we0;
reg   [2:0] sample_period_samples_2_sample_V_address1;
reg    sample_period_samples_2_sample_V_ce1;
reg   [2:0] sample_period_samples_3_sample_V_address0;
reg    sample_period_samples_3_sample_V_ce0;
reg    sample_period_samples_3_sample_V_we0;
reg   [2:0] sample_period_samples_3_sample_V_address1;
reg    sample_period_samples_3_sample_V_ce1;
reg   [2:0] sample_period_samples_4_sample_V_address0;
reg    sample_period_samples_4_sample_V_ce0;
reg    sample_period_samples_4_sample_V_we0;
reg   [2:0] sample_period_samples_4_sample_V_address1;
reg    sample_period_samples_4_sample_V_ce1;
reg   [2:0] sample_period_samples_5_sample_V_address0;
reg    sample_period_samples_5_sample_V_ce0;
reg    sample_period_samples_5_sample_V_we0;
reg   [2:0] sample_period_samples_5_sample_V_address1;
reg    sample_period_samples_5_sample_V_ce1;
reg   [2:0] sample_period_samples_6_sample_V_address0;
reg    sample_period_samples_6_sample_V_ce0;
reg    sample_period_samples_6_sample_V_we0;
reg   [2:0] sample_period_samples_6_sample_V_address1;
reg    sample_period_samples_6_sample_V_ce1;
reg   [2:0] sample_period_samples_7_sample_V_address0;
reg    sample_period_samples_7_sample_V_ce0;
reg    sample_period_samples_7_sample_V_we0;
reg   [2:0] sample_period_samples_7_sample_V_address1;
reg    sample_period_samples_7_sample_V_ce1;
reg   [2:0] sample_period_samples_8_sample_V_address0;
reg    sample_period_samples_8_sample_V_ce0;
reg    sample_period_samples_8_sample_V_we0;
reg   [2:0] sample_period_samples_8_sample_V_address1;
reg    sample_period_samples_8_sample_V_ce1;
reg   [2:0] sample_period_samples_9_sample_V_address0;
reg    sample_period_samples_9_sample_V_ce0;
reg    sample_period_samples_9_sample_V_we0;
reg   [2:0] sample_period_samples_9_sample_V_address1;
reg    sample_period_samples_9_sample_V_ce1;
reg   [2:0] sample_period_samples_10_sample_V_address0;
reg    sample_period_samples_10_sample_V_ce0;
reg    sample_period_samples_10_sample_V_we0;
reg   [2:0] sample_period_samples_10_sample_V_address1;
reg    sample_period_samples_10_sample_V_ce1;
reg   [2:0] sample_period_samples_11_sample_V_address0;
reg    sample_period_samples_11_sample_V_ce0;
reg    sample_period_samples_11_sample_V_we0;
reg   [2:0] sample_period_samples_11_sample_V_address1;
reg    sample_period_samples_11_sample_V_ce1;
reg   [2:0] sample_period_samples_0_timestamp_V_address0;
reg    sample_period_samples_0_timestamp_V_ce0;
reg    sample_period_samples_0_timestamp_V_we0;
reg   [2:0] sample_period_samples_0_timestamp_V_address1;
reg    sample_period_samples_0_timestamp_V_ce1;
reg   [2:0] sample_period_samples_1_timestamp_V_address0;
reg    sample_period_samples_1_timestamp_V_ce0;
reg    sample_period_samples_1_timestamp_V_we0;
reg   [2:0] sample_period_samples_1_timestamp_V_address1;
reg    sample_period_samples_1_timestamp_V_ce1;
reg   [2:0] sample_period_samples_2_timestamp_V_address0;
reg    sample_period_samples_2_timestamp_V_ce0;
reg    sample_period_samples_2_timestamp_V_we0;
reg   [2:0] sample_period_samples_2_timestamp_V_address1;
reg    sample_period_samples_2_timestamp_V_ce1;
reg   [2:0] sample_period_samples_3_timestamp_V_address0;
reg    sample_period_samples_3_timestamp_V_ce0;
reg    sample_period_samples_3_timestamp_V_we0;
reg   [2:0] sample_period_samples_3_timestamp_V_address1;
reg    sample_period_samples_3_timestamp_V_ce1;
reg   [2:0] sample_period_samples_4_timestamp_V_address0;
reg    sample_period_samples_4_timestamp_V_ce0;
reg    sample_period_samples_4_timestamp_V_we0;
reg   [2:0] sample_period_samples_4_timestamp_V_address1;
reg    sample_period_samples_4_timestamp_V_ce1;
reg   [2:0] sample_period_samples_5_timestamp_V_address0;
reg    sample_period_samples_5_timestamp_V_ce0;
reg    sample_period_samples_5_timestamp_V_we0;
reg   [2:0] sample_period_samples_5_timestamp_V_address1;
reg    sample_period_samples_5_timestamp_V_ce1;
reg   [2:0] sample_period_samples_6_timestamp_V_address0;
reg    sample_period_samples_6_timestamp_V_ce0;
reg    sample_period_samples_6_timestamp_V_we0;
reg   [2:0] sample_period_samples_6_timestamp_V_address1;
reg    sample_period_samples_6_timestamp_V_ce1;
reg   [2:0] sample_period_samples_7_timestamp_V_address0;
reg    sample_period_samples_7_timestamp_V_ce0;
reg    sample_period_samples_7_timestamp_V_we0;
reg   [2:0] sample_period_samples_7_timestamp_V_address1;
reg    sample_period_samples_7_timestamp_V_ce1;
reg   [2:0] sample_period_samples_8_timestamp_V_address0;
reg    sample_period_samples_8_timestamp_V_ce0;
reg    sample_period_samples_8_timestamp_V_we0;
reg   [2:0] sample_period_samples_8_timestamp_V_address1;
reg    sample_period_samples_8_timestamp_V_ce1;
reg   [2:0] sample_period_samples_9_timestamp_V_address0;
reg    sample_period_samples_9_timestamp_V_ce0;
reg    sample_period_samples_9_timestamp_V_we0;
reg   [2:0] sample_period_samples_9_timestamp_V_address1;
reg    sample_period_samples_9_timestamp_V_ce1;
reg   [2:0] sample_period_samples_10_timestamp_V_address0;
reg    sample_period_samples_10_timestamp_V_ce0;
reg    sample_period_samples_10_timestamp_V_we0;
reg   [2:0] sample_period_samples_10_timestamp_V_address1;
reg    sample_period_samples_10_timestamp_V_ce1;
reg   [2:0] sample_period_samples_11_timestamp_V_address0;
reg    sample_period_samples_11_timestamp_V_ce0;
reg    sample_period_samples_11_timestamp_V_we0;
reg   [2:0] sample_period_samples_11_timestamp_V_address1;
reg    sample_period_samples_11_timestamp_V_ce1;
reg   [3:0] ap_phi_mux_i_phi_fu_7318_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] i_1_reg_7326;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln87_fu_7353_p1;
wire   [63:0] i_cast_fu_7369_p1;
wire   [63:0] zext_ln54_fu_7659_p1;
wire   [63:0] zext_ln75_fu_7912_p1;
wire    ap_CS_fsm_state29;
wire   [31:0] add_ln71_fu_7898_p2;
wire   [0:0] icmp_ln69_fu_7893_p2;
wire   [5:0] grp_fu_7881_p2;
wire   [2:0] trunc_ln87_fu_7349_p1;
wire  signed [5:0] sext_ln52_fu_7643_p0;
wire  signed [6:0] sext_ln52_fu_7643_p1;
wire   [6:0] grp_fu_7653_p0;
wire   [5:0] grp_fu_7653_p1;
wire  signed [5:0] zext_ln54_fu_7659_p0;
wire   [5:0] grp_fu_7881_p0;
wire   [4:0] trunc_ln75_fu_7909_p1;
reg    grp_fu_7653_ap_start;
wire    grp_fu_7653_ap_done;
reg    grp_fu_7881_ap_start;
wire    grp_fu_7881_ap_done;
reg   [27:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 sliding_window_size_s = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_0_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_0_sample_V_address0),
    .ce0(samples_0_sample_V_ce0),
    .we0(samples_0_sample_V_we0),
    .d0(samples_0_sample_V_d0),
    .q0(samples_0_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_1_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_1_sample_V_address0),
    .ce0(samples_1_sample_V_ce0),
    .we0(samples_1_sample_V_we0),
    .d0(samples_1_sample_V_d0),
    .q0(samples_1_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_2_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_2_sample_V_address0),
    .ce0(samples_2_sample_V_ce0),
    .we0(samples_2_sample_V_we0),
    .d0(samples_2_sample_V_d0),
    .q0(samples_2_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_3_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_3_sample_V_address0),
    .ce0(samples_3_sample_V_ce0),
    .we0(samples_3_sample_V_we0),
    .d0(samples_3_sample_V_d0),
    .q0(samples_3_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_4_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_4_sample_V_address0),
    .ce0(samples_4_sample_V_ce0),
    .we0(samples_4_sample_V_we0),
    .d0(samples_4_sample_V_d0),
    .q0(samples_4_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_5_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_5_sample_V_address0),
    .ce0(samples_5_sample_V_ce0),
    .we0(samples_5_sample_V_we0),
    .d0(samples_5_sample_V_d0),
    .q0(samples_5_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_6_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_6_sample_V_address0),
    .ce0(samples_6_sample_V_ce0),
    .we0(samples_6_sample_V_we0),
    .d0(samples_6_sample_V_d0),
    .q0(samples_6_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_7_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_7_sample_V_address0),
    .ce0(samples_7_sample_V_ce0),
    .we0(samples_7_sample_V_we0),
    .d0(samples_7_sample_V_d0),
    .q0(samples_7_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_8_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_8_sample_V_address0),
    .ce0(samples_8_sample_V_ce0),
    .we0(samples_8_sample_V_we0),
    .d0(samples_8_sample_V_d0),
    .q0(samples_8_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_9_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_9_sample_V_address0),
    .ce0(samples_9_sample_V_ce0),
    .we0(samples_9_sample_V_we0),
    .d0(samples_9_sample_V_d0),
    .q0(samples_9_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_10_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_10_sample_V_address0),
    .ce0(samples_10_sample_V_ce0),
    .we0(samples_10_sample_V_we0),
    .d0(samples_10_sample_V_d0),
    .q0(samples_10_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_11_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_11_sample_V_address0),
    .ce0(samples_11_sample_V_ce0),
    .we0(samples_11_sample_V_we0),
    .d0(samples_11_sample_V_d0),
    .q0(samples_11_sample_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_0_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_0_timestamp_V_address0),
    .ce0(samples_0_timestamp_V_ce0),
    .we0(samples_0_timestamp_V_we0),
    .d0(samples_0_timestamp_V_d0),
    .q0(samples_0_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_1_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_1_timestamp_V_address0),
    .ce0(samples_1_timestamp_V_ce0),
    .we0(samples_1_timestamp_V_we0),
    .d0(samples_1_timestamp_V_d0),
    .q0(samples_1_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_2_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_2_timestamp_V_address0),
    .ce0(samples_2_timestamp_V_ce0),
    .we0(samples_2_timestamp_V_we0),
    .d0(samples_2_timestamp_V_d0),
    .q0(samples_2_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_3_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_3_timestamp_V_address0),
    .ce0(samples_3_timestamp_V_ce0),
    .we0(samples_3_timestamp_V_we0),
    .d0(samples_3_timestamp_V_d0),
    .q0(samples_3_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_4_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_4_timestamp_V_address0),
    .ce0(samples_4_timestamp_V_ce0),
    .we0(samples_4_timestamp_V_we0),
    .d0(samples_4_timestamp_V_d0),
    .q0(samples_4_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_5_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_5_timestamp_V_address0),
    .ce0(samples_5_timestamp_V_ce0),
    .we0(samples_5_timestamp_V_we0),
    .d0(samples_5_timestamp_V_d0),
    .q0(samples_5_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_6_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_6_timestamp_V_address0),
    .ce0(samples_6_timestamp_V_ce0),
    .we0(samples_6_timestamp_V_we0),
    .d0(samples_6_timestamp_V_d0),
    .q0(samples_6_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_7_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_7_timestamp_V_address0),
    .ce0(samples_7_timestamp_V_ce0),
    .we0(samples_7_timestamp_V_we0),
    .d0(samples_7_timestamp_V_d0),
    .q0(samples_7_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_8_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_8_timestamp_V_address0),
    .ce0(samples_8_timestamp_V_ce0),
    .we0(samples_8_timestamp_V_we0),
    .d0(samples_8_timestamp_V_d0),
    .q0(samples_8_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_9_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_9_timestamp_V_address0),
    .ce0(samples_9_timestamp_V_ce0),
    .we0(samples_9_timestamp_V_we0),
    .d0(samples_9_timestamp_V_d0),
    .q0(samples_9_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_10_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_10_timestamp_V_address0),
    .ce0(samples_10_timestamp_V_ce0),
    .we0(samples_10_timestamp_V_we0),
    .d0(samples_10_timestamp_V_d0),
    .q0(samples_10_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
samples_11_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_11_timestamp_V_address0),
    .ce0(samples_11_timestamp_V_ce0),
    .we0(samples_11_timestamp_V_we0),
    .d0(samples_11_timestamp_V_d0),
    .q0(samples_11_timestamp_V_q0)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_0_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_0_sample_V_address0),
    .ce0(sample_period_samples_0_sample_V_ce0),
    .we0(sample_period_samples_0_sample_V_we0),
    .d0(samples_0_sample_V_q0),
    .q0(sample_period_samples_0_sample_V_q0),
    .address1(sample_period_samples_0_sample_V_address1),
    .ce1(sample_period_samples_0_sample_V_ce1),
    .q1(sample_period_samples_0_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_1_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_1_sample_V_address0),
    .ce0(sample_period_samples_1_sample_V_ce0),
    .we0(sample_period_samples_1_sample_V_we0),
    .d0(samples_1_sample_V_q0),
    .q0(sample_period_samples_1_sample_V_q0),
    .address1(sample_period_samples_1_sample_V_address1),
    .ce1(sample_period_samples_1_sample_V_ce1),
    .q1(sample_period_samples_1_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_2_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_2_sample_V_address0),
    .ce0(sample_period_samples_2_sample_V_ce0),
    .we0(sample_period_samples_2_sample_V_we0),
    .d0(samples_2_sample_V_q0),
    .q0(sample_period_samples_2_sample_V_q0),
    .address1(sample_period_samples_2_sample_V_address1),
    .ce1(sample_period_samples_2_sample_V_ce1),
    .q1(sample_period_samples_2_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_3_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_3_sample_V_address0),
    .ce0(sample_period_samples_3_sample_V_ce0),
    .we0(sample_period_samples_3_sample_V_we0),
    .d0(samples_3_sample_V_q0),
    .q0(sample_period_samples_3_sample_V_q0),
    .address1(sample_period_samples_3_sample_V_address1),
    .ce1(sample_period_samples_3_sample_V_ce1),
    .q1(sample_period_samples_3_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_4_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_4_sample_V_address0),
    .ce0(sample_period_samples_4_sample_V_ce0),
    .we0(sample_period_samples_4_sample_V_we0),
    .d0(samples_4_sample_V_q0),
    .q0(sample_period_samples_4_sample_V_q0),
    .address1(sample_period_samples_4_sample_V_address1),
    .ce1(sample_period_samples_4_sample_V_ce1),
    .q1(sample_period_samples_4_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_5_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_5_sample_V_address0),
    .ce0(sample_period_samples_5_sample_V_ce0),
    .we0(sample_period_samples_5_sample_V_we0),
    .d0(samples_5_sample_V_q0),
    .q0(sample_period_samples_5_sample_V_q0),
    .address1(sample_period_samples_5_sample_V_address1),
    .ce1(sample_period_samples_5_sample_V_ce1),
    .q1(sample_period_samples_5_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_6_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_6_sample_V_address0),
    .ce0(sample_period_samples_6_sample_V_ce0),
    .we0(sample_period_samples_6_sample_V_we0),
    .d0(samples_6_sample_V_q0),
    .q0(sample_period_samples_6_sample_V_q0),
    .address1(sample_period_samples_6_sample_V_address1),
    .ce1(sample_period_samples_6_sample_V_ce1),
    .q1(sample_period_samples_6_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_7_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_7_sample_V_address0),
    .ce0(sample_period_samples_7_sample_V_ce0),
    .we0(sample_period_samples_7_sample_V_we0),
    .d0(samples_7_sample_V_q0),
    .q0(sample_period_samples_7_sample_V_q0),
    .address1(sample_period_samples_7_sample_V_address1),
    .ce1(sample_period_samples_7_sample_V_ce1),
    .q1(sample_period_samples_7_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_8_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_8_sample_V_address0),
    .ce0(sample_period_samples_8_sample_V_ce0),
    .we0(sample_period_samples_8_sample_V_we0),
    .d0(samples_8_sample_V_q0),
    .q0(sample_period_samples_8_sample_V_q0),
    .address1(sample_period_samples_8_sample_V_address1),
    .ce1(sample_period_samples_8_sample_V_ce1),
    .q1(sample_period_samples_8_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_9_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_9_sample_V_address0),
    .ce0(sample_period_samples_9_sample_V_ce0),
    .we0(sample_period_samples_9_sample_V_we0),
    .d0(samples_9_sample_V_q0),
    .q0(sample_period_samples_9_sample_V_q0),
    .address1(sample_period_samples_9_sample_V_address1),
    .ce1(sample_period_samples_9_sample_V_ce1),
    .q1(sample_period_samples_9_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_10_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_10_sample_V_address0),
    .ce0(sample_period_samples_10_sample_V_ce0),
    .we0(sample_period_samples_10_sample_V_we0),
    .d0(samples_10_sample_V_q0),
    .q0(sample_period_samples_10_sample_V_q0),
    .address1(sample_period_samples_10_sample_V_address1),
    .ce1(sample_period_samples_10_sample_V_ce1),
    .q1(sample_period_samples_10_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_11_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_11_sample_V_address0),
    .ce0(sample_period_samples_11_sample_V_ce0),
    .we0(sample_period_samples_11_sample_V_we0),
    .d0(samples_11_sample_V_q0),
    .q0(sample_period_samples_11_sample_V_q0),
    .address1(sample_period_samples_11_sample_V_address1),
    .ce1(sample_period_samples_11_sample_V_ce1),
    .q1(sample_period_samples_11_sample_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_0_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_0_timestamp_V_address0),
    .ce0(sample_period_samples_0_timestamp_V_ce0),
    .we0(sample_period_samples_0_timestamp_V_we0),
    .d0(samples_0_timestamp_V_q0),
    .q0(sample_period_samples_0_timestamp_V_q0),
    .address1(sample_period_samples_0_timestamp_V_address1),
    .ce1(sample_period_samples_0_timestamp_V_ce1),
    .q1(sample_period_samples_0_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_1_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_1_timestamp_V_address0),
    .ce0(sample_period_samples_1_timestamp_V_ce0),
    .we0(sample_period_samples_1_timestamp_V_we0),
    .d0(samples_1_timestamp_V_q0),
    .q0(sample_period_samples_1_timestamp_V_q0),
    .address1(sample_period_samples_1_timestamp_V_address1),
    .ce1(sample_period_samples_1_timestamp_V_ce1),
    .q1(sample_period_samples_1_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_2_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_2_timestamp_V_address0),
    .ce0(sample_period_samples_2_timestamp_V_ce0),
    .we0(sample_period_samples_2_timestamp_V_we0),
    .d0(samples_2_timestamp_V_q0),
    .q0(sample_period_samples_2_timestamp_V_q0),
    .address1(sample_period_samples_2_timestamp_V_address1),
    .ce1(sample_period_samples_2_timestamp_V_ce1),
    .q1(sample_period_samples_2_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_3_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_3_timestamp_V_address0),
    .ce0(sample_period_samples_3_timestamp_V_ce0),
    .we0(sample_period_samples_3_timestamp_V_we0),
    .d0(samples_3_timestamp_V_q0),
    .q0(sample_period_samples_3_timestamp_V_q0),
    .address1(sample_period_samples_3_timestamp_V_address1),
    .ce1(sample_period_samples_3_timestamp_V_ce1),
    .q1(sample_period_samples_3_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_4_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_4_timestamp_V_address0),
    .ce0(sample_period_samples_4_timestamp_V_ce0),
    .we0(sample_period_samples_4_timestamp_V_we0),
    .d0(samples_4_timestamp_V_q0),
    .q0(sample_period_samples_4_timestamp_V_q0),
    .address1(sample_period_samples_4_timestamp_V_address1),
    .ce1(sample_period_samples_4_timestamp_V_ce1),
    .q1(sample_period_samples_4_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_5_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_5_timestamp_V_address0),
    .ce0(sample_period_samples_5_timestamp_V_ce0),
    .we0(sample_period_samples_5_timestamp_V_we0),
    .d0(samples_5_timestamp_V_q0),
    .q0(sample_period_samples_5_timestamp_V_q0),
    .address1(sample_period_samples_5_timestamp_V_address1),
    .ce1(sample_period_samples_5_timestamp_V_ce1),
    .q1(sample_period_samples_5_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_6_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_6_timestamp_V_address0),
    .ce0(sample_period_samples_6_timestamp_V_ce0),
    .we0(sample_period_samples_6_timestamp_V_we0),
    .d0(samples_6_timestamp_V_q0),
    .q0(sample_period_samples_6_timestamp_V_q0),
    .address1(sample_period_samples_6_timestamp_V_address1),
    .ce1(sample_period_samples_6_timestamp_V_ce1),
    .q1(sample_period_samples_6_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_7_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_7_timestamp_V_address0),
    .ce0(sample_period_samples_7_timestamp_V_ce0),
    .we0(sample_period_samples_7_timestamp_V_we0),
    .d0(samples_7_timestamp_V_q0),
    .q0(sample_period_samples_7_timestamp_V_q0),
    .address1(sample_period_samples_7_timestamp_V_address1),
    .ce1(sample_period_samples_7_timestamp_V_ce1),
    .q1(sample_period_samples_7_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_8_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_8_timestamp_V_address0),
    .ce0(sample_period_samples_8_timestamp_V_ce0),
    .we0(sample_period_samples_8_timestamp_V_we0),
    .d0(samples_8_timestamp_V_q0),
    .q0(sample_period_samples_8_timestamp_V_q0),
    .address1(sample_period_samples_8_timestamp_V_address1),
    .ce1(sample_period_samples_8_timestamp_V_ce1),
    .q1(sample_period_samples_8_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_9_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_9_timestamp_V_address0),
    .ce0(sample_period_samples_9_timestamp_V_ce0),
    .we0(sample_period_samples_9_timestamp_V_we0),
    .d0(samples_9_timestamp_V_q0),
    .q0(sample_period_samples_9_timestamp_V_q0),
    .address1(sample_period_samples_9_timestamp_V_address1),
    .ce1(sample_period_samples_9_timestamp_V_ce1),
    .q1(sample_period_samples_9_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_10_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_10_timestamp_V_address0),
    .ce0(sample_period_samples_10_timestamp_V_ce0),
    .we0(sample_period_samples_10_timestamp_V_we0),
    .d0(samples_10_timestamp_V_q0),
    .q0(sample_period_samples_10_timestamp_V_q0),
    .address1(sample_period_samples_10_timestamp_V_address1),
    .ce1(sample_period_samples_10_timestamp_V_ce1),
    .q1(sample_period_samples_10_timestamp_V_q1)
);

LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sample_period_samples_11_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_samples_11_timestamp_V_address0),
    .ce0(sample_period_samples_11_timestamp_V_ce0),
    .we0(sample_period_samples_11_timestamp_V_we0),
    .d0(samples_11_timestamp_V_q0),
    .q0(sample_period_samples_11_timestamp_V_q0),
    .address1(sample_period_samples_11_timestamp_V_address1),
    .ce1(sample_period_samples_11_timestamp_V_ce1),
    .q1(sample_period_samples_11_timestamp_V_q1)
);

LLSSineReconstruction_srem_7ns_6ns_6_11_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
srem_7ns_6ns_6_11_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_7653_ap_start),
    .done(grp_fu_7653_ap_done),
    .din0(grp_fu_7653_p0),
    .din1(grp_fu_7653_p1),
    .ce(1'b1),
    .dout(grp_fu_7653_p2)
);

LLSSineReconstruction_srem_6ns_6ns_6_10_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
srem_6ns_6ns_6_10_seq_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_7881_ap_start),
    .done(grp_fu_7881_ap_done),
    .din0(grp_fu_7881_p0),
    .din1(6'd20),
    .ce(1'b1),
    .dout(grp_fu_7881_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_7326 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_7326 <= add_ln19_reg_8182;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_7314 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_7314 <= add_ln84_reg_8113;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_size_s <= 32'd1;
    end else if (((icmp_ln69_fu_7893_p2 == 1'd1) & (icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        sliding_window_size_s <= add_ln71_fu_7898_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln19_reg_8182 <= add_ln19_fu_7589_p2;
        zext_ln19_reg_8187[3 : 0] <= zext_ln19_fu_7595_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln84_reg_8113 <= add_ln84_fu_7337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln52_reg_10264 <= icmp_ln52_fu_7633_p2;
        sample_period_samples_0_sample_V_load_6_reg_10018 <= sample_period_samples_0_sample_V_q0;
        sample_period_samples_0_sample_V_load_7_reg_10138 <= sample_period_samples_0_sample_V_q1;
        sample_period_samples_0_timestamp_V_load_6_reg_10078 <= sample_period_samples_0_timestamp_V_q0;
        sample_period_samples_0_timestamp_V_load_7_reg_10198 <= sample_period_samples_0_timestamp_V_q1;
        sample_period_samples_10_sample_V_load_6_reg_10068 <= sample_period_samples_10_sample_V_q0;
        sample_period_samples_10_sample_V_load_7_reg_10188 <= sample_period_samples_10_sample_V_q1;
        sample_period_samples_10_timestamp_V_load_6_reg_10128 <= sample_period_samples_10_timestamp_V_q0;
        sample_period_samples_10_timestamp_V_load_7_reg_10248 <= sample_period_samples_10_timestamp_V_q1;
        sample_period_samples_11_sample_V_load_6_reg_10073 <= sample_period_samples_11_sample_V_q0;
        sample_period_samples_11_sample_V_load_7_reg_10193 <= sample_period_samples_11_sample_V_q1;
        sample_period_samples_11_timestamp_V_load_6_reg_10133 <= sample_period_samples_11_timestamp_V_q0;
        sample_period_samples_11_timestamp_V_load_7_reg_10253 <= sample_period_samples_11_timestamp_V_q1;
        sample_period_samples_1_sample_V_load_6_reg_10023 <= sample_period_samples_1_sample_V_q0;
        sample_period_samples_1_sample_V_load_7_reg_10143 <= sample_period_samples_1_sample_V_q1;
        sample_period_samples_1_timestamp_V_load_6_reg_10083 <= sample_period_samples_1_timestamp_V_q0;
        sample_period_samples_1_timestamp_V_load_7_reg_10203 <= sample_period_samples_1_timestamp_V_q1;
        sample_period_samples_2_sample_V_load_6_reg_10028 <= sample_period_samples_2_sample_V_q0;
        sample_period_samples_2_sample_V_load_7_reg_10148 <= sample_period_samples_2_sample_V_q1;
        sample_period_samples_2_timestamp_V_load_6_reg_10088 <= sample_period_samples_2_timestamp_V_q0;
        sample_period_samples_2_timestamp_V_load_7_reg_10208 <= sample_period_samples_2_timestamp_V_q1;
        sample_period_samples_3_sample_V_load_6_reg_10033 <= sample_period_samples_3_sample_V_q0;
        sample_period_samples_3_sample_V_load_7_reg_10153 <= sample_period_samples_3_sample_V_q1;
        sample_period_samples_3_timestamp_V_load_6_reg_10093 <= sample_period_samples_3_timestamp_V_q0;
        sample_period_samples_3_timestamp_V_load_7_reg_10213 <= sample_period_samples_3_timestamp_V_q1;
        sample_period_samples_4_sample_V_load_6_reg_10038 <= sample_period_samples_4_sample_V_q0;
        sample_period_samples_4_sample_V_load_7_reg_10158 <= sample_period_samples_4_sample_V_q1;
        sample_period_samples_4_timestamp_V_load_6_reg_10098 <= sample_period_samples_4_timestamp_V_q0;
        sample_period_samples_4_timestamp_V_load_7_reg_10218 <= sample_period_samples_4_timestamp_V_q1;
        sample_period_samples_5_sample_V_load_6_reg_10043 <= sample_period_samples_5_sample_V_q0;
        sample_period_samples_5_sample_V_load_7_reg_10163 <= sample_period_samples_5_sample_V_q1;
        sample_period_samples_5_timestamp_V_load_6_reg_10103 <= sample_period_samples_5_timestamp_V_q0;
        sample_period_samples_5_timestamp_V_load_7_reg_10223 <= sample_period_samples_5_timestamp_V_q1;
        sample_period_samples_6_sample_V_load_6_reg_10048 <= sample_period_samples_6_sample_V_q0;
        sample_period_samples_6_sample_V_load_7_reg_10168 <= sample_period_samples_6_sample_V_q1;
        sample_period_samples_6_timestamp_V_load_6_reg_10108 <= sample_period_samples_6_timestamp_V_q0;
        sample_period_samples_6_timestamp_V_load_7_reg_10228 <= sample_period_samples_6_timestamp_V_q1;
        sample_period_samples_7_sample_V_load_6_reg_10053 <= sample_period_samples_7_sample_V_q0;
        sample_period_samples_7_sample_V_load_7_reg_10173 <= sample_period_samples_7_sample_V_q1;
        sample_period_samples_7_timestamp_V_load_6_reg_10113 <= sample_period_samples_7_timestamp_V_q0;
        sample_period_samples_7_timestamp_V_load_7_reg_10233 <= sample_period_samples_7_timestamp_V_q1;
        sample_period_samples_8_sample_V_load_6_reg_10058 <= sample_period_samples_8_sample_V_q0;
        sample_period_samples_8_sample_V_load_7_reg_10178 <= sample_period_samples_8_sample_V_q1;
        sample_period_samples_8_timestamp_V_load_6_reg_10118 <= sample_period_samples_8_timestamp_V_q0;
        sample_period_samples_8_timestamp_V_load_7_reg_10238 <= sample_period_samples_8_timestamp_V_q1;
        sample_period_samples_9_sample_V_load_6_reg_10063 <= sample_period_samples_9_sample_V_q0;
        sample_period_samples_9_sample_V_load_7_reg_10183 <= sample_period_samples_9_sample_V_q1;
        sample_period_samples_9_timestamp_V_load_6_reg_10123 <= sample_period_samples_9_timestamp_V_q0;
        sample_period_samples_9_timestamp_V_load_7_reg_10243 <= sample_period_samples_9_timestamp_V_q1;
        sliding_window_size_load_reg_10258 <= sliding_window_size_s;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        icmp_ln63_reg_10283 <= icmp_ln63_fu_7869_p2;
        new_front_ptr_reg_10273 <= grp_fu_7653_p2;
        trunc_ln61_reg_10278 <= trunc_ln61_fu_7861_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln84_reg_8118 <= icmp_ln84_fu_7343_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_0_sample_V_load_1_reg_8698 <= sample_period_samples_0_sample_V_q0;
        sample_period_samples_0_sample_V_load_reg_8578 <= sample_period_samples_0_sample_V_q1;
        sample_period_samples_0_timestamp_V_load_1_reg_8758 <= sample_period_samples_0_timestamp_V_q0;
        sample_period_samples_0_timestamp_V_load_reg_8638 <= sample_period_samples_0_timestamp_V_q1;
        sample_period_samples_10_sample_V_load_1_reg_8748 <= sample_period_samples_10_sample_V_q0;
        sample_period_samples_10_sample_V_load_reg_8628 <= sample_period_samples_10_sample_V_q1;
        sample_period_samples_10_timestamp_V_load_1_reg_8808 <= sample_period_samples_10_timestamp_V_q0;
        sample_period_samples_10_timestamp_V_load_reg_8688 <= sample_period_samples_10_timestamp_V_q1;
        sample_period_samples_11_sample_V_load_1_reg_8753 <= sample_period_samples_11_sample_V_q0;
        sample_period_samples_11_sample_V_load_reg_8633 <= sample_period_samples_11_sample_V_q1;
        sample_period_samples_11_timestamp_V_load_1_reg_8813 <= sample_period_samples_11_timestamp_V_q0;
        sample_period_samples_11_timestamp_V_load_reg_8693 <= sample_period_samples_11_timestamp_V_q1;
        sample_period_samples_1_sample_V_load_1_reg_8703 <= sample_period_samples_1_sample_V_q0;
        sample_period_samples_1_sample_V_load_reg_8583 <= sample_period_samples_1_sample_V_q1;
        sample_period_samples_1_timestamp_V_load_1_reg_8763 <= sample_period_samples_1_timestamp_V_q0;
        sample_period_samples_1_timestamp_V_load_reg_8643 <= sample_period_samples_1_timestamp_V_q1;
        sample_period_samples_2_sample_V_load_1_reg_8708 <= sample_period_samples_2_sample_V_q0;
        sample_period_samples_2_sample_V_load_reg_8588 <= sample_period_samples_2_sample_V_q1;
        sample_period_samples_2_timestamp_V_load_1_reg_8768 <= sample_period_samples_2_timestamp_V_q0;
        sample_period_samples_2_timestamp_V_load_reg_8648 <= sample_period_samples_2_timestamp_V_q1;
        sample_period_samples_3_sample_V_load_1_reg_8713 <= sample_period_samples_3_sample_V_q0;
        sample_period_samples_3_sample_V_load_reg_8593 <= sample_period_samples_3_sample_V_q1;
        sample_period_samples_3_timestamp_V_load_1_reg_8773 <= sample_period_samples_3_timestamp_V_q0;
        sample_period_samples_3_timestamp_V_load_reg_8653 <= sample_period_samples_3_timestamp_V_q1;
        sample_period_samples_4_sample_V_load_1_reg_8718 <= sample_period_samples_4_sample_V_q0;
        sample_period_samples_4_sample_V_load_reg_8598 <= sample_period_samples_4_sample_V_q1;
        sample_period_samples_4_timestamp_V_load_1_reg_8778 <= sample_period_samples_4_timestamp_V_q0;
        sample_period_samples_4_timestamp_V_load_reg_8658 <= sample_period_samples_4_timestamp_V_q1;
        sample_period_samples_5_sample_V_load_1_reg_8723 <= sample_period_samples_5_sample_V_q0;
        sample_period_samples_5_sample_V_load_reg_8603 <= sample_period_samples_5_sample_V_q1;
        sample_period_samples_5_timestamp_V_load_1_reg_8783 <= sample_period_samples_5_timestamp_V_q0;
        sample_period_samples_5_timestamp_V_load_reg_8663 <= sample_period_samples_5_timestamp_V_q1;
        sample_period_samples_6_sample_V_load_1_reg_8728 <= sample_period_samples_6_sample_V_q0;
        sample_period_samples_6_sample_V_load_reg_8608 <= sample_period_samples_6_sample_V_q1;
        sample_period_samples_6_timestamp_V_load_1_reg_8788 <= sample_period_samples_6_timestamp_V_q0;
        sample_period_samples_6_timestamp_V_load_reg_8668 <= sample_period_samples_6_timestamp_V_q1;
        sample_period_samples_7_sample_V_load_1_reg_8733 <= sample_period_samples_7_sample_V_q0;
        sample_period_samples_7_sample_V_load_reg_8613 <= sample_period_samples_7_sample_V_q1;
        sample_period_samples_7_timestamp_V_load_1_reg_8793 <= sample_period_samples_7_timestamp_V_q0;
        sample_period_samples_7_timestamp_V_load_reg_8673 <= sample_period_samples_7_timestamp_V_q1;
        sample_period_samples_8_sample_V_load_1_reg_8738 <= sample_period_samples_8_sample_V_q0;
        sample_period_samples_8_sample_V_load_reg_8618 <= sample_period_samples_8_sample_V_q1;
        sample_period_samples_8_timestamp_V_load_1_reg_8798 <= sample_period_samples_8_timestamp_V_q0;
        sample_period_samples_8_timestamp_V_load_reg_8678 <= sample_period_samples_8_timestamp_V_q1;
        sample_period_samples_9_sample_V_load_1_reg_8743 <= sample_period_samples_9_sample_V_q0;
        sample_period_samples_9_sample_V_load_reg_8623 <= sample_period_samples_9_sample_V_q1;
        sample_period_samples_9_timestamp_V_load_1_reg_8803 <= sample_period_samples_9_timestamp_V_q0;
        sample_period_samples_9_timestamp_V_load_reg_8683 <= sample_period_samples_9_timestamp_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_0_sample_V_load_2_reg_9058 <= sample_period_samples_0_sample_V_q0;
        sample_period_samples_0_sample_V_load_3_reg_9178 <= sample_period_samples_0_sample_V_q1;
        sample_period_samples_0_timestamp_V_load_2_reg_9118 <= sample_period_samples_0_timestamp_V_q0;
        sample_period_samples_0_timestamp_V_load_3_reg_9238 <= sample_period_samples_0_timestamp_V_q1;
        sample_period_samples_10_sample_V_load_2_reg_9108 <= sample_period_samples_10_sample_V_q0;
        sample_period_samples_10_sample_V_load_3_reg_9228 <= sample_period_samples_10_sample_V_q1;
        sample_period_samples_10_timestamp_V_load_2_reg_9168 <= sample_period_samples_10_timestamp_V_q0;
        sample_period_samples_10_timestamp_V_load_3_reg_9288 <= sample_period_samples_10_timestamp_V_q1;
        sample_period_samples_11_sample_V_load_2_reg_9113 <= sample_period_samples_11_sample_V_q0;
        sample_period_samples_11_sample_V_load_3_reg_9233 <= sample_period_samples_11_sample_V_q1;
        sample_period_samples_11_timestamp_V_load_2_reg_9173 <= sample_period_samples_11_timestamp_V_q0;
        sample_period_samples_11_timestamp_V_load_3_reg_9293 <= sample_period_samples_11_timestamp_V_q1;
        sample_period_samples_1_sample_V_load_2_reg_9063 <= sample_period_samples_1_sample_V_q0;
        sample_period_samples_1_sample_V_load_3_reg_9183 <= sample_period_samples_1_sample_V_q1;
        sample_period_samples_1_timestamp_V_load_2_reg_9123 <= sample_period_samples_1_timestamp_V_q0;
        sample_period_samples_1_timestamp_V_load_3_reg_9243 <= sample_period_samples_1_timestamp_V_q1;
        sample_period_samples_2_sample_V_load_2_reg_9068 <= sample_period_samples_2_sample_V_q0;
        sample_period_samples_2_sample_V_load_3_reg_9188 <= sample_period_samples_2_sample_V_q1;
        sample_period_samples_2_timestamp_V_load_2_reg_9128 <= sample_period_samples_2_timestamp_V_q0;
        sample_period_samples_2_timestamp_V_load_3_reg_9248 <= sample_period_samples_2_timestamp_V_q1;
        sample_period_samples_3_sample_V_load_2_reg_9073 <= sample_period_samples_3_sample_V_q0;
        sample_period_samples_3_sample_V_load_3_reg_9193 <= sample_period_samples_3_sample_V_q1;
        sample_period_samples_3_timestamp_V_load_2_reg_9133 <= sample_period_samples_3_timestamp_V_q0;
        sample_period_samples_3_timestamp_V_load_3_reg_9253 <= sample_period_samples_3_timestamp_V_q1;
        sample_period_samples_4_sample_V_load_2_reg_9078 <= sample_period_samples_4_sample_V_q0;
        sample_period_samples_4_sample_V_load_3_reg_9198 <= sample_period_samples_4_sample_V_q1;
        sample_period_samples_4_timestamp_V_load_2_reg_9138 <= sample_period_samples_4_timestamp_V_q0;
        sample_period_samples_4_timestamp_V_load_3_reg_9258 <= sample_period_samples_4_timestamp_V_q1;
        sample_period_samples_5_sample_V_load_2_reg_9083 <= sample_period_samples_5_sample_V_q0;
        sample_period_samples_5_sample_V_load_3_reg_9203 <= sample_period_samples_5_sample_V_q1;
        sample_period_samples_5_timestamp_V_load_2_reg_9143 <= sample_period_samples_5_timestamp_V_q0;
        sample_period_samples_5_timestamp_V_load_3_reg_9263 <= sample_period_samples_5_timestamp_V_q1;
        sample_period_samples_6_sample_V_load_2_reg_9088 <= sample_period_samples_6_sample_V_q0;
        sample_period_samples_6_sample_V_load_3_reg_9208 <= sample_period_samples_6_sample_V_q1;
        sample_period_samples_6_timestamp_V_load_2_reg_9148 <= sample_period_samples_6_timestamp_V_q0;
        sample_period_samples_6_timestamp_V_load_3_reg_9268 <= sample_period_samples_6_timestamp_V_q1;
        sample_period_samples_7_sample_V_load_2_reg_9093 <= sample_period_samples_7_sample_V_q0;
        sample_period_samples_7_sample_V_load_3_reg_9213 <= sample_period_samples_7_sample_V_q1;
        sample_period_samples_7_timestamp_V_load_2_reg_9153 <= sample_period_samples_7_timestamp_V_q0;
        sample_period_samples_7_timestamp_V_load_3_reg_9273 <= sample_period_samples_7_timestamp_V_q1;
        sample_period_samples_8_sample_V_load_2_reg_9098 <= sample_period_samples_8_sample_V_q0;
        sample_period_samples_8_sample_V_load_3_reg_9218 <= sample_period_samples_8_sample_V_q1;
        sample_period_samples_8_timestamp_V_load_2_reg_9158 <= sample_period_samples_8_timestamp_V_q0;
        sample_period_samples_8_timestamp_V_load_3_reg_9278 <= sample_period_samples_8_timestamp_V_q1;
        sample_period_samples_9_sample_V_load_2_reg_9103 <= sample_period_samples_9_sample_V_q0;
        sample_period_samples_9_sample_V_load_3_reg_9223 <= sample_period_samples_9_sample_V_q1;
        sample_period_samples_9_timestamp_V_load_2_reg_9163 <= sample_period_samples_9_timestamp_V_q0;
        sample_period_samples_9_timestamp_V_load_3_reg_9283 <= sample_period_samples_9_timestamp_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_0_sample_V_load_4_reg_9538 <= sample_period_samples_0_sample_V_q0;
        sample_period_samples_0_sample_V_load_5_reg_9658 <= sample_period_samples_0_sample_V_q1;
        sample_period_samples_0_timestamp_V_load_4_reg_9598 <= sample_period_samples_0_timestamp_V_q0;
        sample_period_samples_0_timestamp_V_load_5_reg_9718 <= sample_period_samples_0_timestamp_V_q1;
        sample_period_samples_10_sample_V_load_4_reg_9588 <= sample_period_samples_10_sample_V_q0;
        sample_period_samples_10_sample_V_load_5_reg_9708 <= sample_period_samples_10_sample_V_q1;
        sample_period_samples_10_timestamp_V_load_4_reg_9648 <= sample_period_samples_10_timestamp_V_q0;
        sample_period_samples_10_timestamp_V_load_5_reg_9768 <= sample_period_samples_10_timestamp_V_q1;
        sample_period_samples_11_sample_V_load_4_reg_9593 <= sample_period_samples_11_sample_V_q0;
        sample_period_samples_11_sample_V_load_5_reg_9713 <= sample_period_samples_11_sample_V_q1;
        sample_period_samples_11_timestamp_V_load_4_reg_9653 <= sample_period_samples_11_timestamp_V_q0;
        sample_period_samples_11_timestamp_V_load_5_reg_9773 <= sample_period_samples_11_timestamp_V_q1;
        sample_period_samples_1_sample_V_load_4_reg_9543 <= sample_period_samples_1_sample_V_q0;
        sample_period_samples_1_sample_V_load_5_reg_9663 <= sample_period_samples_1_sample_V_q1;
        sample_period_samples_1_timestamp_V_load_4_reg_9603 <= sample_period_samples_1_timestamp_V_q0;
        sample_period_samples_1_timestamp_V_load_5_reg_9723 <= sample_period_samples_1_timestamp_V_q1;
        sample_period_samples_2_sample_V_load_4_reg_9548 <= sample_period_samples_2_sample_V_q0;
        sample_period_samples_2_sample_V_load_5_reg_9668 <= sample_period_samples_2_sample_V_q1;
        sample_period_samples_2_timestamp_V_load_4_reg_9608 <= sample_period_samples_2_timestamp_V_q0;
        sample_period_samples_2_timestamp_V_load_5_reg_9728 <= sample_period_samples_2_timestamp_V_q1;
        sample_period_samples_3_sample_V_load_4_reg_9553 <= sample_period_samples_3_sample_V_q0;
        sample_period_samples_3_sample_V_load_5_reg_9673 <= sample_period_samples_3_sample_V_q1;
        sample_period_samples_3_timestamp_V_load_4_reg_9613 <= sample_period_samples_3_timestamp_V_q0;
        sample_period_samples_3_timestamp_V_load_5_reg_9733 <= sample_period_samples_3_timestamp_V_q1;
        sample_period_samples_4_sample_V_load_4_reg_9558 <= sample_period_samples_4_sample_V_q0;
        sample_period_samples_4_sample_V_load_5_reg_9678 <= sample_period_samples_4_sample_V_q1;
        sample_period_samples_4_timestamp_V_load_4_reg_9618 <= sample_period_samples_4_timestamp_V_q0;
        sample_period_samples_4_timestamp_V_load_5_reg_9738 <= sample_period_samples_4_timestamp_V_q1;
        sample_period_samples_5_sample_V_load_4_reg_9563 <= sample_period_samples_5_sample_V_q0;
        sample_period_samples_5_sample_V_load_5_reg_9683 <= sample_period_samples_5_sample_V_q1;
        sample_period_samples_5_timestamp_V_load_4_reg_9623 <= sample_period_samples_5_timestamp_V_q0;
        sample_period_samples_5_timestamp_V_load_5_reg_9743 <= sample_period_samples_5_timestamp_V_q1;
        sample_period_samples_6_sample_V_load_4_reg_9568 <= sample_period_samples_6_sample_V_q0;
        sample_period_samples_6_sample_V_load_5_reg_9688 <= sample_period_samples_6_sample_V_q1;
        sample_period_samples_6_timestamp_V_load_4_reg_9628 <= sample_period_samples_6_timestamp_V_q0;
        sample_period_samples_6_timestamp_V_load_5_reg_9748 <= sample_period_samples_6_timestamp_V_q1;
        sample_period_samples_7_sample_V_load_4_reg_9573 <= sample_period_samples_7_sample_V_q0;
        sample_period_samples_7_sample_V_load_5_reg_9693 <= sample_period_samples_7_sample_V_q1;
        sample_period_samples_7_timestamp_V_load_4_reg_9633 <= sample_period_samples_7_timestamp_V_q0;
        sample_period_samples_7_timestamp_V_load_5_reg_9753 <= sample_period_samples_7_timestamp_V_q1;
        sample_period_samples_8_sample_V_load_4_reg_9578 <= sample_period_samples_8_sample_V_q0;
        sample_period_samples_8_sample_V_load_5_reg_9698 <= sample_period_samples_8_sample_V_q1;
        sample_period_samples_8_timestamp_V_load_4_reg_9638 <= sample_period_samples_8_timestamp_V_q0;
        sample_period_samples_8_timestamp_V_load_5_reg_9758 <= sample_period_samples_8_timestamp_V_q1;
        sample_period_samples_9_sample_V_load_4_reg_9583 <= sample_period_samples_9_sample_V_q0;
        sample_period_samples_9_sample_V_load_5_reg_9703 <= sample_period_samples_9_sample_V_q1;
        sample_period_samples_9_timestamp_V_load_4_reg_9643 <= sample_period_samples_9_timestamp_V_q0;
        sample_period_samples_9_timestamp_V_load_5_reg_9763 <= sample_period_samples_9_timestamp_V_q1;
    end
end

always @ (*) begin
    if ((icmp_ln84_fu_7343_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_7318_p4 = add_ln84_reg_8113;
    end else begin
        ap_phi_mux_i_phi_fu_7318_p4 = i_reg_7314;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_0_ce0 = 1'b1;
    end else begin
        buffer_in_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_10_ce0 = 1'b1;
    end else begin
        buffer_in_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_11_ce0 = 1'b1;
    end else begin
        buffer_in_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_1_ce0 = 1'b1;
    end else begin
        buffer_in_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_2_ce0 = 1'b1;
    end else begin
        buffer_in_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_3_ce0 = 1'b1;
    end else begin
        buffer_in_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_4_ce0 = 1'b1;
    end else begin
        buffer_in_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_5_ce0 = 1'b1;
    end else begin
        buffer_in_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_6_ce0 = 1'b1;
    end else begin
        buffer_in_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_7_ce0 = 1'b1;
    end else begin
        buffer_in_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_8_ce0 = 1'b1;
    end else begin
        buffer_in_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_9_ce0 = 1'b1;
    end else begin
        buffer_in_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_7633_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_7653_ap_start = 1'b1;
    end else begin
        grp_fu_7653_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln63_fu_7869_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_7881_ap_start = 1'b1;
    end else begin
        grp_fu_7881_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_0_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_0_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_0_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_0_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_0_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_0_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_0_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_0_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_0_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_0_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_0_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_0_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_0_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_0_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_0_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_0_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_0_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_0_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_0_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_0_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_0_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_0_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_0_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_0_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_0_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_0_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_0_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_0_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_0_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_0_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_0_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_0_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_0_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_0_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_10_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_10_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_10_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_10_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_10_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_10_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_10_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_10_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_10_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_10_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_10_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_10_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_10_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_10_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_10_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_10_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_10_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_10_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_10_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_10_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_10_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_10_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_10_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_10_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_10_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_10_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_10_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_10_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_10_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_10_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_10_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_10_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_10_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_10_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_11_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_11_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_11_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_11_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_11_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_11_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_11_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_11_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_11_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_11_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_11_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_11_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_11_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_11_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_11_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_11_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_11_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_11_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_11_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_11_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_11_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_11_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_11_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_11_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_11_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_11_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_11_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_11_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_11_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_11_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_11_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_11_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_11_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_11_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_1_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_1_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_1_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_1_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_1_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_1_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_1_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_1_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_1_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_1_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_1_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_1_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_1_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_1_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_1_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_1_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_1_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_1_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_1_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_1_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_1_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_1_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_1_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_1_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_1_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_1_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_1_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_1_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_1_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_1_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_1_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_1_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_1_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_1_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_2_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_2_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_2_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_2_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_2_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_2_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_2_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_2_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_2_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_2_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_2_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_2_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_2_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_2_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_2_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_2_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_2_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_2_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_2_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_2_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_2_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_2_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_2_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_2_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_2_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_2_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_2_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_2_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_2_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_2_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_2_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_2_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_2_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_2_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_3_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_3_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_3_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_3_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_3_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_3_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_3_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_3_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_3_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_3_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_3_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_3_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_3_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_3_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_3_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_3_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_3_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_3_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_3_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_3_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_3_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_3_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_3_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_3_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_3_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_3_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_3_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_3_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_3_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_3_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_3_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_3_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_3_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_3_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_4_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_4_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_4_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_4_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_4_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_4_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_4_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_4_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_4_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_4_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_4_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_4_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_4_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_4_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_4_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_4_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_4_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_4_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_4_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_4_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_4_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_4_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_4_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_4_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_4_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_4_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_4_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_4_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_4_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_4_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_4_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_4_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_4_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_4_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_5_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_5_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_5_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_5_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_5_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_5_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_5_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_5_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_5_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_5_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_5_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_5_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_5_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_5_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_5_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_5_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_5_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_5_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_5_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_5_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_5_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_5_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_5_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_5_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_5_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_5_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_5_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_5_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_5_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_5_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_5_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_5_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_5_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_5_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_6_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_6_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_6_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_6_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_6_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_6_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_6_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_6_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_6_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_6_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_6_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_6_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_6_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_6_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_6_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_6_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_6_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_6_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_6_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_6_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_6_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_6_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_6_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_6_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_6_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_6_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_6_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_6_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_6_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_6_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_6_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_6_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_6_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_6_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_7_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_7_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_7_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_7_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_7_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_7_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_7_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_7_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_7_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_7_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_7_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_7_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_7_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_7_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_7_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_7_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_7_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_7_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_7_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_7_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_7_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_7_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_7_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_7_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_7_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_7_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_7_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_7_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_7_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_7_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_7_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_7_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_7_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_7_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_8_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_8_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_8_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_8_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_8_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_8_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_8_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_8_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_8_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_8_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_8_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_8_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_8_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_8_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_8_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_8_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_8_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_8_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_8_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_8_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_8_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_8_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_8_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_8_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_8_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_8_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_8_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_8_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_8_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_8_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_8_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_8_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_8_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_8_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_9_sample_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_9_sample_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_9_sample_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_9_sample_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_9_sample_V_address0 = 64'd1;
    end else begin
        sample_period_samples_9_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_9_sample_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_9_sample_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_9_sample_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_9_sample_V_address1 = 64'd0;
    end else begin
        sample_period_samples_9_sample_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_9_sample_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_9_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_9_sample_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_9_sample_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_9_sample_V_we0 = 1'b1;
    end else begin
        sample_period_samples_9_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_9_timestamp_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_9_timestamp_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_9_timestamp_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_9_timestamp_V_address0 = zext_ln19_reg_8187;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_9_timestamp_V_address0 = 64'd1;
    end else begin
        sample_period_samples_9_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sample_period_samples_9_timestamp_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sample_period_samples_9_timestamp_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sample_period_samples_9_timestamp_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sample_period_samples_9_timestamp_V_address1 = 64'd0;
    end else begin
        sample_period_samples_9_timestamp_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_9_timestamp_V_ce0 = 1'b1;
    end else begin
        sample_period_samples_9_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        sample_period_samples_9_timestamp_V_ce1 = 1'b1;
    end else begin
        sample_period_samples_9_timestamp_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sample_period_samples_9_timestamp_V_we0 = 1'b1;
    end else begin
        sample_period_samples_9_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_0_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_0_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_0_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_0_sample_V_ce0 = 1'b1;
    end else begin
        samples_0_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_0_sample_V_we0 = 1'b1;
    end else begin
        samples_0_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_0_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_0_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_0_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_0_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_0_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_0_timestamp_V_we0 = 1'b1;
    end else begin
        samples_0_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_10_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_10_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_10_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_10_sample_V_ce0 = 1'b1;
    end else begin
        samples_10_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_10_sample_V_we0 = 1'b1;
    end else begin
        samples_10_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_10_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_10_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_10_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_10_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_10_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_10_timestamp_V_we0 = 1'b1;
    end else begin
        samples_10_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_11_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_11_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_11_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_11_sample_V_ce0 = 1'b1;
    end else begin
        samples_11_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_11_sample_V_we0 = 1'b1;
    end else begin
        samples_11_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_11_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_11_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_11_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_11_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_11_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_11_timestamp_V_we0 = 1'b1;
    end else begin
        samples_11_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_1_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_1_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_1_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_1_sample_V_ce0 = 1'b1;
    end else begin
        samples_1_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_1_sample_V_we0 = 1'b1;
    end else begin
        samples_1_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_1_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_1_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_1_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_1_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_1_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_1_timestamp_V_we0 = 1'b1;
    end else begin
        samples_1_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_2_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_2_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_2_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_2_sample_V_ce0 = 1'b1;
    end else begin
        samples_2_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_2_sample_V_we0 = 1'b1;
    end else begin
        samples_2_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_2_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_2_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_2_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_2_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_2_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_2_timestamp_V_we0 = 1'b1;
    end else begin
        samples_2_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_3_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_3_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_3_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_3_sample_V_ce0 = 1'b1;
    end else begin
        samples_3_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_3_sample_V_we0 = 1'b1;
    end else begin
        samples_3_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_3_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_3_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_3_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_3_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_3_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_3_timestamp_V_we0 = 1'b1;
    end else begin
        samples_3_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_4_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_4_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_4_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_4_sample_V_ce0 = 1'b1;
    end else begin
        samples_4_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_4_sample_V_we0 = 1'b1;
    end else begin
        samples_4_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_4_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_4_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_4_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_4_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_4_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_4_timestamp_V_we0 = 1'b1;
    end else begin
        samples_4_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_5_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_5_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_5_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_5_sample_V_ce0 = 1'b1;
    end else begin
        samples_5_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_5_sample_V_we0 = 1'b1;
    end else begin
        samples_5_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_5_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_5_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_5_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_5_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_5_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_5_timestamp_V_we0 = 1'b1;
    end else begin
        samples_5_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_6_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_6_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_6_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_6_sample_V_ce0 = 1'b1;
    end else begin
        samples_6_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_6_sample_V_we0 = 1'b1;
    end else begin
        samples_6_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_6_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_6_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_6_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_6_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_6_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_6_timestamp_V_we0 = 1'b1;
    end else begin
        samples_6_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_7_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_7_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_7_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_7_sample_V_ce0 = 1'b1;
    end else begin
        samples_7_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_7_sample_V_we0 = 1'b1;
    end else begin
        samples_7_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_7_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_7_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_7_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_7_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_7_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_7_timestamp_V_we0 = 1'b1;
    end else begin
        samples_7_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_8_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_8_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_8_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_8_sample_V_ce0 = 1'b1;
    end else begin
        samples_8_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_8_sample_V_we0 = 1'b1;
    end else begin
        samples_8_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_8_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_8_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_8_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_8_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_8_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_8_timestamp_V_we0 = 1'b1;
    end else begin
        samples_8_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_9_sample_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_9_sample_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_9_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_9_sample_V_ce0 = 1'b1;
    end else begin
        samples_9_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_9_sample_V_we0 = 1'b1;
    end else begin
        samples_9_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        samples_9_timestamp_V_address0 = zext_ln19_fu_7595_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_9_timestamp_V_address0 = i_cast_fu_7369_p1;
    end else begin
        samples_9_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        samples_9_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_9_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln84_reg_8118 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_9_timestamp_V_we0 = 1'b1;
    end else begin
        samples_9_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln63_reg_10283 == 1'd1) & (icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        sliding_window_back_ptr_s_o = grp_fu_7881_p2;
    end else begin
        sliding_window_back_ptr_s_o = sliding_window_back_ptr_s_i;
    end
end

always @ (*) begin
    if (((icmp_ln63_reg_10283 == 1'd1) & (icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        sliding_window_back_ptr_s_o_ap_vld = 1'b1;
    end else begin
        sliding_window_back_ptr_s_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_0_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_0_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_0_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_0_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_0_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_1_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_1_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_1_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_1_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_1_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_2_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_2_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_2_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_2_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_3_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_3_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_3_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_3_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_3_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_4_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_4_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_4_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_4_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_4_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_5_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_5_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_5_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_5_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_5_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_0_d0 = sample_period_samples_0_sample_V_load_6_reg_10018;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_0_d0 = sample_period_samples_0_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_10_d0 = sample_period_samples_10_sample_V_load_6_reg_10068;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_10_d0 = sample_period_samples_10_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_11_d0 = sample_period_samples_11_sample_V_load_6_reg_10073;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_11_d0 = sample_period_samples_11_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_11_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_1_d0 = sample_period_samples_1_sample_V_load_6_reg_10023;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_1_d0 = sample_period_samples_1_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_2_d0 = sample_period_samples_2_sample_V_load_6_reg_10028;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_2_d0 = sample_period_samples_2_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_3_d0 = sample_period_samples_3_sample_V_load_6_reg_10033;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_3_d0 = sample_period_samples_3_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_4_d0 = sample_period_samples_4_sample_V_load_6_reg_10038;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_4_d0 = sample_period_samples_4_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_5_d0 = sample_period_samples_5_sample_V_load_6_reg_10043;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_5_d0 = sample_period_samples_5_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_6_d0 = sample_period_samples_6_sample_V_load_6_reg_10048;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_6_d0 = sample_period_samples_6_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_7_d0 = sample_period_samples_7_sample_V_load_6_reg_10053;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_7_d0 = sample_period_samples_7_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_8_d0 = sample_period_samples_8_sample_V_load_6_reg_10058;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_8_d0 = sample_period_samples_8_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_6_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_6_9_d0 = sample_period_samples_9_sample_V_load_6_reg_10063;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_6_9_d0 = sample_period_samples_9_sample_V_q0;
    end else begin
        sliding_window_buffer_samples_sample_V_6_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_6_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_6_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_0_d0 = sample_period_samples_0_sample_V_load_7_reg_10138;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_0_d0 = sample_period_samples_0_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_10_d0 = sample_period_samples_10_sample_V_load_7_reg_10188;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_10_d0 = sample_period_samples_10_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_11_d0 = sample_period_samples_11_sample_V_load_7_reg_10193;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_11_d0 = sample_period_samples_11_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_11_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_1_d0 = sample_period_samples_1_sample_V_load_7_reg_10143;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_1_d0 = sample_period_samples_1_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_2_d0 = sample_period_samples_2_sample_V_load_7_reg_10148;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_2_d0 = sample_period_samples_2_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_3_d0 = sample_period_samples_3_sample_V_load_7_reg_10153;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_3_d0 = sample_period_samples_3_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_4_d0 = sample_period_samples_4_sample_V_load_7_reg_10158;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_4_d0 = sample_period_samples_4_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_5_d0 = sample_period_samples_5_sample_V_load_7_reg_10163;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_5_d0 = sample_period_samples_5_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_6_d0 = sample_period_samples_6_sample_V_load_7_reg_10168;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_6_d0 = sample_period_samples_6_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_7_d0 = sample_period_samples_7_sample_V_load_7_reg_10173;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_7_d0 = sample_period_samples_7_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_8_d0 = sample_period_samples_8_sample_V_load_7_reg_10178;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_8_d0 = sample_period_samples_8_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_sample_V_7_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_sample_V_7_9_d0 = sample_period_samples_9_sample_V_load_7_reg_10183;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_sample_V_7_9_d0 = sample_period_samples_9_sample_V_q1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_sample_V_7_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_sample_V_7_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_0_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_0_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_0_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_0_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_0_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_1_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_1_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_1_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_1_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_1_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_2_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_2_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_2_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_2_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_3_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_3_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_3_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_3_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_3_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_4_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_4_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_4_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_4_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_4_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_5_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_5_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_5_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_5_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_5_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_0_d0 = sample_period_samples_0_timestamp_V_load_6_reg_10078;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_0_d0 = sample_period_samples_0_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_10_d0 = sample_period_samples_10_timestamp_V_load_6_reg_10128;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_10_d0 = sample_period_samples_10_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_11_d0 = sample_period_samples_11_timestamp_V_load_6_reg_10133;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_11_d0 = sample_period_samples_11_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_11_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_1_d0 = sample_period_samples_1_timestamp_V_load_6_reg_10083;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_1_d0 = sample_period_samples_1_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_2_d0 = sample_period_samples_2_timestamp_V_load_6_reg_10088;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_2_d0 = sample_period_samples_2_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_3_d0 = sample_period_samples_3_timestamp_V_load_6_reg_10093;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_3_d0 = sample_period_samples_3_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_4_d0 = sample_period_samples_4_timestamp_V_load_6_reg_10098;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_4_d0 = sample_period_samples_4_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_5_d0 = sample_period_samples_5_timestamp_V_load_6_reg_10103;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_5_d0 = sample_period_samples_5_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_6_d0 = sample_period_samples_6_timestamp_V_load_6_reg_10108;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_6_d0 = sample_period_samples_6_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_7_d0 = sample_period_samples_7_timestamp_V_load_6_reg_10113;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_7_d0 = sample_period_samples_7_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_8_d0 = sample_period_samples_8_timestamp_V_load_6_reg_10118;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_8_d0 = sample_period_samples_8_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_6_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_6_9_d0 = sample_period_samples_9_timestamp_V_load_6_reg_10123;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_6_9_d0 = sample_period_samples_9_timestamp_V_q0;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_6_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_6_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_0_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_0_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_0_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_0_d0 = sample_period_samples_0_timestamp_V_load_7_reg_10198;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_0_d0 = sample_period_samples_0_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_0_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_10_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_10_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_10_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_10_d0 = sample_period_samples_10_timestamp_V_load_7_reg_10248;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_10_d0 = sample_period_samples_10_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_10_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_11_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_11_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_11_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_11_d0 = sample_period_samples_11_timestamp_V_load_7_reg_10253;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_11_d0 = sample_period_samples_11_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_11_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_11_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_1_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_1_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_1_d0 = sample_period_samples_1_timestamp_V_load_7_reg_10203;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_1_d0 = sample_period_samples_1_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_2_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_2_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_2_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_2_d0 = sample_period_samples_2_timestamp_V_load_7_reg_10208;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_2_d0 = sample_period_samples_2_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_2_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_3_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_3_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_3_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_3_d0 = sample_period_samples_3_timestamp_V_load_7_reg_10213;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_3_d0 = sample_period_samples_3_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_3_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_4_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_4_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_4_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_4_d0 = sample_period_samples_4_timestamp_V_load_7_reg_10218;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_4_d0 = sample_period_samples_4_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_4_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_5_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_5_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_5_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_5_d0 = sample_period_samples_5_timestamp_V_load_7_reg_10223;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_5_d0 = sample_period_samples_5_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_5_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_6_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_6_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_6_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_6_d0 = sample_period_samples_6_timestamp_V_load_7_reg_10228;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_6_d0 = sample_period_samples_6_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_6_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_7_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_7_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_7_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_7_d0 = sample_period_samples_7_timestamp_V_load_7_reg_10233;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_7_d0 = sample_period_samples_7_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_7_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_8_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_8_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_8_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_8_d0 = sample_period_samples_8_timestamp_V_load_7_reg_10238;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_8_d0 = sample_period_samples_8_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_8_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_9_address0 = zext_ln75_fu_7912_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_9_address0 = zext_ln54_fu_7659_p1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        sliding_window_buffer_samples_timestamp_V_7_9_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sliding_window_buffer_samples_timestamp_V_7_9_d0 = sample_period_samples_9_timestamp_V_load_7_reg_10243;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sliding_window_buffer_samples_timestamp_V_7_9_d0 = sample_period_samples_9_timestamp_V_q1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        sliding_window_buffer_samples_timestamp_V_7_9_we0 = 1'b1;
    end else begin
        sliding_window_buffer_samples_timestamp_V_7_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        sliding_window_front_ptr_s_o = trunc_ln61_reg_10278;
    end else begin
        sliding_window_front_ptr_s_o = sliding_window_front_ptr_s_i;
    end
end

always @ (*) begin
    if (((icmp_ln52_reg_10264 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        sliding_window_front_ptr_s_o_ap_vld = 1'b1;
    end else begin
        sliding_window_front_ptr_s_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln84_fu_7343_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln84_fu_7343_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln19_fu_7623_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln52_fu_7633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln63_fu_7869_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln19_fu_7589_p2 = (i_1_reg_7326 + 4'd1);

assign add_ln71_fu_7898_p2 = (sliding_window_size_load_reg_10258 + 32'd1);

assign add_ln84_fu_7337_p2 = (ap_phi_mux_i_phi_fu_7318_p4 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign buffer_in_0_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_10_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_11_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_1_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_2_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_3_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_4_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_5_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_6_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_7_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_8_address0 = zext_ln87_fu_7353_p1;

assign buffer_in_9_address0 = zext_ln87_fu_7353_p1;

assign grp_fu_7653_p0 = ($signed(sext_ln52_fu_7643_p1) + $signed(7'd1));

assign grp_fu_7653_p1 = 7'd20;

assign grp_fu_7881_p0 = (trunc_ln61_fu_7861_p1 + 6'd1);

assign i_cast_fu_7369_p1 = i_reg_7314;

assign icmp_ln19_fu_7623_p2 = ((i_1_reg_7326 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_7633_p2 = ((sliding_window_size_s == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_7869_p2 = ((trunc_ln61_fu_7861_p1 == sliding_window_back_ptr_s_i) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_7893_p2 = (($signed(sliding_window_size_load_reg_10258) < $signed(32'd20)) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_7343_p2 = ((ap_phi_mux_i_phi_fu_7318_p4 == 4'd8) ? 1'b1 : 1'b0);

assign samples_0_sample_V_d0 = buffer_in_0_q0[11:0];

assign samples_0_timestamp_V_d0 = {{buffer_in_0_q0[31:12]}};

assign samples_10_sample_V_d0 = buffer_in_10_q0[11:0];

assign samples_10_timestamp_V_d0 = {{buffer_in_10_q0[31:12]}};

assign samples_11_sample_V_d0 = buffer_in_11_q0[11:0];

assign samples_11_timestamp_V_d0 = {{buffer_in_11_q0[31:12]}};

assign samples_1_sample_V_d0 = buffer_in_1_q0[11:0];

assign samples_1_timestamp_V_d0 = {{buffer_in_1_q0[31:12]}};

assign samples_2_sample_V_d0 = buffer_in_2_q0[11:0];

assign samples_2_timestamp_V_d0 = {{buffer_in_2_q0[31:12]}};

assign samples_3_sample_V_d0 = buffer_in_3_q0[11:0];

assign samples_3_timestamp_V_d0 = {{buffer_in_3_q0[31:12]}};

assign samples_4_sample_V_d0 = buffer_in_4_q0[11:0];

assign samples_4_timestamp_V_d0 = {{buffer_in_4_q0[31:12]}};

assign samples_5_sample_V_d0 = buffer_in_5_q0[11:0];

assign samples_5_timestamp_V_d0 = {{buffer_in_5_q0[31:12]}};

assign samples_6_sample_V_d0 = buffer_in_6_q0[11:0];

assign samples_6_timestamp_V_d0 = {{buffer_in_6_q0[31:12]}};

assign samples_7_sample_V_d0 = buffer_in_7_q0[11:0];

assign samples_7_timestamp_V_d0 = {{buffer_in_7_q0[31:12]}};

assign samples_8_sample_V_d0 = buffer_in_8_q0[11:0];

assign samples_8_timestamp_V_d0 = {{buffer_in_8_q0[31:12]}};

assign samples_9_sample_V_d0 = buffer_in_9_q0[11:0];

assign samples_9_timestamp_V_d0 = {{buffer_in_9_q0[31:12]}};

assign sext_ln52_fu_7643_p0 = sliding_window_front_ptr_s_i;

assign sext_ln52_fu_7643_p1 = sext_ln52_fu_7643_p0;

assign sliding_window_buffer_samples_sample_V_0_0_d0 = sample_period_samples_0_sample_V_load_reg_8578;

assign sliding_window_buffer_samples_sample_V_0_10_d0 = sample_period_samples_10_sample_V_load_reg_8628;

assign sliding_window_buffer_samples_sample_V_0_11_d0 = sample_period_samples_11_sample_V_load_reg_8633;

assign sliding_window_buffer_samples_sample_V_0_1_d0 = sample_period_samples_1_sample_V_load_reg_8583;

assign sliding_window_buffer_samples_sample_V_0_2_d0 = sample_period_samples_2_sample_V_load_reg_8588;

assign sliding_window_buffer_samples_sample_V_0_3_d0 = sample_period_samples_3_sample_V_load_reg_8593;

assign sliding_window_buffer_samples_sample_V_0_4_d0 = sample_period_samples_4_sample_V_load_reg_8598;

assign sliding_window_buffer_samples_sample_V_0_5_d0 = sample_period_samples_5_sample_V_load_reg_8603;

assign sliding_window_buffer_samples_sample_V_0_6_d0 = sample_period_samples_6_sample_V_load_reg_8608;

assign sliding_window_buffer_samples_sample_V_0_7_d0 = sample_period_samples_7_sample_V_load_reg_8613;

assign sliding_window_buffer_samples_sample_V_0_8_d0 = sample_period_samples_8_sample_V_load_reg_8618;

assign sliding_window_buffer_samples_sample_V_0_9_d0 = sample_period_samples_9_sample_V_load_reg_8623;

assign sliding_window_buffer_samples_sample_V_1_0_d0 = sample_period_samples_0_sample_V_load_1_reg_8698;

assign sliding_window_buffer_samples_sample_V_1_10_d0 = sample_period_samples_10_sample_V_load_1_reg_8748;

assign sliding_window_buffer_samples_sample_V_1_11_d0 = sample_period_samples_11_sample_V_load_1_reg_8753;

assign sliding_window_buffer_samples_sample_V_1_1_d0 = sample_period_samples_1_sample_V_load_1_reg_8703;

assign sliding_window_buffer_samples_sample_V_1_2_d0 = sample_period_samples_2_sample_V_load_1_reg_8708;

assign sliding_window_buffer_samples_sample_V_1_3_d0 = sample_period_samples_3_sample_V_load_1_reg_8713;

assign sliding_window_buffer_samples_sample_V_1_4_d0 = sample_period_samples_4_sample_V_load_1_reg_8718;

assign sliding_window_buffer_samples_sample_V_1_5_d0 = sample_period_samples_5_sample_V_load_1_reg_8723;

assign sliding_window_buffer_samples_sample_V_1_6_d0 = sample_period_samples_6_sample_V_load_1_reg_8728;

assign sliding_window_buffer_samples_sample_V_1_7_d0 = sample_period_samples_7_sample_V_load_1_reg_8733;

assign sliding_window_buffer_samples_sample_V_1_8_d0 = sample_period_samples_8_sample_V_load_1_reg_8738;

assign sliding_window_buffer_samples_sample_V_1_9_d0 = sample_period_samples_9_sample_V_load_1_reg_8743;

assign sliding_window_buffer_samples_sample_V_2_0_d0 = sample_period_samples_0_sample_V_load_2_reg_9058;

assign sliding_window_buffer_samples_sample_V_2_10_d0 = sample_period_samples_10_sample_V_load_2_reg_9108;

assign sliding_window_buffer_samples_sample_V_2_11_d0 = sample_period_samples_11_sample_V_load_2_reg_9113;

assign sliding_window_buffer_samples_sample_V_2_1_d0 = sample_period_samples_1_sample_V_load_2_reg_9063;

assign sliding_window_buffer_samples_sample_V_2_2_d0 = sample_period_samples_2_sample_V_load_2_reg_9068;

assign sliding_window_buffer_samples_sample_V_2_3_d0 = sample_period_samples_3_sample_V_load_2_reg_9073;

assign sliding_window_buffer_samples_sample_V_2_4_d0 = sample_period_samples_4_sample_V_load_2_reg_9078;

assign sliding_window_buffer_samples_sample_V_2_5_d0 = sample_period_samples_5_sample_V_load_2_reg_9083;

assign sliding_window_buffer_samples_sample_V_2_6_d0 = sample_period_samples_6_sample_V_load_2_reg_9088;

assign sliding_window_buffer_samples_sample_V_2_7_d0 = sample_period_samples_7_sample_V_load_2_reg_9093;

assign sliding_window_buffer_samples_sample_V_2_8_d0 = sample_period_samples_8_sample_V_load_2_reg_9098;

assign sliding_window_buffer_samples_sample_V_2_9_d0 = sample_period_samples_9_sample_V_load_2_reg_9103;

assign sliding_window_buffer_samples_sample_V_3_0_d0 = sample_period_samples_0_sample_V_load_3_reg_9178;

assign sliding_window_buffer_samples_sample_V_3_10_d0 = sample_period_samples_10_sample_V_load_3_reg_9228;

assign sliding_window_buffer_samples_sample_V_3_11_d0 = sample_period_samples_11_sample_V_load_3_reg_9233;

assign sliding_window_buffer_samples_sample_V_3_1_d0 = sample_period_samples_1_sample_V_load_3_reg_9183;

assign sliding_window_buffer_samples_sample_V_3_2_d0 = sample_period_samples_2_sample_V_load_3_reg_9188;

assign sliding_window_buffer_samples_sample_V_3_3_d0 = sample_period_samples_3_sample_V_load_3_reg_9193;

assign sliding_window_buffer_samples_sample_V_3_4_d0 = sample_period_samples_4_sample_V_load_3_reg_9198;

assign sliding_window_buffer_samples_sample_V_3_5_d0 = sample_period_samples_5_sample_V_load_3_reg_9203;

assign sliding_window_buffer_samples_sample_V_3_6_d0 = sample_period_samples_6_sample_V_load_3_reg_9208;

assign sliding_window_buffer_samples_sample_V_3_7_d0 = sample_period_samples_7_sample_V_load_3_reg_9213;

assign sliding_window_buffer_samples_sample_V_3_8_d0 = sample_period_samples_8_sample_V_load_3_reg_9218;

assign sliding_window_buffer_samples_sample_V_3_9_d0 = sample_period_samples_9_sample_V_load_3_reg_9223;

assign sliding_window_buffer_samples_sample_V_4_0_d0 = sample_period_samples_0_sample_V_load_4_reg_9538;

assign sliding_window_buffer_samples_sample_V_4_10_d0 = sample_period_samples_10_sample_V_load_4_reg_9588;

assign sliding_window_buffer_samples_sample_V_4_11_d0 = sample_period_samples_11_sample_V_load_4_reg_9593;

assign sliding_window_buffer_samples_sample_V_4_1_d0 = sample_period_samples_1_sample_V_load_4_reg_9543;

assign sliding_window_buffer_samples_sample_V_4_2_d0 = sample_period_samples_2_sample_V_load_4_reg_9548;

assign sliding_window_buffer_samples_sample_V_4_3_d0 = sample_period_samples_3_sample_V_load_4_reg_9553;

assign sliding_window_buffer_samples_sample_V_4_4_d0 = sample_period_samples_4_sample_V_load_4_reg_9558;

assign sliding_window_buffer_samples_sample_V_4_5_d0 = sample_period_samples_5_sample_V_load_4_reg_9563;

assign sliding_window_buffer_samples_sample_V_4_6_d0 = sample_period_samples_6_sample_V_load_4_reg_9568;

assign sliding_window_buffer_samples_sample_V_4_7_d0 = sample_period_samples_7_sample_V_load_4_reg_9573;

assign sliding_window_buffer_samples_sample_V_4_8_d0 = sample_period_samples_8_sample_V_load_4_reg_9578;

assign sliding_window_buffer_samples_sample_V_4_9_d0 = sample_period_samples_9_sample_V_load_4_reg_9583;

assign sliding_window_buffer_samples_sample_V_5_0_d0 = sample_period_samples_0_sample_V_load_5_reg_9658;

assign sliding_window_buffer_samples_sample_V_5_10_d0 = sample_period_samples_10_sample_V_load_5_reg_9708;

assign sliding_window_buffer_samples_sample_V_5_11_d0 = sample_period_samples_11_sample_V_load_5_reg_9713;

assign sliding_window_buffer_samples_sample_V_5_1_d0 = sample_period_samples_1_sample_V_load_5_reg_9663;

assign sliding_window_buffer_samples_sample_V_5_2_d0 = sample_period_samples_2_sample_V_load_5_reg_9668;

assign sliding_window_buffer_samples_sample_V_5_3_d0 = sample_period_samples_3_sample_V_load_5_reg_9673;

assign sliding_window_buffer_samples_sample_V_5_4_d0 = sample_period_samples_4_sample_V_load_5_reg_9678;

assign sliding_window_buffer_samples_sample_V_5_5_d0 = sample_period_samples_5_sample_V_load_5_reg_9683;

assign sliding_window_buffer_samples_sample_V_5_6_d0 = sample_period_samples_6_sample_V_load_5_reg_9688;

assign sliding_window_buffer_samples_sample_V_5_7_d0 = sample_period_samples_7_sample_V_load_5_reg_9693;

assign sliding_window_buffer_samples_sample_V_5_8_d0 = sample_period_samples_8_sample_V_load_5_reg_9698;

assign sliding_window_buffer_samples_sample_V_5_9_d0 = sample_period_samples_9_sample_V_load_5_reg_9703;

assign sliding_window_buffer_samples_timestamp_V_0_0_d0 = sample_period_samples_0_timestamp_V_load_reg_8638;

assign sliding_window_buffer_samples_timestamp_V_0_10_d0 = sample_period_samples_10_timestamp_V_load_reg_8688;

assign sliding_window_buffer_samples_timestamp_V_0_11_d0 = sample_period_samples_11_timestamp_V_load_reg_8693;

assign sliding_window_buffer_samples_timestamp_V_0_1_d0 = sample_period_samples_1_timestamp_V_load_reg_8643;

assign sliding_window_buffer_samples_timestamp_V_0_2_d0 = sample_period_samples_2_timestamp_V_load_reg_8648;

assign sliding_window_buffer_samples_timestamp_V_0_3_d0 = sample_period_samples_3_timestamp_V_load_reg_8653;

assign sliding_window_buffer_samples_timestamp_V_0_4_d0 = sample_period_samples_4_timestamp_V_load_reg_8658;

assign sliding_window_buffer_samples_timestamp_V_0_5_d0 = sample_period_samples_5_timestamp_V_load_reg_8663;

assign sliding_window_buffer_samples_timestamp_V_0_6_d0 = sample_period_samples_6_timestamp_V_load_reg_8668;

assign sliding_window_buffer_samples_timestamp_V_0_7_d0 = sample_period_samples_7_timestamp_V_load_reg_8673;

assign sliding_window_buffer_samples_timestamp_V_0_8_d0 = sample_period_samples_8_timestamp_V_load_reg_8678;

assign sliding_window_buffer_samples_timestamp_V_0_9_d0 = sample_period_samples_9_timestamp_V_load_reg_8683;

assign sliding_window_buffer_samples_timestamp_V_1_0_d0 = sample_period_samples_0_timestamp_V_load_1_reg_8758;

assign sliding_window_buffer_samples_timestamp_V_1_10_d0 = sample_period_samples_10_timestamp_V_load_1_reg_8808;

assign sliding_window_buffer_samples_timestamp_V_1_11_d0 = sample_period_samples_11_timestamp_V_load_1_reg_8813;

assign sliding_window_buffer_samples_timestamp_V_1_1_d0 = sample_period_samples_1_timestamp_V_load_1_reg_8763;

assign sliding_window_buffer_samples_timestamp_V_1_2_d0 = sample_period_samples_2_timestamp_V_load_1_reg_8768;

assign sliding_window_buffer_samples_timestamp_V_1_3_d0 = sample_period_samples_3_timestamp_V_load_1_reg_8773;

assign sliding_window_buffer_samples_timestamp_V_1_4_d0 = sample_period_samples_4_timestamp_V_load_1_reg_8778;

assign sliding_window_buffer_samples_timestamp_V_1_5_d0 = sample_period_samples_5_timestamp_V_load_1_reg_8783;

assign sliding_window_buffer_samples_timestamp_V_1_6_d0 = sample_period_samples_6_timestamp_V_load_1_reg_8788;

assign sliding_window_buffer_samples_timestamp_V_1_7_d0 = sample_period_samples_7_timestamp_V_load_1_reg_8793;

assign sliding_window_buffer_samples_timestamp_V_1_8_d0 = sample_period_samples_8_timestamp_V_load_1_reg_8798;

assign sliding_window_buffer_samples_timestamp_V_1_9_d0 = sample_period_samples_9_timestamp_V_load_1_reg_8803;

assign sliding_window_buffer_samples_timestamp_V_2_0_d0 = sample_period_samples_0_timestamp_V_load_2_reg_9118;

assign sliding_window_buffer_samples_timestamp_V_2_10_d0 = sample_period_samples_10_timestamp_V_load_2_reg_9168;

assign sliding_window_buffer_samples_timestamp_V_2_11_d0 = sample_period_samples_11_timestamp_V_load_2_reg_9173;

assign sliding_window_buffer_samples_timestamp_V_2_1_d0 = sample_period_samples_1_timestamp_V_load_2_reg_9123;

assign sliding_window_buffer_samples_timestamp_V_2_2_d0 = sample_period_samples_2_timestamp_V_load_2_reg_9128;

assign sliding_window_buffer_samples_timestamp_V_2_3_d0 = sample_period_samples_3_timestamp_V_load_2_reg_9133;

assign sliding_window_buffer_samples_timestamp_V_2_4_d0 = sample_period_samples_4_timestamp_V_load_2_reg_9138;

assign sliding_window_buffer_samples_timestamp_V_2_5_d0 = sample_period_samples_5_timestamp_V_load_2_reg_9143;

assign sliding_window_buffer_samples_timestamp_V_2_6_d0 = sample_period_samples_6_timestamp_V_load_2_reg_9148;

assign sliding_window_buffer_samples_timestamp_V_2_7_d0 = sample_period_samples_7_timestamp_V_load_2_reg_9153;

assign sliding_window_buffer_samples_timestamp_V_2_8_d0 = sample_period_samples_8_timestamp_V_load_2_reg_9158;

assign sliding_window_buffer_samples_timestamp_V_2_9_d0 = sample_period_samples_9_timestamp_V_load_2_reg_9163;

assign sliding_window_buffer_samples_timestamp_V_3_0_d0 = sample_period_samples_0_timestamp_V_load_3_reg_9238;

assign sliding_window_buffer_samples_timestamp_V_3_10_d0 = sample_period_samples_10_timestamp_V_load_3_reg_9288;

assign sliding_window_buffer_samples_timestamp_V_3_11_d0 = sample_period_samples_11_timestamp_V_load_3_reg_9293;

assign sliding_window_buffer_samples_timestamp_V_3_1_d0 = sample_period_samples_1_timestamp_V_load_3_reg_9243;

assign sliding_window_buffer_samples_timestamp_V_3_2_d0 = sample_period_samples_2_timestamp_V_load_3_reg_9248;

assign sliding_window_buffer_samples_timestamp_V_3_3_d0 = sample_period_samples_3_timestamp_V_load_3_reg_9253;

assign sliding_window_buffer_samples_timestamp_V_3_4_d0 = sample_period_samples_4_timestamp_V_load_3_reg_9258;

assign sliding_window_buffer_samples_timestamp_V_3_5_d0 = sample_period_samples_5_timestamp_V_load_3_reg_9263;

assign sliding_window_buffer_samples_timestamp_V_3_6_d0 = sample_period_samples_6_timestamp_V_load_3_reg_9268;

assign sliding_window_buffer_samples_timestamp_V_3_7_d0 = sample_period_samples_7_timestamp_V_load_3_reg_9273;

assign sliding_window_buffer_samples_timestamp_V_3_8_d0 = sample_period_samples_8_timestamp_V_load_3_reg_9278;

assign sliding_window_buffer_samples_timestamp_V_3_9_d0 = sample_period_samples_9_timestamp_V_load_3_reg_9283;

assign sliding_window_buffer_samples_timestamp_V_4_0_d0 = sample_period_samples_0_timestamp_V_load_4_reg_9598;

assign sliding_window_buffer_samples_timestamp_V_4_10_d0 = sample_period_samples_10_timestamp_V_load_4_reg_9648;

assign sliding_window_buffer_samples_timestamp_V_4_11_d0 = sample_period_samples_11_timestamp_V_load_4_reg_9653;

assign sliding_window_buffer_samples_timestamp_V_4_1_d0 = sample_period_samples_1_timestamp_V_load_4_reg_9603;

assign sliding_window_buffer_samples_timestamp_V_4_2_d0 = sample_period_samples_2_timestamp_V_load_4_reg_9608;

assign sliding_window_buffer_samples_timestamp_V_4_3_d0 = sample_period_samples_3_timestamp_V_load_4_reg_9613;

assign sliding_window_buffer_samples_timestamp_V_4_4_d0 = sample_period_samples_4_timestamp_V_load_4_reg_9618;

assign sliding_window_buffer_samples_timestamp_V_4_5_d0 = sample_period_samples_5_timestamp_V_load_4_reg_9623;

assign sliding_window_buffer_samples_timestamp_V_4_6_d0 = sample_period_samples_6_timestamp_V_load_4_reg_9628;

assign sliding_window_buffer_samples_timestamp_V_4_7_d0 = sample_period_samples_7_timestamp_V_load_4_reg_9633;

assign sliding_window_buffer_samples_timestamp_V_4_8_d0 = sample_period_samples_8_timestamp_V_load_4_reg_9638;

assign sliding_window_buffer_samples_timestamp_V_4_9_d0 = sample_period_samples_9_timestamp_V_load_4_reg_9643;

assign sliding_window_buffer_samples_timestamp_V_5_0_d0 = sample_period_samples_0_timestamp_V_load_5_reg_9718;

assign sliding_window_buffer_samples_timestamp_V_5_10_d0 = sample_period_samples_10_timestamp_V_load_5_reg_9768;

assign sliding_window_buffer_samples_timestamp_V_5_11_d0 = sample_period_samples_11_timestamp_V_load_5_reg_9773;

assign sliding_window_buffer_samples_timestamp_V_5_1_d0 = sample_period_samples_1_timestamp_V_load_5_reg_9723;

assign sliding_window_buffer_samples_timestamp_V_5_2_d0 = sample_period_samples_2_timestamp_V_load_5_reg_9728;

assign sliding_window_buffer_samples_timestamp_V_5_3_d0 = sample_period_samples_3_timestamp_V_load_5_reg_9733;

assign sliding_window_buffer_samples_timestamp_V_5_4_d0 = sample_period_samples_4_timestamp_V_load_5_reg_9738;

assign sliding_window_buffer_samples_timestamp_V_5_5_d0 = sample_period_samples_5_timestamp_V_load_5_reg_9743;

assign sliding_window_buffer_samples_timestamp_V_5_6_d0 = sample_period_samples_6_timestamp_V_load_5_reg_9748;

assign sliding_window_buffer_samples_timestamp_V_5_7_d0 = sample_period_samples_7_timestamp_V_load_5_reg_9753;

assign sliding_window_buffer_samples_timestamp_V_5_8_d0 = sample_period_samples_8_timestamp_V_load_5_reg_9758;

assign sliding_window_buffer_samples_timestamp_V_5_9_d0 = sample_period_samples_9_timestamp_V_load_5_reg_9763;

assign trunc_ln61_fu_7861_p1 = grp_fu_7653_p2[5:0];

assign trunc_ln75_fu_7909_p1 = new_front_ptr_reg_10273[4:0];

assign trunc_ln87_fu_7349_p1 = ap_phi_mux_i_phi_fu_7318_p4[2:0];

assign zext_ln19_fu_7595_p1 = i_1_reg_7326;

assign zext_ln54_fu_7659_p0 = sliding_window_front_ptr_s_i;

assign zext_ln54_fu_7659_p1 = $unsigned(zext_ln54_fu_7659_p0);

assign zext_ln75_fu_7912_p1 = trunc_ln75_fu_7909_p1;

assign zext_ln87_fu_7353_p1 = trunc_ln87_fu_7349_p1;

always @ (posedge ap_clk) begin
    zext_ln19_reg_8187[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //LLSSineReconstruction_loadSlidingWindow
