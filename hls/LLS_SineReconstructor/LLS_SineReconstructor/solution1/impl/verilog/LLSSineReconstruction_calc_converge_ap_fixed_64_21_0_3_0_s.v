// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_calc_converge_ap_fixed_64_21_0_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        conv_strm6_din,
        conv_strm6_full_n,
        conv_strm6_write,
        alpha_dout,
        alpha_empty_n,
        alpha_read,
        beta_dout,
        beta_empty_n,
        beta_read,
        gamma_dout,
        gamma_empty_n,
        gamma_read
);

parameter    ap_ST_fsm_state1 = 127'd1;
parameter    ap_ST_fsm_state2 = 127'd2;
parameter    ap_ST_fsm_state3 = 127'd4;
parameter    ap_ST_fsm_state4 = 127'd8;
parameter    ap_ST_fsm_state5 = 127'd16;
parameter    ap_ST_fsm_state6 = 127'd32;
parameter    ap_ST_fsm_state7 = 127'd64;
parameter    ap_ST_fsm_state8 = 127'd128;
parameter    ap_ST_fsm_state9 = 127'd256;
parameter    ap_ST_fsm_state10 = 127'd512;
parameter    ap_ST_fsm_state11 = 127'd1024;
parameter    ap_ST_fsm_state12 = 127'd2048;
parameter    ap_ST_fsm_state13 = 127'd4096;
parameter    ap_ST_fsm_state14 = 127'd8192;
parameter    ap_ST_fsm_state15 = 127'd16384;
parameter    ap_ST_fsm_state16 = 127'd32768;
parameter    ap_ST_fsm_state17 = 127'd65536;
parameter    ap_ST_fsm_state18 = 127'd131072;
parameter    ap_ST_fsm_state19 = 127'd262144;
parameter    ap_ST_fsm_state20 = 127'd524288;
parameter    ap_ST_fsm_state21 = 127'd1048576;
parameter    ap_ST_fsm_state22 = 127'd2097152;
parameter    ap_ST_fsm_state23 = 127'd4194304;
parameter    ap_ST_fsm_state24 = 127'd8388608;
parameter    ap_ST_fsm_state25 = 127'd16777216;
parameter    ap_ST_fsm_state26 = 127'd33554432;
parameter    ap_ST_fsm_state27 = 127'd67108864;
parameter    ap_ST_fsm_state28 = 127'd134217728;
parameter    ap_ST_fsm_state29 = 127'd268435456;
parameter    ap_ST_fsm_state30 = 127'd536870912;
parameter    ap_ST_fsm_state31 = 127'd1073741824;
parameter    ap_ST_fsm_state32 = 127'd2147483648;
parameter    ap_ST_fsm_state33 = 127'd4294967296;
parameter    ap_ST_fsm_state34 = 127'd8589934592;
parameter    ap_ST_fsm_state35 = 127'd17179869184;
parameter    ap_ST_fsm_state36 = 127'd34359738368;
parameter    ap_ST_fsm_state37 = 127'd68719476736;
parameter    ap_ST_fsm_state38 = 127'd137438953472;
parameter    ap_ST_fsm_state39 = 127'd274877906944;
parameter    ap_ST_fsm_state40 = 127'd549755813888;
parameter    ap_ST_fsm_state41 = 127'd1099511627776;
parameter    ap_ST_fsm_state42 = 127'd2199023255552;
parameter    ap_ST_fsm_state43 = 127'd4398046511104;
parameter    ap_ST_fsm_state44 = 127'd8796093022208;
parameter    ap_ST_fsm_state45 = 127'd17592186044416;
parameter    ap_ST_fsm_state46 = 127'd35184372088832;
parameter    ap_ST_fsm_state47 = 127'd70368744177664;
parameter    ap_ST_fsm_state48 = 127'd140737488355328;
parameter    ap_ST_fsm_state49 = 127'd281474976710656;
parameter    ap_ST_fsm_state50 = 127'd562949953421312;
parameter    ap_ST_fsm_state51 = 127'd1125899906842624;
parameter    ap_ST_fsm_state52 = 127'd2251799813685248;
parameter    ap_ST_fsm_state53 = 127'd4503599627370496;
parameter    ap_ST_fsm_state54 = 127'd9007199254740992;
parameter    ap_ST_fsm_state55 = 127'd18014398509481984;
parameter    ap_ST_fsm_state56 = 127'd36028797018963968;
parameter    ap_ST_fsm_state57 = 127'd72057594037927936;
parameter    ap_ST_fsm_state58 = 127'd144115188075855872;
parameter    ap_ST_fsm_state59 = 127'd288230376151711744;
parameter    ap_ST_fsm_state60 = 127'd576460752303423488;
parameter    ap_ST_fsm_state61 = 127'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 127'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 127'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 127'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 127'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 127'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 127'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 127'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 127'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 127'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 127'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 127'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 127'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 127'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 127'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 127'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 127'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 127'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 127'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 127'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 127'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 127'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 127'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 127'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 127'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 127'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 127'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 127'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 127'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 127'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 127'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 127'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 127'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 127'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 127'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 127'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 127'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 127'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 127'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 127'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 127'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 127'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 127'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 127'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 127'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 127'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 127'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 127'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 127'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 127'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 127'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 127'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 127'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 127'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 127'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 127'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 127'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 127'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 127'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 127'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 127'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 127'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 127'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 127'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 127'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 127'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 127'd85070591730234615865843651857942052864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] conv_strm6_din;
input   conv_strm6_full_n;
output   conv_strm6_write;
input  [63:0] alpha_dout;
input   alpha_empty_n;
output   alpha_read;
input  [63:0] beta_dout;
input   beta_empty_n;
output   beta_read;
input  [63:0] gamma_dout;
input   gamma_empty_n;
output   gamma_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg conv_strm6_write;
reg alpha_read;
reg beta_read;
reg gamma_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [126:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    conv_strm6_blk_n;
wire    ap_CS_fsm_state127;
reg    alpha_blk_n;
reg    beta_blk_n;
reg    gamma_blk_n;
reg  signed [63:0] r_V_reg_1515;
reg  signed [63:0] beta_read_reg_1520;
reg   [63:0] p_Val2_s_reg_1525;
reg   [0:0] p_Result_203_reg_1532;
wire   [0:0] icmp_ln935_fu_194_p2;
reg   [0:0] icmp_ln935_reg_1538;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_V_37_fu_204_p3;
reg   [63:0] tmp_V_37_reg_1543;
wire   [31:0] sub_ln944_fu_232_p2;
reg   [31:0] sub_ln944_reg_1549;
wire   [0:0] icmp_ln954_fu_330_p2;
reg   [0:0] icmp_ln954_reg_1555;
wire   [0:0] select_ln954_fu_350_p3;
reg   [0:0] select_ln954_reg_1560;
wire   [7:0] trunc_ln943_fu_358_p1;
reg   [7:0] trunc_ln943_reg_1565;
wire   [126:0] trunc_ln1115_fu_374_p1;
reg   [126:0] trunc_ln1115_reg_1570;
wire   [0:0] icmp_ln935_1_fu_378_p2;
reg   [0:0] icmp_ln935_1_reg_1576;
reg   [0:0] p_Result_209_reg_1581;
wire   [30:0] data_V_fu_500_p3;
reg   [30:0] data_V_reg_1587;
wire    ap_CS_fsm_state3;
wire   [126:0] tmp_V_38_fu_512_p3;
reg   [126:0] tmp_V_38_reg_1592;
wire   [31:0] sub_ln944_1_fu_580_p2;
reg   [31:0] sub_ln944_1_reg_1598;
wire   [7:0] trunc_ln947_5_fu_586_p1;
reg   [7:0] trunc_ln947_5_reg_1605;
wire   [7:0] trunc_ln943_5_fu_590_p1;
reg   [7:0] trunc_ln943_5_reg_1610;
wire   [31:0] select_ln935_fu_856_p3;
reg   [31:0] select_ln935_reg_1615;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_181_p2;
reg   [31:0] v_assign_2_reg_1620;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg   [0:0] p_Result_207_reg_1631;
wire    ap_CS_fsm_state16;
wire   [51:0] trunc_ln565_fu_901_p1;
reg   [51:0] trunc_ln565_reg_1637;
wire   [0:0] icmp_ln571_fu_905_p2;
reg   [0:0] icmp_ln571_reg_1642;
wire   [10:0] trunc_ln575_fu_917_p1;
reg   [10:0] trunc_ln575_reg_1650;
wire   [0:0] icmp_ln581_fu_921_p2;
reg   [0:0] icmp_ln581_reg_1655;
wire   [0:0] icmp_ln582_fu_947_p2;
reg   [0:0] icmp_ln582_reg_1661;
wire   [0:0] icmp_ln585_fu_953_p2;
reg   [0:0] icmp_ln585_reg_1667;
wire   [0:0] icmp_ln603_fu_969_p2;
reg   [0:0] icmp_ln603_reg_1672;
wire   [5:0] trunc_ln586_fu_975_p1;
reg   [5:0] trunc_ln586_reg_1677;
wire   [0:0] icmp_ln591_fu_979_p2;
reg   [0:0] icmp_ln591_reg_1683;
reg   [0:0] p_Result_212_reg_1688;
wire   [51:0] trunc_ln565_4_fu_1015_p1;
reg   [51:0] trunc_ln565_4_reg_1694;
wire   [0:0] icmp_ln571_2_fu_1019_p2;
reg   [0:0] icmp_ln571_2_reg_1699;
wire   [10:0] trunc_ln575_4_fu_1031_p1;
reg   [10:0] trunc_ln575_4_reg_1707;
wire   [0:0] icmp_ln581_2_fu_1035_p2;
reg   [0:0] icmp_ln581_2_reg_1712;
wire   [0:0] icmp_ln582_2_fu_1061_p2;
reg   [0:0] icmp_ln582_2_reg_1718;
wire   [0:0] icmp_ln585_2_fu_1067_p2;
reg   [0:0] icmp_ln585_2_reg_1724;
wire   [0:0] icmp_ln603_4_fu_1083_p2;
reg   [0:0] icmp_ln603_4_reg_1729;
wire   [5:0] trunc_ln586_4_fu_1089_p1;
reg   [5:0] trunc_ln586_4_reg_1734;
wire   [0:0] icmp_ln591_2_fu_1093_p2;
reg   [0:0] icmp_ln591_2_reg_1740;
wire    ap_CS_fsm_state17;
reg    ap_block_state1;
wire   [31:0] grp_fu_175_p0;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_V_fu_199_p2;
reg   [63:0] p_Result_204_fu_210_p4;
reg   [63:0] tmp_i_fu_220_p3;
wire   [31:0] l_fu_228_p1;
wire   [31:0] lsb_index_fu_238_p2;
wire   [30:0] tmp_fu_244_p4;
wire   [6:0] trunc_ln947_fu_260_p1;
wire   [6:0] sub_ln947_fu_264_p2;
wire   [63:0] zext_ln947_fu_270_p1;
wire   [63:0] zext_ln949_fu_280_p1;
wire   [63:0] lshr_ln947_fu_274_p2;
wire   [63:0] shl_ln949_fu_284_p2;
wire   [63:0] or_ln949_7_fu_290_p2;
wire   [63:0] and_ln949_fu_296_p2;
wire   [0:0] tmp_136_fu_308_p3;
wire   [0:0] p_Result_205_fu_322_p3;
wire   [0:0] xor_ln949_fu_316_p2;
wire   [0:0] icmp_ln946_fu_254_p2;
wire   [0:0] icmp_ln949_fu_302_p2;
wire   [0:0] select_ln946_fu_342_p3;
wire   [0:0] and_ln949_2_fu_336_p2;
wire   [127:0] r_V_57_fu_368_p2;
wire   [31:0] sub_ln955_fu_392_p2;
wire   [63:0] zext_ln955_fu_397_p1;
wire   [31:0] add_ln954_fu_406_p2;
wire   [63:0] zext_ln954_fu_411_p1;
wire   [63:0] lshr_ln954_fu_415_p2;
wire   [63:0] shl_ln955_fu_401_p2;
wire   [63:0] m_fu_420_p3;
wire   [63:0] zext_ln961_fu_427_p1;
wire   [63:0] m_51_fu_430_p2;
wire   [62:0] m_58_fu_436_p4;
wire   [0:0] p_Result_s_fu_450_p3;
wire   [7:0] sub_ln964_fu_466_p2;
wire   [7:0] select_ln943_fu_458_p3;
wire   [7:0] add_ln964_fu_471_p2;
wire   [63:0] zext_ln962_fu_446_p1;
wire   [8:0] tmp_15_i_fu_477_p3;
wire   [63:0] p_Result_206_fu_484_p5;
wire   [30:0] LD_fu_496_p1;
wire   [126:0] tmp_V_35_fu_507_p2;
wire   [62:0] t_3_fu_518_p4;
wire   [63:0] zext_ln1064_fu_528_p1;
reg   [63:0] tmp_i_142_fu_532_p3;
wire   [63:0] x_fu_550_p1;
reg   [63:0] tmp_2_i_fu_554_p3;
wire   [31:0] trunc_ln1074_fu_562_p1;
wire   [31:0] NZeros_fu_540_p1;
wire   [0:0] hitNonZero_fu_544_p2;
wire   [31:0] NZeros_1_fu_566_p2;
wire   [31:0] NZeros_3_fu_572_p3;
wire   [31:0] lsb_index_8_fu_597_p2;
wire   [30:0] tmp_141_fu_602_p4;
wire   [7:0] sub_ln947_5_fu_618_p2;
wire   [127:0] zext_ln947_5_fu_623_p1;
wire   [127:0] zext_ln937_fu_594_p1;
wire   [127:0] lshr_ln947_5_fu_627_p2;
wire   [127:0] zext_ln949_1_fu_639_p1;
wire   [127:0] shl_ln949_1_fu_643_p2;
wire   [126:0] trunc_ln949_fu_649_p1;
wire   [127:0] p_Result_197_fu_633_p2;
wire   [126:0] trunc_ln949_1_fu_658_p1;
wire   [126:0] and_ln949_1_fu_653_p2;
wire   [126:0] or_ln949_2_fu_662_p2;
wire   [127:0] or_ln949_1_fu_668_p3;
wire   [0:0] tmp_142_fu_682_p3;
wire   [0:0] p_Result_210_fu_696_p3;
wire   [0:0] xor_ln949_5_fu_690_p2;
wire   [31:0] sub_ln955_1_fu_716_p2;
wire   [127:0] zext_ln955_1_fu_721_p1;
wire   [0:0] icmp_ln946_5_fu_612_p2;
wire   [0:0] icmp_ln949_2_fu_676_p2;
wire   [31:0] add_ln954_1_fu_739_p2;
wire   [127:0] zext_ln954_1_fu_744_p1;
wire   [0:0] icmp_ln954_1_fu_704_p2;
wire   [0:0] select_ln946_1_fu_731_p3;
wire   [0:0] and_ln949_3_fu_710_p2;
wire   [127:0] lshr_ln954_1_fu_748_p2;
wire   [127:0] shl_ln955_1_fu_725_p2;
wire   [63:0] trunc_ln954_fu_762_p1;
wire   [63:0] trunc_ln954_1_fu_766_p1;
wire   [0:0] select_ln954_2_fu_754_p3;
wire   [63:0] m_54_fu_770_p3;
wire   [63:0] zext_ln961_1_fu_778_p1;
wire   [63:0] m_55_fu_782_p2;
wire   [62:0] m_59_fu_788_p4;
wire   [0:0] p_Result_198_fu_802_p3;
wire   [7:0] sub_ln964_1_fu_818_p2;
wire   [7:0] select_ln943_5_fu_810_p3;
wire   [7:0] add_ln964_1_fu_823_p2;
wire   [63:0] zext_ln962_5_fu_798_p1;
wire   [8:0] tmp_18_i_fu_829_p3;
wire   [63:0] p_Result_211_fu_836_p5;
wire   [31:0] LD_16_fu_848_p1;
wire   [31:0] bitcast_ln744_fu_852_p1;
wire   [31:0] zext_ln368_fu_863_p1;
wire   [63:0] grp_fu_175_p1;
wire   [63:0] ireg_fu_871_p1;
wire   [10:0] exp_tmp_fu_887_p4;
wire   [62:0] trunc_ln555_fu_875_p1;
wire   [11:0] zext_ln455_fu_897_p1;
wire   [11:0] F2_fu_911_p2;
wire   [11:0] add_ln581_fu_927_p2;
wire   [11:0] sub_ln581_fu_933_p2;
wire   [11:0] sh_amt_fu_939_p3;
wire   [5:0] tmp_139_fu_959_p4;
wire   [63:0] grp_fu_178_p1;
wire   [63:0] ireg_4_fu_985_p1;
wire   [10:0] exp_tmp_2_fu_1001_p4;
wire   [62:0] trunc_ln555_4_fu_989_p1;
wire   [11:0] zext_ln455_2_fu_1011_p1;
wire   [11:0] F2_4_fu_1025_p2;
wire   [11:0] add_ln581_2_fu_1041_p2;
wire   [11:0] sub_ln581_2_fu_1047_p2;
wire   [11:0] sh_amt_4_fu_1053_p3;
wire   [5:0] tmp_145_fu_1073_p4;
wire   [52:0] p_Result_208_fu_1099_p3;
wire   [53:0] zext_ln569_fu_1106_p1;
wire   [53:0] man_V_23_fu_1110_p2;
wire  signed [53:0] man_V_26_fu_1116_p3;
wire   [53:0] zext_ln586_fu_1131_p1;
wire   [53:0] ashr_ln586_fu_1134_p2;
wire   [53:0] select_ln585_fu_1140_p3;
wire  signed [63:0] sext_ln583_fu_1123_p1;
wire   [63:0] zext_ln604_fu_1151_p1;
wire   [10:0] add_ln591_fu_1160_p2;
wire   [31:0] zext_ln591_fu_1165_p1;
wire   [0:0] p_Result_194_fu_1169_p3;
wire   [0:0] qb_fu_1177_p3;
wire  signed [54:0] sext_ln591_fu_1147_p1;
wire   [54:0] zext_ln415_fu_1183_p1;
wire   [0:0] xor_ln571_fu_1193_p2;
wire   [0:0] or_ln582_fu_1203_p2;
wire   [0:0] xor_ln582_fu_1207_p2;
wire   [0:0] or_ln581_fu_1218_p2;
wire   [0:0] xor_ln581_fu_1223_p2;
wire   [0:0] and_ln603_fu_1229_p2;
wire   [0:0] and_ln581_fu_1213_p2;
wire   [54:0] add_ln415_fu_1187_p2;
wire  signed [54:0] sext_ln585_fu_1127_p1;
wire   [54:0] select_ln571_8_fu_1239_p3;
wire   [0:0] and_ln582_fu_1198_p2;
wire   [0:0] or_ln571_fu_1234_p2;
wire   [0:0] or_ln571_6_fu_1251_p2;
wire   [52:0] p_Result_213_fu_1263_p3;
wire   [53:0] zext_ln569_2_fu_1270_p1;
wire   [53:0] man_V_24_fu_1274_p2;
wire  signed [53:0] man_V_fu_1280_p3;
wire   [53:0] zext_ln586_2_fu_1295_p1;
wire   [31:0] bitcast_ln702_fu_1304_p1;
wire   [0:0] tmp_146_fu_1307_p3;
wire  signed [63:0] sext_ln583_2_fu_1287_p1;
wire   [63:0] zext_ln604_2_fu_1323_p1;
wire   [53:0] ashr_ln586_2_fu_1298_p2;
wire   [53:0] trunc_ln588_cast_i_fu_1315_p3;
wire   [53:0] select_ln585_1_fu_1332_p3;
wire   [10:0] add_ln591_2_fu_1343_p2;
wire   [31:0] zext_ln591_2_fu_1348_p1;
wire   [0:0] p_Result_202_fu_1352_p3;
wire   [0:0] qb_4_fu_1360_p3;
wire  signed [54:0] sext_ln591_1_fu_1339_p1;
wire   [54:0] zext_ln415_13_fu_1366_p1;
wire   [0:0] xor_ln571_2_fu_1376_p2;
wire   [0:0] or_ln582_2_fu_1386_p2;
wire   [0:0] xor_ln582_2_fu_1390_p2;
wire   [0:0] or_ln581_2_fu_1401_p2;
wire   [0:0] xor_ln581_2_fu_1406_p2;
wire   [63:0] shl_ln604_1_fu_1326_p2;
wire   [0:0] and_ln603_2_fu_1412_p2;
wire   [0:0] and_ln581_2_fu_1396_p2;
wire   [54:0] add_ln415_12_fu_1370_p2;
wire  signed [54:0] sext_ln585_1_fu_1291_p1;
wire   [54:0] select_ln571_12_fu_1429_p3;
wire   [0:0] and_ln582_2_fu_1381_p2;
wire   [0:0] or_ln571_8_fu_1424_p2;
wire   [63:0] select_ln571_11_fu_1417_p3;
wire  signed [63:0] sext_ln571_2_fu_1437_p1;
wire   [0:0] or_ln571_9_fu_1441_p2;
wire   [0:0] or_ln571_10_fu_1455_p2;
wire   [63:0] select_ln571_13_fu_1447_p3;
wire   [63:0] shl_ln604_fu_1154_p2;
wire   [63:0] select_ln571_fu_1469_p3;
wire  signed [63:0] sext_ln571_fu_1247_p1;
wire   [0:0] or_ln571_7_fu_1257_p2;
wire   [63:0] select_ln571_22_fu_1476_p3;
wire   [63:0] select_ln571_23_fu_1484_p3;
wire  signed [63:0] select_ln571_14_fu_1461_p3;
wire   [106:0] grp_fu_1504_p0;
wire   [63:0] grp_fu_1504_p2;
reg    grp_fu_1504_ap_start;
wire    grp_fu_1504_ap_done;
reg    grp_fu_1504_ce;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
reg   [126:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 127'd1;
end

LLSSineReconstruction_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U547(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .ce(1'b1),
    .dout(grp_fu_175_p1)
);

LLSSineReconstruction_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U548(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_assign_2_reg_1620),
    .ce(1'b1),
    .dout(grp_fu_178_p1)
);

LLSSineReconstruction_fsqrt_32ns_32ns_32_10_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_10_no_dsp_1_U549(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(select_ln935_reg_1615),
    .ce(1'b1),
    .dout(grp_fu_181_p2)
);

LLSSineReconstruction_mul_64s_64s_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_64s_64s_128_1_1_U550(
    .din0(beta_read_reg_1520),
    .din1(r_V_reg_1515),
    .dout(r_V_57_fu_368_p2)
);

LLSSineReconstruction_sdiv_107ns_64s_64_111_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 111 ),
    .din0_WIDTH( 107 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sdiv_107ns_64s_64_111_seq_1_U551(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1504_ap_start),
    .done(grp_fu_1504_ap_done),
    .din0(grp_fu_1504_p0),
    .din1(select_ln571_14_fu_1461_p3),
    .ce(grp_fu_1504_ce),
    .dout(grp_fu_1504_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state127) & (conv_strm6_full_n == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        beta_read_reg_1520 <= beta_dout;
        p_Result_203_reg_1532 <= gamma_dout[32'd63];
        p_Val2_s_reg_1525 <= gamma_dout;
        r_V_reg_1515 <= alpha_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_V_reg_1587 <= data_V_fu_500_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        icmp_ln571_2_reg_1699 <= icmp_ln571_2_fu_1019_p2;
        icmp_ln571_reg_1642 <= icmp_ln571_fu_905_p2;
        icmp_ln581_2_reg_1712 <= icmp_ln581_2_fu_1035_p2;
        icmp_ln581_reg_1655 <= icmp_ln581_fu_921_p2;
        icmp_ln582_2_reg_1718 <= icmp_ln582_2_fu_1061_p2;
        icmp_ln582_reg_1661 <= icmp_ln582_fu_947_p2;
        icmp_ln585_2_reg_1724 <= icmp_ln585_2_fu_1067_p2;
        icmp_ln585_reg_1667 <= icmp_ln585_fu_953_p2;
        icmp_ln591_2_reg_1740 <= icmp_ln591_2_fu_1093_p2;
        icmp_ln591_reg_1683 <= icmp_ln591_fu_979_p2;
        icmp_ln603_4_reg_1729 <= icmp_ln603_4_fu_1083_p2;
        icmp_ln603_reg_1672 <= icmp_ln603_fu_969_p2;
        p_Result_207_reg_1631 <= ireg_fu_871_p1[32'd63];
        p_Result_212_reg_1688 <= ireg_4_fu_985_p1[32'd63];
        trunc_ln565_4_reg_1694 <= trunc_ln565_4_fu_1015_p1;
        trunc_ln565_reg_1637 <= trunc_ln565_fu_901_p1;
        trunc_ln575_4_reg_1707 <= trunc_ln575_4_fu_1031_p1;
        trunc_ln575_reg_1650 <= trunc_ln575_fu_917_p1;
        trunc_ln586_4_reg_1734 <= trunc_ln586_4_fu_1089_p1;
        trunc_ln586_reg_1677 <= trunc_ln586_fu_975_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln935_1_reg_1576 <= icmp_ln935_1_fu_378_p2;
        icmp_ln935_reg_1538 <= icmp_ln935_fu_194_p2;
        icmp_ln954_reg_1555 <= icmp_ln954_fu_330_p2;
        p_Result_209_reg_1581 <= r_V_57_fu_368_p2[32'd127];
        select_ln954_reg_1560 <= select_ln954_fu_350_p3;
        sub_ln944_reg_1549 <= sub_ln944_fu_232_p2;
        tmp_V_37_reg_1543 <= tmp_V_37_fu_204_p3;
        trunc_ln1115_reg_1570 <= trunc_ln1115_fu_374_p1;
        trunc_ln943_reg_1565 <= trunc_ln943_fu_358_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln935_reg_1615 <= select_ln935_fu_856_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_1_reg_1576 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_ln944_1_reg_1598 <= sub_ln944_1_fu_580_p2;
        tmp_V_38_reg_1592 <= tmp_V_38_fu_512_p3;
        trunc_ln943_5_reg_1610 <= trunc_ln943_5_fu_590_p1;
        trunc_ln947_5_reg_1605 <= trunc_ln947_5_fu_586_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v_assign_2_reg_1620 <= grp_fu_181_p2;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alpha_blk_n = alpha_empty_n;
    end else begin
        alpha_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alpha_read = 1'b1;
    end else begin
        alpha_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (conv_strm6_full_n == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (conv_strm6_full_n == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        beta_blk_n = beta_empty_n;
    end else begin
        beta_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        beta_read = 1'b1;
    end else begin
        beta_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        conv_strm6_blk_n = conv_strm6_full_n;
    end else begin
        conv_strm6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (conv_strm6_full_n == 1'b1))) begin
        conv_strm6_write = 1'b1;
    end else begin
        conv_strm6_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gamma_blk_n = gamma_empty_n;
    end else begin
        gamma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gamma_read = 1'b1;
    end else begin
        gamma_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1504_ap_start = 1'b1;
    end else begin
        grp_fu_1504_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_1504_ce = 1'b0;
    end else begin
        grp_fu_1504_ce = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            if (((1'b1 == ap_CS_fsm_state127) & (conv_strm6_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_4_fu_1025_p2 = (12'd1075 - zext_ln455_2_fu_1011_p1);

assign F2_fu_911_p2 = (12'd1075 - zext_ln455_fu_897_p1);

assign LD_16_fu_848_p1 = p_Result_211_fu_836_p5[31:0];

assign LD_fu_496_p1 = p_Result_206_fu_484_p5[30:0];

assign NZeros_1_fu_566_p2 = (trunc_ln1074_fu_562_p1 + NZeros_fu_540_p1);

assign NZeros_3_fu_572_p3 = ((hitNonZero_fu_544_p2[0:0] == 1'b1) ? NZeros_1_fu_566_p2 : NZeros_fu_540_p1);

assign NZeros_fu_540_p1 = tmp_i_142_fu_532_p3[31:0];

assign add_ln415_12_fu_1370_p2 = ($signed(sext_ln591_1_fu_1339_p1) + $signed(zext_ln415_13_fu_1366_p1));

assign add_ln415_fu_1187_p2 = ($signed(sext_ln591_fu_1147_p1) + $signed(zext_ln415_fu_1183_p1));

assign add_ln581_2_fu_1041_p2 = ($signed(F2_4_fu_1025_p2) + $signed(12'd4053));

assign add_ln581_fu_927_p2 = ($signed(F2_fu_911_p2) + $signed(12'd4053));

assign add_ln591_2_fu_1343_p2 = ($signed(trunc_ln575_4_reg_1707) + $signed(11'd2004));

assign add_ln591_fu_1160_p2 = ($signed(trunc_ln575_reg_1650) + $signed(11'd2004));

assign add_ln954_1_fu_739_p2 = ($signed(sub_ln944_1_reg_1598) + $signed(32'd4294967271));

assign add_ln954_fu_406_p2 = ($signed(sub_ln944_reg_1549) + $signed(32'd4294967271));

assign add_ln964_1_fu_823_p2 = (sub_ln964_1_fu_818_p2 + select_ln943_5_fu_810_p3);

assign add_ln964_fu_471_p2 = (sub_ln964_fu_466_p2 + select_ln943_fu_458_p3);

assign and_ln581_2_fu_1396_p2 = (xor_ln582_2_fu_1390_p2 & icmp_ln581_2_reg_1712);

assign and_ln581_fu_1213_p2 = (xor_ln582_fu_1207_p2 & icmp_ln581_reg_1655);

assign and_ln582_2_fu_1381_p2 = (xor_ln571_2_fu_1376_p2 & icmp_ln582_2_reg_1718);

assign and_ln582_fu_1198_p2 = (xor_ln571_fu_1193_p2 & icmp_ln582_reg_1661);

assign and_ln603_2_fu_1412_p2 = (xor_ln581_2_fu_1406_p2 & icmp_ln603_4_reg_1729);

assign and_ln603_fu_1229_p2 = (xor_ln581_fu_1223_p2 & icmp_ln603_reg_1672);

assign and_ln949_1_fu_653_p2 = (trunc_ln949_fu_649_p1 & tmp_V_38_reg_1592);

assign and_ln949_2_fu_336_p2 = (xor_ln949_fu_316_p2 & p_Result_205_fu_322_p3);

assign and_ln949_3_fu_710_p2 = (xor_ln949_5_fu_690_p2 & p_Result_210_fu_696_p3);

assign and_ln949_fu_296_p2 = (tmp_V_37_fu_204_p3 & or_ln949_7_fu_290_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ashr_ln586_2_fu_1298_p2 = $signed(man_V_fu_1280_p3) >>> zext_ln586_2_fu_1295_p1;

assign ashr_ln586_fu_1134_p2 = $signed(man_V_26_fu_1116_p3) >>> zext_ln586_fu_1131_p1;

assign bitcast_ln702_fu_1304_p1 = v_assign_2_reg_1620;

assign bitcast_ln744_fu_852_p1 = LD_16_fu_848_p1;

assign conv_strm6_din = grp_fu_1504_p2[63:0];

assign data_V_fu_500_p3 = ((icmp_ln935_reg_1538[0:0] == 1'b1) ? 31'd0 : LD_fu_496_p1);

assign exp_tmp_2_fu_1001_p4 = {{ireg_4_fu_985_p1[62:52]}};

assign exp_tmp_fu_887_p4 = {{ireg_fu_871_p1[62:52]}};

assign grp_fu_1504_p0 = {{select_ln571_23_fu_1484_p3}, {43'd0}};

assign grp_fu_175_p0 = zext_ln368_fu_863_p1;

assign hitNonZero_fu_544_p2 = ((t_3_fu_518_p4 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_1019_p2 = ((trunc_ln555_4_fu_989_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_905_p2 = ((trunc_ln555_fu_875_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_1035_p2 = (($signed(F2_4_fu_1025_p2) > $signed(12'd43)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_921_p2 = (($signed(F2_fu_911_p2) > $signed(12'd43)) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_1061_p2 = ((F2_4_fu_1025_p2 == 12'd43) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_947_p2 = ((F2_fu_911_p2 == 12'd43) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_1067_p2 = ((sh_amt_4_fu_1053_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_953_p2 = ((sh_amt_fu_939_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln591_2_fu_1093_p2 = (($signed(add_ln581_2_fu_1041_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_979_p2 = (($signed(add_ln581_fu_927_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln603_4_fu_1083_p2 = ((tmp_145_fu_1073_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_969_p2 = ((tmp_139_fu_959_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_378_p2 = ((r_V_57_fu_368_p2 == 128'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_194_p2 = ((p_Val2_s_reg_1525 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_5_fu_612_p2 = (($signed(tmp_141_fu_602_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_254_p2 = (($signed(tmp_fu_244_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_2_fu_676_p2 = ((or_ln949_1_fu_668_p3 != 128'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_302_p2 = ((and_ln949_fu_296_p2 != 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln954_1_fu_704_p2 = (($signed(lsb_index_8_fu_597_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_330_p2 = (($signed(lsb_index_fu_238_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_4_fu_985_p1 = grp_fu_178_p1;

assign ireg_fu_871_p1 = grp_fu_175_p1;

assign l_fu_228_p1 = tmp_i_fu_220_p3[31:0];

assign lsb_index_8_fu_597_p2 = ($signed(sub_ln944_1_reg_1598) + $signed(32'd4294967272));

assign lsb_index_fu_238_p2 = ($signed(sub_ln944_fu_232_p2) + $signed(32'd4294967272));

assign lshr_ln947_5_fu_627_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln947_5_fu_623_p1;

assign lshr_ln947_fu_274_p2 = 64'd18446744073709551615 >> zext_ln947_fu_270_p1;

assign lshr_ln954_1_fu_748_p2 = zext_ln937_fu_594_p1 >> zext_ln954_1_fu_744_p1;

assign lshr_ln954_fu_415_p2 = tmp_V_37_reg_1543 >> zext_ln954_fu_411_p1;

assign m_51_fu_430_p2 = (m_fu_420_p3 + zext_ln961_fu_427_p1);

assign m_54_fu_770_p3 = ((icmp_ln954_1_fu_704_p2[0:0] == 1'b1) ? trunc_ln954_fu_762_p1 : trunc_ln954_1_fu_766_p1);

assign m_55_fu_782_p2 = (m_54_fu_770_p3 + zext_ln961_1_fu_778_p1);

assign m_58_fu_436_p4 = {{m_51_fu_430_p2[63:1]}};

assign m_59_fu_788_p4 = {{m_55_fu_782_p2[63:1]}};

assign m_fu_420_p3 = ((icmp_ln954_reg_1555[0:0] == 1'b1) ? lshr_ln954_fu_415_p2 : shl_ln955_fu_401_p2);

assign man_V_23_fu_1110_p2 = (54'd0 - zext_ln569_fu_1106_p1);

assign man_V_24_fu_1274_p2 = (54'd0 - zext_ln569_2_fu_1270_p1);

assign man_V_26_fu_1116_p3 = ((p_Result_207_reg_1631[0:0] == 1'b1) ? man_V_23_fu_1110_p2 : zext_ln569_fu_1106_p1);

assign man_V_fu_1280_p3 = ((p_Result_212_reg_1688[0:0] == 1'b1) ? man_V_24_fu_1274_p2 : zext_ln569_2_fu_1270_p1);

assign or_ln571_10_fu_1455_p2 = (or_ln571_9_fu_1441_p2 | or_ln571_8_fu_1424_p2);

assign or_ln571_6_fu_1251_p2 = (and_ln582_fu_1198_p2 | and_ln581_fu_1213_p2);

assign or_ln571_7_fu_1257_p2 = (or_ln571_fu_1234_p2 | or_ln571_6_fu_1251_p2);

assign or_ln571_8_fu_1424_p2 = (icmp_ln571_2_reg_1699 | and_ln603_2_fu_1412_p2);

assign or_ln571_9_fu_1441_p2 = (and_ln582_2_fu_1381_p2 | and_ln581_2_fu_1396_p2);

assign or_ln571_fu_1234_p2 = (icmp_ln571_reg_1642 | and_ln603_fu_1229_p2);

assign or_ln581_2_fu_1401_p2 = (or_ln582_2_fu_1386_p2 | icmp_ln581_2_reg_1712);

assign or_ln581_fu_1218_p2 = (or_ln582_fu_1203_p2 | icmp_ln581_reg_1655);

assign or_ln582_2_fu_1386_p2 = (icmp_ln582_2_reg_1718 | icmp_ln571_2_reg_1699);

assign or_ln582_fu_1203_p2 = (icmp_ln582_reg_1661 | icmp_ln571_reg_1642);

assign or_ln949_1_fu_668_p3 = {{1'd0}, {or_ln949_2_fu_662_p2}};

assign or_ln949_2_fu_662_p2 = (trunc_ln949_1_fu_658_p1 | and_ln949_1_fu_653_p2);

assign or_ln949_7_fu_290_p2 = (shl_ln949_fu_284_p2 | lshr_ln947_fu_274_p2);

assign p_Result_194_fu_1169_p3 = man_V_26_fu_1116_p3[zext_ln591_fu_1165_p1];

assign p_Result_197_fu_633_p2 = (zext_ln937_fu_594_p1 & lshr_ln947_5_fu_627_p2);

assign p_Result_198_fu_802_p3 = m_55_fu_782_p2[32'd25];

assign p_Result_202_fu_1352_p3 = man_V_fu_1280_p3[zext_ln591_2_fu_1348_p1];

integer ap_tvar_int_0;

always @ (tmp_V_37_fu_204_p3) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            p_Result_204_fu_210_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_204_fu_210_p4[ap_tvar_int_0] = tmp_V_37_fu_204_p3[63 - ap_tvar_int_0];
        end
    end
end

assign p_Result_205_fu_322_p3 = tmp_V_37_fu_204_p3[lsb_index_fu_238_p2];

assign p_Result_206_fu_484_p5 = {{zext_ln962_fu_446_p1[63:32]}, {tmp_15_i_fu_477_p3}, {zext_ln962_fu_446_p1[22:0]}};

assign p_Result_208_fu_1099_p3 = {{1'd1}, {trunc_ln565_reg_1637}};

assign p_Result_210_fu_696_p3 = zext_ln937_fu_594_p1[lsb_index_8_fu_597_p2];

assign p_Result_211_fu_836_p5 = {{zext_ln962_5_fu_798_p1[63:32]}, {tmp_18_i_fu_829_p3}, {zext_ln962_5_fu_798_p1[22:0]}};

assign p_Result_213_fu_1263_p3 = {{1'd1}, {trunc_ln565_4_reg_1694}};

assign p_Result_s_fu_450_p3 = m_51_fu_430_p2[32'd25];

assign qb_4_fu_1360_p3 = ((icmp_ln591_2_reg_1740[0:0] == 1'b1) ? p_Result_212_reg_1688 : p_Result_202_fu_1352_p3);

assign qb_fu_1177_p3 = ((icmp_ln591_reg_1683[0:0] == 1'b1) ? p_Result_207_reg_1631 : p_Result_194_fu_1169_p3);

assign select_ln571_11_fu_1417_p3 = ((icmp_ln571_2_reg_1699[0:0] == 1'b1) ? 64'd0 : shl_ln604_1_fu_1326_p2);

assign select_ln571_12_fu_1429_p3 = ((and_ln581_2_fu_1396_p2[0:0] == 1'b1) ? add_ln415_12_fu_1370_p2 : sext_ln585_1_fu_1291_p1);

assign select_ln571_13_fu_1447_p3 = ((or_ln571_8_fu_1424_p2[0:0] == 1'b1) ? select_ln571_11_fu_1417_p3 : sext_ln571_2_fu_1437_p1);

assign select_ln571_14_fu_1461_p3 = ((or_ln571_10_fu_1455_p2[0:0] == 1'b1) ? select_ln571_13_fu_1447_p3 : 64'd0);

assign select_ln571_22_fu_1476_p3 = ((or_ln571_fu_1234_p2[0:0] == 1'b1) ? select_ln571_fu_1469_p3 : sext_ln571_fu_1247_p1);

assign select_ln571_23_fu_1484_p3 = ((or_ln571_7_fu_1257_p2[0:0] == 1'b1) ? select_ln571_22_fu_1476_p3 : 64'd0);

assign select_ln571_8_fu_1239_p3 = ((and_ln581_fu_1213_p2[0:0] == 1'b1) ? add_ln415_fu_1187_p2 : sext_ln585_fu_1127_p1);

assign select_ln571_fu_1469_p3 = ((icmp_ln571_reg_1642[0:0] == 1'b1) ? 64'd0 : shl_ln604_fu_1154_p2);

assign select_ln585_1_fu_1332_p3 = ((icmp_ln585_2_reg_1724[0:0] == 1'b1) ? ashr_ln586_2_fu_1298_p2 : trunc_ln588_cast_i_fu_1315_p3);

assign select_ln585_fu_1140_p3 = ((icmp_ln585_reg_1667[0:0] == 1'b1) ? ashr_ln586_fu_1134_p2 : 54'd0);

assign select_ln935_fu_856_p3 = ((icmp_ln935_1_reg_1576[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_852_p1);

assign select_ln943_5_fu_810_p3 = ((p_Result_198_fu_802_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln943_fu_458_p3 = ((p_Result_s_fu_450_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_1_fu_731_p3 = ((icmp_ln946_5_fu_612_p2[0:0] == 1'b1) ? icmp_ln949_2_fu_676_p2 : p_Result_210_fu_696_p3);

assign select_ln946_fu_342_p3 = ((icmp_ln946_fu_254_p2[0:0] == 1'b1) ? icmp_ln949_fu_302_p2 : p_Result_205_fu_322_p3);

assign select_ln954_2_fu_754_p3 = ((icmp_ln954_1_fu_704_p2[0:0] == 1'b1) ? select_ln946_1_fu_731_p3 : and_ln949_3_fu_710_p2);

assign select_ln954_fu_350_p3 = ((icmp_ln954_fu_330_p2[0:0] == 1'b1) ? select_ln946_fu_342_p3 : and_ln949_2_fu_336_p2);

assign sext_ln571_2_fu_1437_p1 = $signed(select_ln571_12_fu_1429_p3);

assign sext_ln571_fu_1247_p1 = $signed(select_ln571_8_fu_1239_p3);

assign sext_ln583_2_fu_1287_p1 = man_V_fu_1280_p3;

assign sext_ln583_fu_1123_p1 = man_V_26_fu_1116_p3;

assign sext_ln585_1_fu_1291_p1 = man_V_fu_1280_p3;

assign sext_ln585_fu_1127_p1 = man_V_26_fu_1116_p3;

assign sext_ln591_1_fu_1339_p1 = $signed(select_ln585_1_fu_1332_p3);

assign sext_ln591_fu_1147_p1 = $signed(select_ln585_fu_1140_p3);

assign sh_amt_4_fu_1053_p3 = ((icmp_ln581_2_fu_1035_p2[0:0] == 1'b1) ? add_ln581_2_fu_1041_p2 : sub_ln581_2_fu_1047_p2);

assign sh_amt_fu_939_p3 = ((icmp_ln581_fu_921_p2[0:0] == 1'b1) ? add_ln581_fu_927_p2 : sub_ln581_fu_933_p2);

assign shl_ln604_1_fu_1326_p2 = sext_ln583_2_fu_1287_p1 << zext_ln604_2_fu_1323_p1;

assign shl_ln604_fu_1154_p2 = sext_ln583_fu_1123_p1 << zext_ln604_fu_1151_p1;

assign shl_ln949_1_fu_643_p2 = 128'd1 << zext_ln949_1_fu_639_p1;

assign shl_ln949_fu_284_p2 = 64'd1 << zext_ln949_fu_280_p1;

assign shl_ln955_1_fu_725_p2 = zext_ln937_fu_594_p1 << zext_ln955_1_fu_721_p1;

assign shl_ln955_fu_401_p2 = tmp_V_37_reg_1543 << zext_ln955_fu_397_p1;

assign sub_ln581_2_fu_1047_p2 = (12'd43 - F2_4_fu_1025_p2);

assign sub_ln581_fu_933_p2 = (12'd43 - F2_fu_911_p2);

assign sub_ln944_1_fu_580_p2 = (32'd128 - NZeros_3_fu_572_p3);

assign sub_ln944_fu_232_p2 = (32'd64 - l_fu_228_p1);

assign sub_ln947_5_fu_618_p2 = ($signed(8'd153) - $signed(trunc_ln947_5_reg_1605));

assign sub_ln947_fu_264_p2 = ($signed(7'd89) - $signed(trunc_ln947_fu_260_p1));

assign sub_ln955_1_fu_716_p2 = (32'd25 - sub_ln944_1_reg_1598);

assign sub_ln955_fu_392_p2 = (32'd25 - sub_ln944_reg_1549);

assign sub_ln964_1_fu_818_p2 = (8'd42 - trunc_ln943_5_reg_1610);

assign sub_ln964_fu_466_p2 = (8'd21 - trunc_ln943_reg_1565);

assign t_3_fu_518_p4 = {{tmp_V_38_fu_512_p3[126:64]}};

assign tmp_136_fu_308_p3 = lsb_index_fu_238_p2[32'd31];

assign tmp_139_fu_959_p4 = {{sh_amt_fu_939_p3[11:6]}};

assign tmp_141_fu_602_p4 = {{lsb_index_8_fu_597_p2[31:1]}};

assign tmp_142_fu_682_p3 = lsb_index_8_fu_597_p2[32'd31];

assign tmp_145_fu_1073_p4 = {{sh_amt_4_fu_1053_p3[11:6]}};

assign tmp_146_fu_1307_p3 = bitcast_ln702_fu_1304_p1[32'd31];

assign tmp_15_i_fu_477_p3 = {{p_Result_203_reg_1532}, {add_ln964_fu_471_p2}};

assign tmp_18_i_fu_829_p3 = {{p_Result_209_reg_1581}, {add_ln964_1_fu_823_p2}};

always @ (x_fu_550_p1) begin
    if (x_fu_550_p1[63] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd0;
    end else if (x_fu_550_p1[62] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd1;
    end else if (x_fu_550_p1[61] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd2;
    end else if (x_fu_550_p1[60] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd3;
    end else if (x_fu_550_p1[59] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd4;
    end else if (x_fu_550_p1[58] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd5;
    end else if (x_fu_550_p1[57] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd6;
    end else if (x_fu_550_p1[56] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd7;
    end else if (x_fu_550_p1[55] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd8;
    end else if (x_fu_550_p1[54] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd9;
    end else if (x_fu_550_p1[53] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd10;
    end else if (x_fu_550_p1[52] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd11;
    end else if (x_fu_550_p1[51] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd12;
    end else if (x_fu_550_p1[50] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd13;
    end else if (x_fu_550_p1[49] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd14;
    end else if (x_fu_550_p1[48] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd15;
    end else if (x_fu_550_p1[47] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd16;
    end else if (x_fu_550_p1[46] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd17;
    end else if (x_fu_550_p1[45] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd18;
    end else if (x_fu_550_p1[44] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd19;
    end else if (x_fu_550_p1[43] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd20;
    end else if (x_fu_550_p1[42] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd21;
    end else if (x_fu_550_p1[41] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd22;
    end else if (x_fu_550_p1[40] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd23;
    end else if (x_fu_550_p1[39] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd24;
    end else if (x_fu_550_p1[38] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd25;
    end else if (x_fu_550_p1[37] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd26;
    end else if (x_fu_550_p1[36] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd27;
    end else if (x_fu_550_p1[35] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd28;
    end else if (x_fu_550_p1[34] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd29;
    end else if (x_fu_550_p1[33] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd30;
    end else if (x_fu_550_p1[32] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd31;
    end else if (x_fu_550_p1[31] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd32;
    end else if (x_fu_550_p1[30] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd33;
    end else if (x_fu_550_p1[29] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd34;
    end else if (x_fu_550_p1[28] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd35;
    end else if (x_fu_550_p1[27] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd36;
    end else if (x_fu_550_p1[26] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd37;
    end else if (x_fu_550_p1[25] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd38;
    end else if (x_fu_550_p1[24] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd39;
    end else if (x_fu_550_p1[23] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd40;
    end else if (x_fu_550_p1[22] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd41;
    end else if (x_fu_550_p1[21] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd42;
    end else if (x_fu_550_p1[20] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd43;
    end else if (x_fu_550_p1[19] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd44;
    end else if (x_fu_550_p1[18] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd45;
    end else if (x_fu_550_p1[17] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd46;
    end else if (x_fu_550_p1[16] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd47;
    end else if (x_fu_550_p1[15] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd48;
    end else if (x_fu_550_p1[14] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd49;
    end else if (x_fu_550_p1[13] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd50;
    end else if (x_fu_550_p1[12] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd51;
    end else if (x_fu_550_p1[11] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd52;
    end else if (x_fu_550_p1[10] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd53;
    end else if (x_fu_550_p1[9] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd54;
    end else if (x_fu_550_p1[8] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd55;
    end else if (x_fu_550_p1[7] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd56;
    end else if (x_fu_550_p1[6] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd57;
    end else if (x_fu_550_p1[5] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd58;
    end else if (x_fu_550_p1[4] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd59;
    end else if (x_fu_550_p1[3] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd60;
    end else if (x_fu_550_p1[2] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd61;
    end else if (x_fu_550_p1[1] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd62;
    end else if (x_fu_550_p1[0] == 1'b1) begin
        tmp_2_i_fu_554_p3 = 64'd63;
    end else begin
        tmp_2_i_fu_554_p3 = 64'd64;
    end
end

assign tmp_V_35_fu_507_p2 = (127'd0 - trunc_ln1115_reg_1570);

assign tmp_V_37_fu_204_p3 = ((p_Result_203_reg_1532[0:0] == 1'b1) ? tmp_V_fu_199_p2 : p_Val2_s_reg_1525);

assign tmp_V_38_fu_512_p3 = ((p_Result_209_reg_1581[0:0] == 1'b1) ? tmp_V_35_fu_507_p2 : trunc_ln1115_reg_1570);

assign tmp_V_fu_199_p2 = (64'd0 - p_Val2_s_reg_1525);

assign tmp_fu_244_p4 = {{lsb_index_fu_238_p2[31:1]}};

always @ (zext_ln1064_fu_528_p1) begin
    if (zext_ln1064_fu_528_p1[63] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd0;
    end else if (zext_ln1064_fu_528_p1[62] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd1;
    end else if (zext_ln1064_fu_528_p1[61] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd2;
    end else if (zext_ln1064_fu_528_p1[60] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd3;
    end else if (zext_ln1064_fu_528_p1[59] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd4;
    end else if (zext_ln1064_fu_528_p1[58] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd5;
    end else if (zext_ln1064_fu_528_p1[57] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd6;
    end else if (zext_ln1064_fu_528_p1[56] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd7;
    end else if (zext_ln1064_fu_528_p1[55] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd8;
    end else if (zext_ln1064_fu_528_p1[54] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd9;
    end else if (zext_ln1064_fu_528_p1[53] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd10;
    end else if (zext_ln1064_fu_528_p1[52] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd11;
    end else if (zext_ln1064_fu_528_p1[51] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd12;
    end else if (zext_ln1064_fu_528_p1[50] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd13;
    end else if (zext_ln1064_fu_528_p1[49] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd14;
    end else if (zext_ln1064_fu_528_p1[48] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd15;
    end else if (zext_ln1064_fu_528_p1[47] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd16;
    end else if (zext_ln1064_fu_528_p1[46] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd17;
    end else if (zext_ln1064_fu_528_p1[45] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd18;
    end else if (zext_ln1064_fu_528_p1[44] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd19;
    end else if (zext_ln1064_fu_528_p1[43] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd20;
    end else if (zext_ln1064_fu_528_p1[42] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd21;
    end else if (zext_ln1064_fu_528_p1[41] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd22;
    end else if (zext_ln1064_fu_528_p1[40] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd23;
    end else if (zext_ln1064_fu_528_p1[39] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd24;
    end else if (zext_ln1064_fu_528_p1[38] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd25;
    end else if (zext_ln1064_fu_528_p1[37] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd26;
    end else if (zext_ln1064_fu_528_p1[36] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd27;
    end else if (zext_ln1064_fu_528_p1[35] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd28;
    end else if (zext_ln1064_fu_528_p1[34] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd29;
    end else if (zext_ln1064_fu_528_p1[33] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd30;
    end else if (zext_ln1064_fu_528_p1[32] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd31;
    end else if (zext_ln1064_fu_528_p1[31] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd32;
    end else if (zext_ln1064_fu_528_p1[30] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd33;
    end else if (zext_ln1064_fu_528_p1[29] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd34;
    end else if (zext_ln1064_fu_528_p1[28] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd35;
    end else if (zext_ln1064_fu_528_p1[27] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd36;
    end else if (zext_ln1064_fu_528_p1[26] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd37;
    end else if (zext_ln1064_fu_528_p1[25] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd38;
    end else if (zext_ln1064_fu_528_p1[24] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd39;
    end else if (zext_ln1064_fu_528_p1[23] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd40;
    end else if (zext_ln1064_fu_528_p1[22] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd41;
    end else if (zext_ln1064_fu_528_p1[21] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd42;
    end else if (zext_ln1064_fu_528_p1[20] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd43;
    end else if (zext_ln1064_fu_528_p1[19] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd44;
    end else if (zext_ln1064_fu_528_p1[18] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd45;
    end else if (zext_ln1064_fu_528_p1[17] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd46;
    end else if (zext_ln1064_fu_528_p1[16] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd47;
    end else if (zext_ln1064_fu_528_p1[15] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd48;
    end else if (zext_ln1064_fu_528_p1[14] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd49;
    end else if (zext_ln1064_fu_528_p1[13] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd50;
    end else if (zext_ln1064_fu_528_p1[12] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd51;
    end else if (zext_ln1064_fu_528_p1[11] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd52;
    end else if (zext_ln1064_fu_528_p1[10] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd53;
    end else if (zext_ln1064_fu_528_p1[9] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd54;
    end else if (zext_ln1064_fu_528_p1[8] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd55;
    end else if (zext_ln1064_fu_528_p1[7] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd56;
    end else if (zext_ln1064_fu_528_p1[6] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd57;
    end else if (zext_ln1064_fu_528_p1[5] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd58;
    end else if (zext_ln1064_fu_528_p1[4] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd59;
    end else if (zext_ln1064_fu_528_p1[3] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd60;
    end else if (zext_ln1064_fu_528_p1[2] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd61;
    end else if (zext_ln1064_fu_528_p1[1] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd62;
    end else if (zext_ln1064_fu_528_p1[0] == 1'b1) begin
        tmp_i_142_fu_532_p3 = 64'd63;
    end else begin
        tmp_i_142_fu_532_p3 = 64'd64;
    end
end


always @ (p_Result_204_fu_210_p4) begin
    if (p_Result_204_fu_210_p4[0] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd0;
    end else if (p_Result_204_fu_210_p4[1] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd1;
    end else if (p_Result_204_fu_210_p4[2] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd2;
    end else if (p_Result_204_fu_210_p4[3] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd3;
    end else if (p_Result_204_fu_210_p4[4] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd4;
    end else if (p_Result_204_fu_210_p4[5] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd5;
    end else if (p_Result_204_fu_210_p4[6] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd6;
    end else if (p_Result_204_fu_210_p4[7] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd7;
    end else if (p_Result_204_fu_210_p4[8] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd8;
    end else if (p_Result_204_fu_210_p4[9] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd9;
    end else if (p_Result_204_fu_210_p4[10] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd10;
    end else if (p_Result_204_fu_210_p4[11] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd11;
    end else if (p_Result_204_fu_210_p4[12] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd12;
    end else if (p_Result_204_fu_210_p4[13] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd13;
    end else if (p_Result_204_fu_210_p4[14] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd14;
    end else if (p_Result_204_fu_210_p4[15] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd15;
    end else if (p_Result_204_fu_210_p4[16] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd16;
    end else if (p_Result_204_fu_210_p4[17] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd17;
    end else if (p_Result_204_fu_210_p4[18] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd18;
    end else if (p_Result_204_fu_210_p4[19] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd19;
    end else if (p_Result_204_fu_210_p4[20] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd20;
    end else if (p_Result_204_fu_210_p4[21] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd21;
    end else if (p_Result_204_fu_210_p4[22] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd22;
    end else if (p_Result_204_fu_210_p4[23] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd23;
    end else if (p_Result_204_fu_210_p4[24] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd24;
    end else if (p_Result_204_fu_210_p4[25] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd25;
    end else if (p_Result_204_fu_210_p4[26] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd26;
    end else if (p_Result_204_fu_210_p4[27] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd27;
    end else if (p_Result_204_fu_210_p4[28] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd28;
    end else if (p_Result_204_fu_210_p4[29] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd29;
    end else if (p_Result_204_fu_210_p4[30] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd30;
    end else if (p_Result_204_fu_210_p4[31] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd31;
    end else if (p_Result_204_fu_210_p4[32] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd32;
    end else if (p_Result_204_fu_210_p4[33] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd33;
    end else if (p_Result_204_fu_210_p4[34] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd34;
    end else if (p_Result_204_fu_210_p4[35] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd35;
    end else if (p_Result_204_fu_210_p4[36] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd36;
    end else if (p_Result_204_fu_210_p4[37] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd37;
    end else if (p_Result_204_fu_210_p4[38] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd38;
    end else if (p_Result_204_fu_210_p4[39] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd39;
    end else if (p_Result_204_fu_210_p4[40] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd40;
    end else if (p_Result_204_fu_210_p4[41] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd41;
    end else if (p_Result_204_fu_210_p4[42] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd42;
    end else if (p_Result_204_fu_210_p4[43] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd43;
    end else if (p_Result_204_fu_210_p4[44] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd44;
    end else if (p_Result_204_fu_210_p4[45] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd45;
    end else if (p_Result_204_fu_210_p4[46] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd46;
    end else if (p_Result_204_fu_210_p4[47] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd47;
    end else if (p_Result_204_fu_210_p4[48] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd48;
    end else if (p_Result_204_fu_210_p4[49] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd49;
    end else if (p_Result_204_fu_210_p4[50] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd50;
    end else if (p_Result_204_fu_210_p4[51] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd51;
    end else if (p_Result_204_fu_210_p4[52] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd52;
    end else if (p_Result_204_fu_210_p4[53] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd53;
    end else if (p_Result_204_fu_210_p4[54] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd54;
    end else if (p_Result_204_fu_210_p4[55] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd55;
    end else if (p_Result_204_fu_210_p4[56] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd56;
    end else if (p_Result_204_fu_210_p4[57] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd57;
    end else if (p_Result_204_fu_210_p4[58] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd58;
    end else if (p_Result_204_fu_210_p4[59] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd59;
    end else if (p_Result_204_fu_210_p4[60] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd60;
    end else if (p_Result_204_fu_210_p4[61] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd61;
    end else if (p_Result_204_fu_210_p4[62] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd62;
    end else if (p_Result_204_fu_210_p4[63] == 1'b1) begin
        tmp_i_fu_220_p3 = 64'd63;
    end else begin
        tmp_i_fu_220_p3 = 64'd64;
    end
end

assign trunc_ln1074_fu_562_p1 = tmp_2_i_fu_554_p3[31:0];

assign trunc_ln1115_fu_374_p1 = r_V_57_fu_368_p2[126:0];

assign trunc_ln555_4_fu_989_p1 = ireg_4_fu_985_p1[62:0];

assign trunc_ln555_fu_875_p1 = ireg_fu_871_p1[62:0];

assign trunc_ln565_4_fu_1015_p1 = ireg_4_fu_985_p1[51:0];

assign trunc_ln565_fu_901_p1 = ireg_fu_871_p1[51:0];

assign trunc_ln575_4_fu_1031_p1 = F2_4_fu_1025_p2[10:0];

assign trunc_ln575_fu_917_p1 = F2_fu_911_p2[10:0];

assign trunc_ln586_4_fu_1089_p1 = sh_amt_4_fu_1053_p3[5:0];

assign trunc_ln586_fu_975_p1 = sh_amt_fu_939_p3[5:0];

assign trunc_ln588_cast_i_fu_1315_p3 = ((tmp_146_fu_1307_p3[0:0] == 1'b1) ? 54'd18014398509481983 : 54'd0);

assign trunc_ln943_5_fu_590_p1 = NZeros_3_fu_572_p3[7:0];

assign trunc_ln943_fu_358_p1 = tmp_i_fu_220_p3[7:0];

assign trunc_ln947_5_fu_586_p1 = sub_ln944_1_fu_580_p2[7:0];

assign trunc_ln947_fu_260_p1 = sub_ln944_fu_232_p2[6:0];

assign trunc_ln949_1_fu_658_p1 = p_Result_197_fu_633_p2[126:0];

assign trunc_ln949_fu_649_p1 = shl_ln949_1_fu_643_p2[126:0];

assign trunc_ln954_1_fu_766_p1 = shl_ln955_1_fu_725_p2[63:0];

assign trunc_ln954_fu_762_p1 = lshr_ln954_1_fu_748_p2[63:0];

assign x_fu_550_p1 = tmp_V_38_fu_512_p3[63:0];

assign xor_ln571_2_fu_1376_p2 = (icmp_ln571_2_reg_1699 ^ 1'd1);

assign xor_ln571_fu_1193_p2 = (icmp_ln571_reg_1642 ^ 1'd1);

assign xor_ln581_2_fu_1406_p2 = (or_ln581_2_fu_1401_p2 ^ 1'd1);

assign xor_ln581_fu_1223_p2 = (or_ln581_fu_1218_p2 ^ 1'd1);

assign xor_ln582_2_fu_1390_p2 = (or_ln582_2_fu_1386_p2 ^ 1'd1);

assign xor_ln582_fu_1207_p2 = (or_ln582_fu_1203_p2 ^ 1'd1);

assign xor_ln949_5_fu_690_p2 = (tmp_142_fu_682_p3 ^ 1'd1);

assign xor_ln949_fu_316_p2 = (tmp_136_fu_308_p3 ^ 1'd1);

assign zext_ln1064_fu_528_p1 = t_3_fu_518_p4;

assign zext_ln368_fu_863_p1 = data_V_reg_1587;

assign zext_ln415_13_fu_1366_p1 = qb_4_fu_1360_p3;

assign zext_ln415_fu_1183_p1 = qb_fu_1177_p3;

assign zext_ln455_2_fu_1011_p1 = exp_tmp_2_fu_1001_p4;

assign zext_ln455_fu_897_p1 = exp_tmp_fu_887_p4;

assign zext_ln569_2_fu_1270_p1 = p_Result_213_fu_1263_p3;

assign zext_ln569_fu_1106_p1 = p_Result_208_fu_1099_p3;

assign zext_ln586_2_fu_1295_p1 = trunc_ln586_4_reg_1734;

assign zext_ln586_fu_1131_p1 = trunc_ln586_reg_1677;

assign zext_ln591_2_fu_1348_p1 = add_ln591_2_fu_1343_p2;

assign zext_ln591_fu_1165_p1 = add_ln591_fu_1160_p2;

assign zext_ln604_2_fu_1323_p1 = trunc_ln586_4_reg_1734;

assign zext_ln604_fu_1151_p1 = trunc_ln586_reg_1677;

assign zext_ln937_fu_594_p1 = tmp_V_38_reg_1592;

assign zext_ln947_5_fu_623_p1 = sub_ln947_5_fu_618_p2;

assign zext_ln947_fu_270_p1 = sub_ln947_fu_264_p2;

assign zext_ln949_1_fu_639_p1 = lsb_index_8_fu_597_p2;

assign zext_ln949_fu_280_p1 = lsb_index_fu_238_p2;

assign zext_ln954_1_fu_744_p1 = add_ln954_1_fu_739_p2;

assign zext_ln954_fu_411_p1 = add_ln954_fu_406_p2;

assign zext_ln955_1_fu_721_p1 = sub_ln955_1_fu_716_p2;

assign zext_ln955_fu_397_p1 = sub_ln955_fu_392_p2;

assign zext_ln961_1_fu_778_p1 = select_ln954_2_fu_754_p3;

assign zext_ln961_fu_427_p1 = select_ln954_reg_1560;

assign zext_ln962_5_fu_798_p1 = m_59_fu_788_p4;

assign zext_ln962_fu_446_p1 = m_58_fu_436_p4;

endmodule //LLSSineReconstruction_calc_converge_ap_fixed_64_21_0_3_0_s
