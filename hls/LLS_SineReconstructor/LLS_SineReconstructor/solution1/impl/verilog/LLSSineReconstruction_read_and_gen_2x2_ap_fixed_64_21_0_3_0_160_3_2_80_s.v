// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        alpha_strm1_din,
        alpha_strm1_full_n,
        alpha_strm1_write,
        beta_strm2_din,
        beta_strm2_full_n,
        beta_strm2_write,
        gamma_strm3_din,
        gamma_strm3_full_n,
        gamma_strm3_write,
        col_i_dout,
        col_i_empty_n,
        col_i_read,
        col_j_dout,
        col_j_empty_n,
        col_j_read,
        A_i_V_0_address1,
        A_i_V_0_ce1,
        A_i_V_0_we1,
        A_i_V_0_d1,
        A_i_V_1_address1,
        A_i_V_1_ce1,
        A_i_V_1_we1,
        A_i_V_1_d1,
        A_j_V_0_address1,
        A_j_V_0_ce1,
        A_j_V_0_we1,
        A_j_V_0_d1,
        A_j_V_1_address1,
        A_j_V_1_ce1,
        A_j_V_1_we1,
        A_j_V_1_d1,
        matA_V_0_address0,
        matA_V_0_ce0,
        matA_V_0_q0,
        matA_V_0_address1,
        matA_V_0_ce1,
        matA_V_0_q1,
        matA_V_1_address0,
        matA_V_1_ce0,
        matA_V_1_q0,
        matA_V_1_address1,
        matA_V_1_ce1,
        matA_V_1_q1
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_pp1_stage0 = 15'd8;
parameter    ap_ST_fsm_state7 = 15'd16;
parameter    ap_ST_fsm_state8 = 15'd32;
parameter    ap_ST_fsm_state9 = 15'd64;
parameter    ap_ST_fsm_state10 = 15'd128;
parameter    ap_ST_fsm_pp3_stage0 = 15'd256;
parameter    ap_ST_fsm_state13 = 15'd512;
parameter    ap_ST_fsm_pp4_stage0 = 15'd1024;
parameter    ap_ST_fsm_state16 = 15'd2048;
parameter    ap_ST_fsm_pp5_stage0 = 15'd4096;
parameter    ap_ST_fsm_state19 = 15'd8192;
parameter    ap_ST_fsm_state20 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] alpha_strm1_din;
input   alpha_strm1_full_n;
output   alpha_strm1_write;
output  [63:0] beta_strm2_din;
input   beta_strm2_full_n;
output   beta_strm2_write;
output  [63:0] gamma_strm3_din;
input   gamma_strm3_full_n;
output   gamma_strm3_write;
input  [1:0] col_i_dout;
input   col_i_empty_n;
output   col_i_read;
input  [1:0] col_j_dout;
input   col_j_empty_n;
output   col_j_read;
output  [6:0] A_i_V_0_address1;
output   A_i_V_0_ce1;
output   A_i_V_0_we1;
output  [63:0] A_i_V_0_d1;
output  [6:0] A_i_V_1_address1;
output   A_i_V_1_ce1;
output   A_i_V_1_we1;
output  [63:0] A_i_V_1_d1;
output  [6:0] A_j_V_0_address1;
output   A_j_V_0_ce1;
output   A_j_V_0_we1;
output  [63:0] A_j_V_0_d1;
output  [6:0] A_j_V_1_address1;
output   A_j_V_1_ce1;
output   A_j_V_1_we1;
output  [63:0] A_j_V_1_d1;
output  [7:0] matA_V_0_address0;
output   matA_V_0_ce0;
input  [63:0] matA_V_0_q0;
output  [7:0] matA_V_0_address1;
output   matA_V_0_ce1;
input  [63:0] matA_V_0_q1;
output  [7:0] matA_V_1_address0;
output   matA_V_1_ce0;
input  [63:0] matA_V_1_q0;
output  [7:0] matA_V_1_address1;
output   matA_V_1_ce1;
input  [63:0] matA_V_1_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg alpha_strm1_write;
reg beta_strm2_write;
reg gamma_strm3_write;
reg col_i_read;
reg col_j_read;
reg A_i_V_0_ce1;
reg A_i_V_0_we1;
reg A_i_V_1_ce1;
reg A_i_V_1_we1;
reg A_j_V_0_ce1;
reg A_j_V_0_we1;
reg A_j_V_1_ce1;
reg A_j_V_1_we1;
reg matA_V_0_ce0;
reg matA_V_0_ce1;
reg matA_V_1_ce0;
reg matA_V_1_ce1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    alpha_strm1_blk_n;
wire    ap_CS_fsm_state20;
reg    beta_strm2_blk_n;
reg    gamma_strm3_blk_n;
reg    col_i_blk_n;
reg    col_j_blk_n;
reg   [6:0] k_reg_987;
reg   [3:0] k_2_reg_1022;
reg   [2:0] k_3_reg_1034;
reg   [1:0] k_4_reg_1046;
reg   [1:0] col_i_read_reg_1774;
reg   [1:0] col_j_read_reg_1779;
wire   [4:0] add_ln220_fu_1058_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] col_i_load_cast_fu_1083_p1;
reg   [7:0] col_i_load_cast_reg_1792;
wire    ap_CS_fsm_state3;
wire   [7:0] zext_ln236_1_fu_1086_p1;
reg   [7:0] zext_ln236_1_reg_1797;
wire   [6:0] add_ln236_fu_1089_p2;
reg   [6:0] add_ln236_reg_1802;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln236_fu_1095_p2;
reg   [0:0] icmp_ln236_reg_1807;
reg   [0:0] icmp_ln236_reg_1807_pp1_iter1_reg;
wire   [106:0] r_V_33_fu_1171_p2;
reg   [106:0] r_V_33_reg_1831;
reg   [3:0] alpha_acc_V_0_addr_1_reg_1836;
reg   [0:0] tmp_reg_1842;
wire   [106:0] r_V_35_fu_1189_p2;
reg   [106:0] r_V_35_reg_1847;
reg   [3:0] beta_acc_V_0_addr_1_reg_1852;
reg   [0:0] tmp_18_reg_1858;
wire   [106:0] r_V_36_fu_1203_p2;
reg   [106:0] r_V_36_reg_1863;
reg   [3:0] gamma_acc_V_0_addr_1_reg_1868;
reg   [0:0] tmp_19_reg_1874;
wire   [106:0] r_V_38_fu_1221_p2;
reg   [106:0] r_V_38_reg_1879;
reg   [3:0] alpha_acc_V_1_addr_1_reg_1884;
reg   [0:0] tmp_20_reg_1890;
wire   [106:0] r_V_40_fu_1239_p2;
reg   [106:0] r_V_40_reg_1895;
reg   [3:0] beta_acc_V_1_addr_1_reg_1900;
reg   [0:0] tmp_21_reg_1906;
wire   [106:0] r_V_41_fu_1253_p2;
reg   [106:0] r_V_41_reg_1911;
reg   [3:0] gamma_acc_V_1_addr_1_reg_1916;
reg   [0:0] tmp_22_reg_1922;
wire   [4:0] add_ln258_fu_1465_p2;
reg   [4:0] add_ln258_reg_1927;
wire    ap_CS_fsm_state8;
reg   [3:0] alpha_sum_V_addr_1_reg_1935;
wire   [0:0] icmp_ln258_fu_1471_p2;
reg   [3:0] beta_sum_V_addr_1_reg_1946;
reg   [3:0] gamma_sum_V_addr_1_reg_1957;
reg   [3:0] alpha_sum_V_addr_2_reg_1968;
reg   [3:0] beta_sum_V_addr_2_reg_1979;
reg   [3:0] gamma_sum_V_addr_2_reg_1990;
wire   [3:0] add_ln261_fu_1549_p2;
wire    ap_CS_fsm_state9;
wire   [3:0] add_ln278_fu_1555_p2;
reg   [3:0] add_ln278_reg_2006;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state11_pp3_stage0_iter0;
wire    ap_block_state12_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln278_fu_1561_p2;
reg   [0:0] icmp_ln278_reg_2011;
wire   [2:0] add_ln289_fu_1621_p2;
reg   [2:0] add_ln289_reg_2045;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state14_pp4_stage0_iter0;
wire    ap_block_state15_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [0:0] icmp_ln289_fu_1627_p2;
reg   [0:0] icmp_ln289_reg_2050;
wire   [1:0] add_ln299_fu_1687_p2;
reg   [1:0] add_ln299_reg_2084;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state17_pp5_stage0_iter0;
wire    ap_block_state18_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln299_fu_1693_p2;
reg   [0:0] icmp_ln299_reg_2089;
wire    ap_CS_fsm_state19;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state10;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state11;
reg    ap_enable_reg_pp3_iter1;
wire    ap_CS_fsm_state13;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state14;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state16;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state17;
reg    ap_enable_reg_pp5_iter1;
reg   [3:0] alpha_acc_V_0_address0;
reg    alpha_acc_V_0_ce0;
wire   [63:0] alpha_acc_V_0_q0;
reg   [3:0] alpha_acc_V_0_address1;
reg    alpha_acc_V_0_ce1;
reg    alpha_acc_V_0_we1;
reg   [63:0] alpha_acc_V_0_d1;
reg   [3:0] alpha_acc_V_1_address0;
reg    alpha_acc_V_1_ce0;
wire   [63:0] alpha_acc_V_1_q0;
reg   [3:0] alpha_acc_V_1_address1;
reg    alpha_acc_V_1_ce1;
reg    alpha_acc_V_1_we1;
reg   [63:0] alpha_acc_V_1_d1;
reg   [3:0] beta_acc_V_0_address0;
reg    beta_acc_V_0_ce0;
wire   [63:0] beta_acc_V_0_q0;
reg   [3:0] beta_acc_V_0_address1;
reg    beta_acc_V_0_ce1;
reg    beta_acc_V_0_we1;
reg   [63:0] beta_acc_V_0_d1;
reg   [3:0] beta_acc_V_1_address0;
reg    beta_acc_V_1_ce0;
wire   [63:0] beta_acc_V_1_q0;
reg   [3:0] beta_acc_V_1_address1;
reg    beta_acc_V_1_ce1;
reg    beta_acc_V_1_we1;
reg   [63:0] beta_acc_V_1_d1;
reg   [3:0] gamma_acc_V_0_address0;
reg    gamma_acc_V_0_ce0;
wire   [63:0] gamma_acc_V_0_q0;
reg   [3:0] gamma_acc_V_0_address1;
reg    gamma_acc_V_0_ce1;
reg    gamma_acc_V_0_we1;
reg   [63:0] gamma_acc_V_0_d1;
reg   [3:0] gamma_acc_V_1_address0;
reg    gamma_acc_V_1_ce0;
wire   [63:0] gamma_acc_V_1_q0;
reg   [3:0] gamma_acc_V_1_address1;
reg    gamma_acc_V_1_ce1;
reg    gamma_acc_V_1_we1;
reg   [63:0] gamma_acc_V_1_d1;
reg   [3:0] alpha_sum_V_address0;
reg    alpha_sum_V_ce0;
reg    alpha_sum_V_we0;
reg   [63:0] alpha_sum_V_d0;
wire   [63:0] alpha_sum_V_q0;
reg   [3:0] alpha_sum_V_address1;
reg    alpha_sum_V_ce1;
reg    alpha_sum_V_we1;
wire   [63:0] alpha_sum_V_d1;
wire   [63:0] alpha_sum_V_q1;
reg   [3:0] beta_sum_V_address0;
reg    beta_sum_V_ce0;
reg    beta_sum_V_we0;
reg   [63:0] beta_sum_V_d0;
wire   [63:0] beta_sum_V_q0;
reg   [3:0] beta_sum_V_address1;
reg    beta_sum_V_ce1;
reg    beta_sum_V_we1;
wire   [63:0] beta_sum_V_d1;
wire   [63:0] beta_sum_V_q1;
reg   [3:0] gamma_sum_V_address0;
reg    gamma_sum_V_ce0;
reg    gamma_sum_V_we0;
reg   [63:0] gamma_sum_V_d0;
wire   [63:0] gamma_sum_V_q0;
reg   [3:0] gamma_sum_V_address1;
reg    gamma_sum_V_ce1;
reg    gamma_sum_V_we1;
wire   [63:0] gamma_sum_V_d1;
wire   [63:0] gamma_sum_V_q1;
reg   [2:0] alpha_sum_tmp0_V_address0;
reg    alpha_sum_tmp0_V_ce0;
reg    alpha_sum_tmp0_V_we0;
wire   [63:0] alpha_sum_tmp0_V_d0;
wire   [63:0] alpha_sum_tmp0_V_q0;
wire   [2:0] alpha_sum_tmp0_V_address1;
reg    alpha_sum_tmp0_V_ce1;
wire   [63:0] alpha_sum_tmp0_V_q1;
reg   [2:0] beta_sum_tmp0_V_address0;
reg    beta_sum_tmp0_V_ce0;
reg    beta_sum_tmp0_V_we0;
wire   [63:0] beta_sum_tmp0_V_d0;
wire   [63:0] beta_sum_tmp0_V_q0;
wire   [2:0] beta_sum_tmp0_V_address1;
reg    beta_sum_tmp0_V_ce1;
wire   [63:0] beta_sum_tmp0_V_q1;
reg   [2:0] gamma_sum_tmp0_V_address0;
reg    gamma_sum_tmp0_V_ce0;
reg    gamma_sum_tmp0_V_we0;
wire   [63:0] gamma_sum_tmp0_V_d0;
wire   [63:0] gamma_sum_tmp0_V_q0;
wire   [2:0] gamma_sum_tmp0_V_address1;
reg    gamma_sum_tmp0_V_ce1;
wire   [63:0] gamma_sum_tmp0_V_q1;
reg   [1:0] alpha_sum_tmp1_V_address0;
reg    alpha_sum_tmp1_V_ce0;
reg    alpha_sum_tmp1_V_we0;
wire   [63:0] alpha_sum_tmp1_V_d0;
wire   [63:0] alpha_sum_tmp1_V_q0;
wire   [1:0] alpha_sum_tmp1_V_address1;
reg    alpha_sum_tmp1_V_ce1;
wire   [63:0] alpha_sum_tmp1_V_q1;
reg   [1:0] beta_sum_tmp1_V_address0;
reg    beta_sum_tmp1_V_ce0;
reg    beta_sum_tmp1_V_we0;
wire   [63:0] beta_sum_tmp1_V_d0;
wire   [63:0] beta_sum_tmp1_V_q0;
wire   [1:0] beta_sum_tmp1_V_address1;
reg    beta_sum_tmp1_V_ce1;
wire   [63:0] beta_sum_tmp1_V_q1;
reg   [1:0] gamma_sum_tmp1_V_address0;
reg    gamma_sum_tmp1_V_ce0;
reg    gamma_sum_tmp1_V_we0;
wire   [63:0] gamma_sum_tmp1_V_d0;
wire   [63:0] gamma_sum_tmp1_V_q0;
wire   [1:0] gamma_sum_tmp1_V_address1;
reg    gamma_sum_tmp1_V_ce1;
wire   [63:0] gamma_sum_tmp1_V_q1;
reg   [0:0] alpha_sum_tmp2_V_address0;
reg    alpha_sum_tmp2_V_ce0;
reg    alpha_sum_tmp2_V_we0;
wire   [63:0] alpha_sum_tmp2_V_d0;
wire   [63:0] alpha_sum_tmp2_V_q0;
wire   [0:0] alpha_sum_tmp2_V_address1;
reg    alpha_sum_tmp2_V_ce1;
wire   [63:0] alpha_sum_tmp2_V_q1;
reg   [0:0] beta_sum_tmp2_V_address0;
reg    beta_sum_tmp2_V_ce0;
reg    beta_sum_tmp2_V_we0;
wire   [63:0] beta_sum_tmp2_V_d0;
wire   [63:0] beta_sum_tmp2_V_q0;
wire   [0:0] beta_sum_tmp2_V_address1;
reg    beta_sum_tmp2_V_ce1;
wire   [63:0] beta_sum_tmp2_V_q1;
reg   [0:0] gamma_sum_tmp2_V_address0;
reg    gamma_sum_tmp2_V_ce0;
reg    gamma_sum_tmp2_V_we0;
wire   [63:0] gamma_sum_tmp2_V_d0;
wire   [63:0] gamma_sum_tmp2_V_q0;
wire   [0:0] gamma_sum_tmp2_V_address1;
reg    gamma_sum_tmp2_V_ce1;
wire   [63:0] gamma_sum_tmp2_V_q1;
reg   [4:0] t_reg_976;
reg    ap_block_state1;
wire   [0:0] icmp_ln220_fu_1064_p2;
reg   [6:0] ap_phi_mux_k_phi_fu_991_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] k_1_reg_999;
wire    ap_CS_fsm_state7;
reg   [3:0] idx_V_reg_1010;
reg   [3:0] ap_phi_mux_k_2_phi_fu_1026_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] ap_phi_mux_k_3_phi_fu_1038_p4;
wire    ap_block_pp4_stage0;
reg   [1:0] ap_phi_mux_k_4_phi_fu_1050_p4;
wire    ap_block_pp5_stage0;
wire   [63:0] zext_ln220_fu_1070_p1;
wire   [63:0] zext_ln245_1_fu_1128_p1;
wire   [63:0] zext_ln246_fu_1139_p1;
wire   [63:0] zext_ln236_fu_1145_p1;
wire   [63:0] idxprom9425_i_i_fu_1157_p1;
wire   [63:0] zext_ln534_fu_1487_p1;
wire   [63:0] zext_ln258_fu_1477_p1;
wire   [63:0] zext_ln534_1_fu_1500_p1;
wire   [63:0] zext_ln280_fu_1573_p1;
wire   [63:0] zext_ln703_fu_1586_p1;
wire   [63:0] zext_ln278_fu_1593_p1;
wire   [63:0] zext_ln291_fu_1639_p1;
wire   [63:0] zext_ln703_1_fu_1652_p1;
wire   [63:0] zext_ln289_fu_1659_p1;
wire   [63:0] zext_ln301_fu_1705_p1;
wire   [63:0] zext_ln703_2_fu_1718_p1;
wire   [63:0] zext_ln299_fu_1725_p1;
reg    ap_block_state20;
wire   [63:0] add_ln415_fu_1293_p2;
wire   [63:0] add_ln415_7_fu_1326_p2;
wire   [63:0] add_ln415_8_fu_1359_p2;
wire   [63:0] add_ln415_9_fu_1392_p2;
wire   [63:0] add_ln415_10_fu_1425_p2;
wire   [63:0] add_ln415_11_fu_1458_p2;
wire   [63:0] add_ln703_fu_1507_p2;
wire   [63:0] add_ln703_1_fu_1514_p2;
wire   [63:0] add_ln703_2_fu_1521_p2;
wire   [5:0] trunc_ln245_fu_1105_p1;
wire   [7:0] tmp_cast_fu_1109_p3;
wire   [7:0] zext_ln245_fu_1101_p1;
wire   [7:0] sub_ln245_fu_1117_p2;
wire   [7:0] add_ln245_fu_1123_p2;
wire   [7:0] add_ln246_fu_1134_p2;
wire   [3:0] empty_fu_1153_p1;
wire  signed [63:0] sext_ln1115_fu_1167_p0;
wire  signed [63:0] r_V_33_fu_1171_p0;
wire  signed [106:0] sext_ln1115_fu_1167_p1;
wire  signed [63:0] r_V_33_fu_1171_p1;
wire  signed [63:0] sext_ln1115_1_fu_1185_p0;
wire  signed [63:0] r_V_35_fu_1189_p0;
wire  signed [106:0] sext_ln1115_1_fu_1185_p1;
wire  signed [63:0] r_V_35_fu_1189_p1;
wire  signed [63:0] r_V_36_fu_1203_p0;
wire  signed [63:0] r_V_36_fu_1203_p1;
wire  signed [63:0] sext_ln1115_2_fu_1217_p0;
wire  signed [63:0] r_V_38_fu_1221_p0;
wire  signed [106:0] sext_ln1115_2_fu_1217_p1;
wire  signed [63:0] r_V_38_fu_1221_p1;
wire  signed [63:0] sext_ln1115_3_fu_1235_p0;
wire  signed [63:0] r_V_40_fu_1239_p0;
wire  signed [106:0] sext_ln1115_3_fu_1235_p1;
wire  signed [63:0] r_V_40_fu_1239_p1;
wire  signed [63:0] r_V_41_fu_1253_p0;
wire  signed [63:0] r_V_41_fu_1253_p1;
wire   [106:0] lhs_3_fu_1267_p3;
wire   [106:0] ret_V_fu_1275_p2;
wire   [63:0] trunc_ln_fu_1280_p4;
wire   [63:0] zext_ln415_fu_1290_p1;
wire   [106:0] lhs_5_fu_1300_p3;
wire   [106:0] ret_V_7_fu_1308_p2;
wire   [63:0] trunc_ln708_7_fu_1313_p4;
wire   [63:0] zext_ln415_7_fu_1323_p1;
wire   [106:0] lhs_7_fu_1333_p3;
wire   [106:0] ret_V_8_fu_1341_p2;
wire   [63:0] trunc_ln708_8_fu_1346_p4;
wire   [63:0] zext_ln415_8_fu_1356_p1;
wire   [106:0] lhs_9_fu_1366_p3;
wire   [106:0] ret_V_9_fu_1374_p2;
wire   [63:0] trunc_ln708_9_fu_1379_p4;
wire   [63:0] zext_ln415_9_fu_1389_p1;
wire   [106:0] lhs_11_fu_1399_p3;
wire   [106:0] ret_V_10_fu_1407_p2;
wire   [63:0] trunc_ln708_s_fu_1412_p4;
wire   [63:0] zext_ln415_10_fu_1422_p1;
wire   [106:0] lhs_13_fu_1432_p3;
wire   [106:0] ret_V_11_fu_1440_p2;
wire   [63:0] trunc_ln708_1_fu_1445_p4;
wire   [63:0] zext_ln415_11_fu_1455_p1;
wire   [3:0] or_ln691_fu_1494_p2;
wire   [3:0] shl_ln280_fu_1567_p2;
wire   [3:0] or_ln280_fu_1580_p2;
wire   [2:0] shl_ln291_fu_1633_p2;
wire   [2:0] or_ln291_fu_1646_p2;
wire   [1:0] shl_ln301_fu_1699_p2;
wire   [1:0] or_ln301_fu_1712_p2;
reg   [14:0] ap_NS_fsm;
reg    ap_block_pp1;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_block_pp5;
reg    ap_enable_operation_124;
reg    ap_enable_state5_pp1_iter1_stage0;
reg    ap_enable_operation_158;
reg    ap_enable_state6_pp1_iter2_stage0;
reg    ap_enable_operation_164;
reg    ap_enable_operation_129;
reg    ap_enable_operation_165;
reg    ap_enable_operation_171;
reg    ap_enable_operation_133;
reg    ap_enable_operation_172;
reg    ap_enable_operation_178;
reg    ap_enable_operation_144;
reg    ap_enable_operation_179;
reg    ap_enable_operation_185;
reg    ap_enable_operation_149;
reg    ap_enable_operation_186;
reg    ap_enable_operation_192;
reg    ap_enable_operation_153;
reg    ap_enable_operation_193;
reg    ap_enable_operation_199;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
end

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_acc_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
alpha_acc_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha_acc_V_0_address0),
    .ce0(alpha_acc_V_0_ce0),
    .q0(alpha_acc_V_0_q0),
    .address1(alpha_acc_V_0_address1),
    .ce1(alpha_acc_V_0_ce1),
    .we1(alpha_acc_V_0_we1),
    .d1(alpha_acc_V_0_d1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_acc_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
alpha_acc_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha_acc_V_1_address0),
    .ce0(alpha_acc_V_1_ce0),
    .q0(alpha_acc_V_1_q0),
    .address1(alpha_acc_V_1_address1),
    .ce1(alpha_acc_V_1_ce1),
    .we1(alpha_acc_V_1_we1),
    .d1(alpha_acc_V_1_d1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_acc_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
beta_acc_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_acc_V_0_address0),
    .ce0(beta_acc_V_0_ce0),
    .q0(beta_acc_V_0_q0),
    .address1(beta_acc_V_0_address1),
    .ce1(beta_acc_V_0_ce1),
    .we1(beta_acc_V_0_we1),
    .d1(beta_acc_V_0_d1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_acc_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
beta_acc_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_acc_V_1_address0),
    .ce0(beta_acc_V_1_ce0),
    .q0(beta_acc_V_1_q0),
    .address1(beta_acc_V_1_address1),
    .ce1(beta_acc_V_1_ce1),
    .we1(beta_acc_V_1_we1),
    .d1(beta_acc_V_1_d1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_acc_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
gamma_acc_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_acc_V_0_address0),
    .ce0(gamma_acc_V_0_ce0),
    .q0(gamma_acc_V_0_q0),
    .address1(gamma_acc_V_0_address1),
    .ce1(gamma_acc_V_0_ce1),
    .we1(gamma_acc_V_0_we1),
    .d1(gamma_acc_V_0_d1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_acc_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
gamma_acc_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_acc_V_1_address0),
    .ce0(gamma_acc_V_1_ce0),
    .q0(gamma_acc_V_1_q0),
    .address1(gamma_acc_V_1_address1),
    .ce1(gamma_acc_V_1_ce1),
    .we1(gamma_acc_V_1_we1),
    .d1(gamma_acc_V_1_d1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_V #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
alpha_sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha_sum_V_address0),
    .ce0(alpha_sum_V_ce0),
    .we0(alpha_sum_V_we0),
    .d0(alpha_sum_V_d0),
    .q0(alpha_sum_V_q0),
    .address1(alpha_sum_V_address1),
    .ce1(alpha_sum_V_ce1),
    .we1(alpha_sum_V_we1),
    .d1(alpha_sum_V_d1),
    .q1(alpha_sum_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_V #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
beta_sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_sum_V_address0),
    .ce0(beta_sum_V_ce0),
    .we0(beta_sum_V_we0),
    .d0(beta_sum_V_d0),
    .q0(beta_sum_V_q0),
    .address1(beta_sum_V_address1),
    .ce1(beta_sum_V_ce1),
    .we1(beta_sum_V_we1),
    .d1(beta_sum_V_d1),
    .q1(beta_sum_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_V #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
gamma_sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_sum_V_address0),
    .ce0(gamma_sum_V_ce0),
    .we0(gamma_sum_V_we0),
    .d0(gamma_sum_V_d0),
    .q0(gamma_sum_V_q0),
    .address1(gamma_sum_V_address1),
    .ce1(gamma_sum_V_ce1),
    .we1(gamma_sum_V_we1),
    .d1(gamma_sum_V_d1),
    .q1(gamma_sum_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp0_V #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
alpha_sum_tmp0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha_sum_tmp0_V_address0),
    .ce0(alpha_sum_tmp0_V_ce0),
    .we0(alpha_sum_tmp0_V_we0),
    .d0(alpha_sum_tmp0_V_d0),
    .q0(alpha_sum_tmp0_V_q0),
    .address1(alpha_sum_tmp0_V_address1),
    .ce1(alpha_sum_tmp0_V_ce1),
    .q1(alpha_sum_tmp0_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp0_V #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
beta_sum_tmp0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_sum_tmp0_V_address0),
    .ce0(beta_sum_tmp0_V_ce0),
    .we0(beta_sum_tmp0_V_we0),
    .d0(beta_sum_tmp0_V_d0),
    .q0(beta_sum_tmp0_V_q0),
    .address1(beta_sum_tmp0_V_address1),
    .ce1(beta_sum_tmp0_V_ce1),
    .q1(beta_sum_tmp0_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp0_V #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
gamma_sum_tmp0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_sum_tmp0_V_address0),
    .ce0(gamma_sum_tmp0_V_ce0),
    .we0(gamma_sum_tmp0_V_we0),
    .d0(gamma_sum_tmp0_V_d0),
    .q0(gamma_sum_tmp0_V_q0),
    .address1(gamma_sum_tmp0_V_address1),
    .ce1(gamma_sum_tmp0_V_ce1),
    .q1(gamma_sum_tmp0_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp1_V #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
alpha_sum_tmp1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha_sum_tmp1_V_address0),
    .ce0(alpha_sum_tmp1_V_ce0),
    .we0(alpha_sum_tmp1_V_we0),
    .d0(alpha_sum_tmp1_V_d0),
    .q0(alpha_sum_tmp1_V_q0),
    .address1(alpha_sum_tmp1_V_address1),
    .ce1(alpha_sum_tmp1_V_ce1),
    .q1(alpha_sum_tmp1_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp1_V #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
beta_sum_tmp1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_sum_tmp1_V_address0),
    .ce0(beta_sum_tmp1_V_ce0),
    .we0(beta_sum_tmp1_V_we0),
    .d0(beta_sum_tmp1_V_d0),
    .q0(beta_sum_tmp1_V_q0),
    .address1(beta_sum_tmp1_V_address1),
    .ce1(beta_sum_tmp1_V_ce1),
    .q1(beta_sum_tmp1_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp1_V #(
    .DataWidth( 64 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
gamma_sum_tmp1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_sum_tmp1_V_address0),
    .ce0(gamma_sum_tmp1_V_ce0),
    .we0(gamma_sum_tmp1_V_we0),
    .d0(gamma_sum_tmp1_V_d0),
    .q0(gamma_sum_tmp1_V_q0),
    .address1(gamma_sum_tmp1_V_address1),
    .ce1(gamma_sum_tmp1_V_ce1),
    .q1(gamma_sum_tmp1_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp2_V #(
    .DataWidth( 64 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
alpha_sum_tmp2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha_sum_tmp2_V_address0),
    .ce0(alpha_sum_tmp2_V_ce0),
    .we0(alpha_sum_tmp2_V_we0),
    .d0(alpha_sum_tmp2_V_d0),
    .q0(alpha_sum_tmp2_V_q0),
    .address1(alpha_sum_tmp2_V_address1),
    .ce1(alpha_sum_tmp2_V_ce1),
    .q1(alpha_sum_tmp2_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp2_V #(
    .DataWidth( 64 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
beta_sum_tmp2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_sum_tmp2_V_address0),
    .ce0(beta_sum_tmp2_V_ce0),
    .we0(beta_sum_tmp2_V_we0),
    .d0(beta_sum_tmp2_V_d0),
    .q0(beta_sum_tmp2_V_q0),
    .address1(beta_sum_tmp2_V_address1),
    .ce1(beta_sum_tmp2_V_ce1),
    .q1(beta_sum_tmp2_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s_alpha_sum_tmp2_V #(
    .DataWidth( 64 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
gamma_sum_tmp2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_sum_tmp2_V_address0),
    .ce0(gamma_sum_tmp2_V_ce0),
    .we0(gamma_sum_tmp2_V_we0),
    .d0(gamma_sum_tmp2_V_d0),
    .q0(gamma_sum_tmp2_V_q0),
    .address1(gamma_sum_tmp2_V_address1),
    .ce1(gamma_sum_tmp2_V_ce1),
    .q1(gamma_sum_tmp2_V_q1)
);

LLSSineReconstruction_mul_64s_64s_107_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 107 ))
mul_64s_64s_107_1_1_U457(
    .din0(r_V_33_fu_1171_p0),
    .din1(r_V_33_fu_1171_p1),
    .dout(r_V_33_fu_1171_p2)
);

LLSSineReconstruction_mul_64s_64s_107_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 107 ))
mul_64s_64s_107_1_1_U458(
    .din0(r_V_35_fu_1189_p0),
    .din1(r_V_35_fu_1189_p1),
    .dout(r_V_35_fu_1189_p2)
);

LLSSineReconstruction_mul_64s_64s_107_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 107 ))
mul_64s_64s_107_1_1_U459(
    .din0(r_V_36_fu_1203_p0),
    .din1(r_V_36_fu_1203_p1),
    .dout(r_V_36_fu_1203_p2)
);

LLSSineReconstruction_mul_64s_64s_107_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 107 ))
mul_64s_64s_107_1_1_U460(
    .din0(r_V_38_fu_1221_p0),
    .din1(r_V_38_fu_1221_p1),
    .dout(r_V_38_fu_1221_p2)
);

LLSSineReconstruction_mul_64s_64s_107_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 107 ))
mul_64s_64s_107_1_1_U461(
    .din0(r_V_40_fu_1239_p0),
    .din1(r_V_40_fu_1239_p1),
    .dout(r_V_40_fu_1239_p2)
);

LLSSineReconstruction_mul_64s_64s_107_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 107 ))
mul_64s_64s_107_1_1_U462(
    .din0(r_V_41_fu_1253_p0),
    .din1(r_V_41_fu_1253_p1),
    .dout(r_V_41_fu_1253_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state14) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state17) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        idx_V_reg_1010 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        idx_V_reg_1010 <= add_ln261_fu_1549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_1_reg_999 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        k_1_reg_999 <= add_ln258_reg_1927;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_2_reg_1022 <= 4'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln278_reg_2011 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        k_2_reg_1022 <= add_ln278_reg_2006;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_3_reg_1034 <= 3'd0;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln289_reg_2050 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        k_3_reg_1034 <= add_ln289_reg_2045;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_4_reg_1046 <= 2'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln299_reg_2089 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        k_4_reg_1046 <= add_ln299_reg_2084;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        k_reg_987 <= add_ln236_reg_1802;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_987 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_reg_976 <= add_ln220_fu_1058_p2;
    end else if ((~((col_j_empty_n == 1'b0) | (col_i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_976 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln236_reg_1802 <= add_ln236_fu_1089_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln258_reg_1927 <= add_ln258_fu_1465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln278_reg_2006 <= add_ln278_fu_1555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        add_ln289_reg_2045 <= add_ln289_fu_1621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        add_ln299_reg_2084 <= add_ln299_fu_1687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        alpha_acc_V_0_addr_1_reg_1836 <= idxprom9425_i_i_fu_1157_p1;
        alpha_acc_V_1_addr_1_reg_1884 <= idxprom9425_i_i_fu_1157_p1;
        beta_acc_V_0_addr_1_reg_1852 <= idxprom9425_i_i_fu_1157_p1;
        beta_acc_V_1_addr_1_reg_1900 <= idxprom9425_i_i_fu_1157_p1;
        gamma_acc_V_0_addr_1_reg_1868 <= idxprom9425_i_i_fu_1157_p1;
        gamma_acc_V_1_addr_1_reg_1916 <= idxprom9425_i_i_fu_1157_p1;
        r_V_33_reg_1831 <= r_V_33_fu_1171_p2;
        r_V_35_reg_1847 <= r_V_35_fu_1189_p2;
        r_V_36_reg_1863 <= r_V_36_fu_1203_p2;
        r_V_38_reg_1879 <= r_V_38_fu_1221_p2;
        r_V_40_reg_1895 <= r_V_40_fu_1239_p2;
        r_V_41_reg_1911 <= r_V_41_fu_1253_p2;
        tmp_18_reg_1858 <= r_V_35_fu_1189_p2[32'd42];
        tmp_19_reg_1874 <= r_V_36_fu_1203_p2[32'd42];
        tmp_20_reg_1890 <= r_V_38_fu_1221_p2[32'd42];
        tmp_21_reg_1906 <= r_V_40_fu_1239_p2[32'd42];
        tmp_22_reg_1922 <= r_V_41_fu_1253_p2[32'd42];
        tmp_reg_1842 <= r_V_33_fu_1171_p2[32'd42];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln258_fu_1471_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        alpha_sum_V_addr_1_reg_1935 <= zext_ln534_fu_1487_p1;
        alpha_sum_V_addr_2_reg_1968[3 : 1] <= zext_ln534_1_fu_1500_p1[3 : 1];
        beta_sum_V_addr_1_reg_1946 <= zext_ln534_fu_1487_p1;
        beta_sum_V_addr_2_reg_1979[3 : 1] <= zext_ln534_1_fu_1500_p1[3 : 1];
        gamma_sum_V_addr_1_reg_1957 <= zext_ln534_fu_1487_p1;
        gamma_sum_V_addr_2_reg_1990[3 : 1] <= zext_ln534_1_fu_1500_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        col_i_load_cast_reg_1792[1 : 0] <= col_i_load_cast_fu_1083_p1[1 : 0];
        zext_ln236_1_reg_1797[1 : 0] <= zext_ln236_1_fu_1086_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        col_i_read_reg_1774 <= col_i_dout;
        col_j_read_reg_1779 <= col_j_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln236_reg_1807 <= icmp_ln236_fu_1095_p2;
        icmp_ln236_reg_1807_pp1_iter1_reg <= icmp_ln236_reg_1807;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln278_reg_2011 <= icmp_ln278_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln289_reg_2050 <= icmp_ln289_fu_1627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln299_reg_2089 <= icmp_ln299_fu_1693_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_i_V_0_ce1 = 1'b1;
    end else begin
        A_i_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_i_V_0_we1 = 1'b1;
    end else begin
        A_i_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_i_V_1_ce1 = 1'b1;
    end else begin
        A_i_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_i_V_1_we1 = 1'b1;
    end else begin
        A_i_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_j_V_0_ce1 = 1'b1;
    end else begin
        A_j_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_j_V_0_we1 = 1'b1;
    end else begin
        A_j_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_j_V_1_ce1 = 1'b1;
    end else begin
        A_j_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        A_j_V_1_we1 = 1'b1;
    end else begin
        A_j_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        alpha_acc_V_0_address0 = zext_ln258_fu_1477_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        alpha_acc_V_0_address0 = idxprom9425_i_i_fu_1157_p1;
    end else begin
        alpha_acc_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        alpha_acc_V_0_address1 = alpha_acc_V_0_addr_1_reg_1836;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_acc_V_0_address1 = zext_ln220_fu_1070_p1;
    end else begin
        alpha_acc_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        alpha_acc_V_0_ce0 = 1'b1;
    end else begin
        alpha_acc_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        alpha_acc_V_0_ce1 = 1'b1;
    end else begin
        alpha_acc_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        alpha_acc_V_0_d1 = add_ln415_fu_1293_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_acc_V_0_d1 = 64'd0;
    end else begin
        alpha_acc_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        alpha_acc_V_0_we1 = 1'b1;
    end else begin
        alpha_acc_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        alpha_acc_V_1_address0 = zext_ln258_fu_1477_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        alpha_acc_V_1_address0 = idxprom9425_i_i_fu_1157_p1;
    end else begin
        alpha_acc_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        alpha_acc_V_1_address1 = alpha_acc_V_1_addr_1_reg_1884;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_acc_V_1_address1 = zext_ln220_fu_1070_p1;
    end else begin
        alpha_acc_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        alpha_acc_V_1_ce0 = 1'b1;
    end else begin
        alpha_acc_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        alpha_acc_V_1_ce1 = 1'b1;
    end else begin
        alpha_acc_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        alpha_acc_V_1_d1 = add_ln415_9_fu_1392_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_acc_V_1_d1 = 64'd0;
    end else begin
        alpha_acc_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        alpha_acc_V_1_we1 = 1'b1;
    end else begin
        alpha_acc_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        alpha_strm1_blk_n = alpha_strm1_full_n;
    end else begin
        alpha_strm1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
        alpha_strm1_write = 1'b1;
    end else begin
        alpha_strm1_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        alpha_sum_V_address0 = zext_ln280_fu_1573_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        alpha_sum_V_address0 = alpha_sum_V_addr_1_reg_1935;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        alpha_sum_V_address0 = zext_ln534_1_fu_1500_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_sum_V_address0 = zext_ln220_fu_1070_p1;
    end else begin
        alpha_sum_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        alpha_sum_V_address1 = zext_ln703_fu_1586_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        alpha_sum_V_address1 = alpha_sum_V_addr_2_reg_1968;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        alpha_sum_V_address1 = zext_ln534_fu_1487_p1;
    end else begin
        alpha_sum_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        alpha_sum_V_ce0 = 1'b1;
    end else begin
        alpha_sum_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        alpha_sum_V_ce1 = 1'b1;
    end else begin
        alpha_sum_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        alpha_sum_V_d0 = add_ln703_fu_1507_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_sum_V_d0 = 64'd0;
    end else begin
        alpha_sum_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        alpha_sum_V_we0 = 1'b1;
    end else begin
        alpha_sum_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        alpha_sum_V_we1 = 1'b1;
    end else begin
        alpha_sum_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        alpha_sum_tmp0_V_address0 = zext_ln703_1_fu_1652_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        alpha_sum_tmp0_V_address0 = zext_ln278_fu_1593_p1;
    end else begin
        alpha_sum_tmp0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        alpha_sum_tmp0_V_ce0 = 1'b1;
    end else begin
        alpha_sum_tmp0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        alpha_sum_tmp0_V_ce1 = 1'b1;
    end else begin
        alpha_sum_tmp0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln278_reg_2011 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        alpha_sum_tmp0_V_we0 = 1'b1;
    end else begin
        alpha_sum_tmp0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        alpha_sum_tmp1_V_address0 = zext_ln703_2_fu_1718_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        alpha_sum_tmp1_V_address0 = zext_ln289_fu_1659_p1;
    end else begin
        alpha_sum_tmp1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        alpha_sum_tmp1_V_ce0 = 1'b1;
    end else begin
        alpha_sum_tmp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        alpha_sum_tmp1_V_ce1 = 1'b1;
    end else begin
        alpha_sum_tmp1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln289_reg_2050 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        alpha_sum_tmp1_V_we0 = 1'b1;
    end else begin
        alpha_sum_tmp1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        alpha_sum_tmp2_V_address0 = 64'd1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        alpha_sum_tmp2_V_address0 = zext_ln299_fu_1725_p1;
    end else begin
        alpha_sum_tmp2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        alpha_sum_tmp2_V_ce0 = 1'b1;
    end else begin
        alpha_sum_tmp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        alpha_sum_tmp2_V_ce1 = 1'b1;
    end else begin
        alpha_sum_tmp2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln299_reg_2089 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        alpha_sum_tmp2_V_we0 = 1'b1;
    end else begin
        alpha_sum_tmp2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln236_fu_1095_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln278_fu_1561_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln289_fu_1627_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln299_fu_1693_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln278_reg_2011 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_k_2_phi_fu_1026_p4 = add_ln278_reg_2006;
    end else begin
        ap_phi_mux_k_2_phi_fu_1026_p4 = k_2_reg_1022;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln289_reg_2050 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_k_3_phi_fu_1038_p4 = add_ln289_reg_2045;
    end else begin
        ap_phi_mux_k_3_phi_fu_1038_p4 = k_3_reg_1034;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln299_reg_2089 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_k_4_phi_fu_1050_p4 = add_ln299_reg_2084;
    end else begin
        ap_phi_mux_k_4_phi_fu_1050_p4 = k_4_reg_1046;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln236_reg_1807 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_k_phi_fu_991_p4 = add_ln236_reg_1802;
    end else begin
        ap_phi_mux_k_phi_fu_991_p4 = k_reg_987;
    end
end

always @ (*) begin
    if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_acc_V_0_address0 = zext_ln258_fu_1477_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        beta_acc_V_0_address0 = idxprom9425_i_i_fu_1157_p1;
    end else begin
        beta_acc_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        beta_acc_V_0_address1 = beta_acc_V_0_addr_1_reg_1852;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        beta_acc_V_0_address1 = zext_ln220_fu_1070_p1;
    end else begin
        beta_acc_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        beta_acc_V_0_ce0 = 1'b1;
    end else begin
        beta_acc_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        beta_acc_V_0_ce1 = 1'b1;
    end else begin
        beta_acc_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        beta_acc_V_0_d1 = add_ln415_7_fu_1326_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        beta_acc_V_0_d1 = 64'd0;
    end else begin
        beta_acc_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        beta_acc_V_0_we1 = 1'b1;
    end else begin
        beta_acc_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_acc_V_1_address0 = zext_ln258_fu_1477_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        beta_acc_V_1_address0 = idxprom9425_i_i_fu_1157_p1;
    end else begin
        beta_acc_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        beta_acc_V_1_address1 = beta_acc_V_1_addr_1_reg_1900;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        beta_acc_V_1_address1 = zext_ln220_fu_1070_p1;
    end else begin
        beta_acc_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        beta_acc_V_1_ce0 = 1'b1;
    end else begin
        beta_acc_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        beta_acc_V_1_ce1 = 1'b1;
    end else begin
        beta_acc_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        beta_acc_V_1_d1 = add_ln415_10_fu_1425_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        beta_acc_V_1_d1 = 64'd0;
    end else begin
        beta_acc_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        beta_acc_V_1_we1 = 1'b1;
    end else begin
        beta_acc_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        beta_strm2_blk_n = beta_strm2_full_n;
    end else begin
        beta_strm2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
        beta_strm2_write = 1'b1;
    end else begin
        beta_strm2_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        beta_sum_V_address0 = zext_ln280_fu_1573_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        beta_sum_V_address0 = beta_sum_V_addr_1_reg_1946;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_sum_V_address0 = zext_ln534_1_fu_1500_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        beta_sum_V_address0 = zext_ln220_fu_1070_p1;
    end else begin
        beta_sum_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        beta_sum_V_address1 = zext_ln703_fu_1586_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        beta_sum_V_address1 = beta_sum_V_addr_2_reg_1979;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        beta_sum_V_address1 = zext_ln534_fu_1487_p1;
    end else begin
        beta_sum_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        beta_sum_V_ce0 = 1'b1;
    end else begin
        beta_sum_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        beta_sum_V_ce1 = 1'b1;
    end else begin
        beta_sum_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        beta_sum_V_d0 = add_ln703_1_fu_1514_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        beta_sum_V_d0 = 64'd0;
    end else begin
        beta_sum_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        beta_sum_V_we0 = 1'b1;
    end else begin
        beta_sum_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        beta_sum_V_we1 = 1'b1;
    end else begin
        beta_sum_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        beta_sum_tmp0_V_address0 = zext_ln703_1_fu_1652_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        beta_sum_tmp0_V_address0 = zext_ln278_fu_1593_p1;
    end else begin
        beta_sum_tmp0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        beta_sum_tmp0_V_ce0 = 1'b1;
    end else begin
        beta_sum_tmp0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        beta_sum_tmp0_V_ce1 = 1'b1;
    end else begin
        beta_sum_tmp0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln278_reg_2011 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        beta_sum_tmp0_V_we0 = 1'b1;
    end else begin
        beta_sum_tmp0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        beta_sum_tmp1_V_address0 = zext_ln703_2_fu_1718_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        beta_sum_tmp1_V_address0 = zext_ln289_fu_1659_p1;
    end else begin
        beta_sum_tmp1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        beta_sum_tmp1_V_ce0 = 1'b1;
    end else begin
        beta_sum_tmp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        beta_sum_tmp1_V_ce1 = 1'b1;
    end else begin
        beta_sum_tmp1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln289_reg_2050 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        beta_sum_tmp1_V_we0 = 1'b1;
    end else begin
        beta_sum_tmp1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        beta_sum_tmp2_V_address0 = 64'd1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        beta_sum_tmp2_V_address0 = zext_ln299_fu_1725_p1;
    end else begin
        beta_sum_tmp2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        beta_sum_tmp2_V_ce0 = 1'b1;
    end else begin
        beta_sum_tmp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        beta_sum_tmp2_V_ce1 = 1'b1;
    end else begin
        beta_sum_tmp2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln299_reg_2089 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        beta_sum_tmp2_V_we0 = 1'b1;
    end else begin
        beta_sum_tmp2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_i_blk_n = col_i_empty_n;
    end else begin
        col_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((col_j_empty_n == 1'b0) | (col_i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_i_read = 1'b1;
    end else begin
        col_i_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_j_blk_n = col_j_empty_n;
    end else begin
        col_j_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((col_j_empty_n == 1'b0) | (col_i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_j_read = 1'b1;
    end else begin
        col_j_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        gamma_acc_V_0_address0 = zext_ln258_fu_1477_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        gamma_acc_V_0_address0 = idxprom9425_i_i_fu_1157_p1;
    end else begin
        gamma_acc_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        gamma_acc_V_0_address1 = gamma_acc_V_0_addr_1_reg_1868;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        gamma_acc_V_0_address1 = zext_ln220_fu_1070_p1;
    end else begin
        gamma_acc_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        gamma_acc_V_0_ce0 = 1'b1;
    end else begin
        gamma_acc_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        gamma_acc_V_0_ce1 = 1'b1;
    end else begin
        gamma_acc_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        gamma_acc_V_0_d1 = add_ln415_8_fu_1359_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        gamma_acc_V_0_d1 = 64'd0;
    end else begin
        gamma_acc_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        gamma_acc_V_0_we1 = 1'b1;
    end else begin
        gamma_acc_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        gamma_acc_V_1_address0 = zext_ln258_fu_1477_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        gamma_acc_V_1_address0 = idxprom9425_i_i_fu_1157_p1;
    end else begin
        gamma_acc_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        gamma_acc_V_1_address1 = gamma_acc_V_1_addr_1_reg_1916;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        gamma_acc_V_1_address1 = zext_ln220_fu_1070_p1;
    end else begin
        gamma_acc_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        gamma_acc_V_1_ce0 = 1'b1;
    end else begin
        gamma_acc_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        gamma_acc_V_1_ce1 = 1'b1;
    end else begin
        gamma_acc_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        gamma_acc_V_1_d1 = add_ln415_11_fu_1458_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        gamma_acc_V_1_d1 = 64'd0;
    end else begin
        gamma_acc_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        gamma_acc_V_1_we1 = 1'b1;
    end else begin
        gamma_acc_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        gamma_strm3_blk_n = gamma_strm3_full_n;
    end else begin
        gamma_strm3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
        gamma_strm3_write = 1'b1;
    end else begin
        gamma_strm3_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        gamma_sum_V_address0 = zext_ln280_fu_1573_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        gamma_sum_V_address0 = gamma_sum_V_addr_1_reg_1957;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        gamma_sum_V_address0 = zext_ln534_1_fu_1500_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        gamma_sum_V_address0 = zext_ln220_fu_1070_p1;
    end else begin
        gamma_sum_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        gamma_sum_V_address1 = zext_ln703_fu_1586_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        gamma_sum_V_address1 = gamma_sum_V_addr_2_reg_1990;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        gamma_sum_V_address1 = zext_ln534_fu_1487_p1;
    end else begin
        gamma_sum_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        gamma_sum_V_ce0 = 1'b1;
    end else begin
        gamma_sum_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        gamma_sum_V_ce1 = 1'b1;
    end else begin
        gamma_sum_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        gamma_sum_V_d0 = add_ln703_2_fu_1521_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        gamma_sum_V_d0 = 64'd0;
    end else begin
        gamma_sum_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        gamma_sum_V_we0 = 1'b1;
    end else begin
        gamma_sum_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        gamma_sum_V_we1 = 1'b1;
    end else begin
        gamma_sum_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        gamma_sum_tmp0_V_address0 = zext_ln703_1_fu_1652_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        gamma_sum_tmp0_V_address0 = zext_ln278_fu_1593_p1;
    end else begin
        gamma_sum_tmp0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        gamma_sum_tmp0_V_ce0 = 1'b1;
    end else begin
        gamma_sum_tmp0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        gamma_sum_tmp0_V_ce1 = 1'b1;
    end else begin
        gamma_sum_tmp0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln278_reg_2011 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        gamma_sum_tmp0_V_we0 = 1'b1;
    end else begin
        gamma_sum_tmp0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        gamma_sum_tmp1_V_address0 = zext_ln703_2_fu_1718_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        gamma_sum_tmp1_V_address0 = zext_ln289_fu_1659_p1;
    end else begin
        gamma_sum_tmp1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        gamma_sum_tmp1_V_ce0 = 1'b1;
    end else begin
        gamma_sum_tmp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        gamma_sum_tmp1_V_ce1 = 1'b1;
    end else begin
        gamma_sum_tmp1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln289_reg_2050 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        gamma_sum_tmp1_V_we0 = 1'b1;
    end else begin
        gamma_sum_tmp1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        gamma_sum_tmp2_V_address0 = 64'd1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        gamma_sum_tmp2_V_address0 = zext_ln299_fu_1725_p1;
    end else begin
        gamma_sum_tmp2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        gamma_sum_tmp2_V_ce0 = 1'b1;
    end else begin
        gamma_sum_tmp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        gamma_sum_tmp2_V_ce1 = 1'b1;
    end else begin
        gamma_sum_tmp2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln299_reg_2089 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        gamma_sum_tmp2_V_we0 = 1'b1;
    end else begin
        gamma_sum_tmp2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        matA_V_0_ce0 = 1'b1;
    end else begin
        matA_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        matA_V_0_ce1 = 1'b1;
    end else begin
        matA_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        matA_V_1_ce0 = 1'b1;
    end else begin
        matA_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        matA_V_1_ce1 = 1'b1;
    end else begin
        matA_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((col_j_empty_n == 1'b0) | (col_i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln220_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln236_fu_1095_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln236_fu_1095_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln258_fu_1471_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln278_fu_1561_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln278_fu_1561_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((icmp_ln289_fu_1627_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln289_fu_1627_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((icmp_ln299_fu_1693_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((icmp_ln299_fu_1693_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if ((~((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_i_V_0_address1 = zext_ln236_fu_1145_p1;

assign A_i_V_0_d1 = matA_V_0_q1;

assign A_i_V_1_address1 = zext_ln236_fu_1145_p1;

assign A_i_V_1_d1 = matA_V_1_q1;

assign A_j_V_0_address1 = zext_ln236_fu_1145_p1;

assign A_j_V_0_d1 = matA_V_0_q0;

assign A_j_V_1_address1 = zext_ln236_fu_1145_p1;

assign A_j_V_1_d1 = matA_V_1_q0;

assign add_ln220_fu_1058_p2 = (t_reg_976 + 5'd1);

assign add_ln236_fu_1089_p2 = (ap_phi_mux_k_phi_fu_991_p4 + 7'd1);

assign add_ln245_fu_1123_p2 = (sub_ln245_fu_1117_p2 + col_i_load_cast_reg_1792);

assign add_ln246_fu_1134_p2 = (sub_ln245_fu_1117_p2 + zext_ln236_1_reg_1797);

assign add_ln258_fu_1465_p2 = (k_1_reg_999 + 5'd1);

assign add_ln261_fu_1549_p2 = (idx_V_reg_1010 + 4'd2);

assign add_ln278_fu_1555_p2 = (ap_phi_mux_k_2_phi_fu_1026_p4 + 4'd1);

assign add_ln289_fu_1621_p2 = (ap_phi_mux_k_3_phi_fu_1038_p4 + 3'd1);

assign add_ln299_fu_1687_p2 = (ap_phi_mux_k_4_phi_fu_1050_p4 + 2'd1);

assign add_ln415_10_fu_1425_p2 = (trunc_ln708_s_fu_1412_p4 + zext_ln415_10_fu_1422_p1);

assign add_ln415_11_fu_1458_p2 = (trunc_ln708_1_fu_1445_p4 + zext_ln415_11_fu_1455_p1);

assign add_ln415_7_fu_1326_p2 = (trunc_ln708_7_fu_1313_p4 + zext_ln415_7_fu_1323_p1);

assign add_ln415_8_fu_1359_p2 = (trunc_ln708_8_fu_1346_p4 + zext_ln415_8_fu_1356_p1);

assign add_ln415_9_fu_1392_p2 = (trunc_ln708_9_fu_1379_p4 + zext_ln415_9_fu_1389_p1);

assign add_ln415_fu_1293_p2 = (trunc_ln_fu_1280_p4 + zext_ln415_fu_1290_p1);

assign add_ln703_1_fu_1514_p2 = (beta_acc_V_0_q0 + beta_sum_V_q1);

assign add_ln703_2_fu_1521_p2 = (gamma_acc_V_0_q0 + gamma_sum_V_q1);

assign add_ln703_fu_1507_p2 = (alpha_acc_V_0_q0 + alpha_sum_V_q1);

assign alpha_strm1_din = (alpha_sum_tmp2_V_q0 + alpha_sum_tmp2_V_q1);

assign alpha_sum_V_d1 = (alpha_acc_V_1_q0 + alpha_sum_V_q0);

assign alpha_sum_tmp0_V_address1 = zext_ln291_fu_1639_p1;

assign alpha_sum_tmp0_V_d0 = (alpha_sum_V_q1 + alpha_sum_V_q0);

assign alpha_sum_tmp1_V_address1 = zext_ln301_fu_1705_p1;

assign alpha_sum_tmp1_V_d0 = (alpha_sum_tmp0_V_q0 + alpha_sum_tmp0_V_q1);

assign alpha_sum_tmp2_V_address1 = 64'd0;

assign alpha_sum_tmp2_V_d0 = (alpha_sum_tmp1_V_q0 + alpha_sum_tmp1_V_q1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp1 = ((ap_ST_fsm_pp1_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp1_stage0_subdone));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5 = ((1'b1 == ap_block_pp5_stage0_subdone) & (ap_ST_fsm_pp5_stage0 == ap_CS_fsm));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((col_j_empty_n == 1'b0) | (col_i_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state11_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20 = ((gamma_strm3_full_n == 1'b0) | (beta_strm2_full_n == 1'b0) | (1'b0 == alpha_strm1_full_n));
end

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_124 = (icmp_ln236_reg_1807 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_129 = (icmp_ln236_reg_1807 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_133 = (icmp_ln236_reg_1807 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_144 = (icmp_ln236_reg_1807 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_149 = (icmp_ln236_reg_1807 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (icmp_ln236_reg_1807 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_158 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_164 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_165 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_171 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_172 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_178 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_179 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_185 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_186 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_192 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_193 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_199 = (icmp_ln236_reg_1807_pp1_iter1_reg == 1'd0);
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp1_iter1_stage0 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state6_pp1_iter2_stage0 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign beta_strm2_din = (beta_sum_tmp2_V_q0 + beta_sum_tmp2_V_q1);

assign beta_sum_V_d1 = (beta_acc_V_1_q0 + beta_sum_V_q0);

assign beta_sum_tmp0_V_address1 = zext_ln291_fu_1639_p1;

assign beta_sum_tmp0_V_d0 = (beta_sum_V_q1 + beta_sum_V_q0);

assign beta_sum_tmp1_V_address1 = zext_ln301_fu_1705_p1;

assign beta_sum_tmp1_V_d0 = (beta_sum_tmp0_V_q0 + beta_sum_tmp0_V_q1);

assign beta_sum_tmp2_V_address1 = 64'd0;

assign beta_sum_tmp2_V_d0 = (beta_sum_tmp1_V_q0 + beta_sum_tmp1_V_q1);

assign col_i_load_cast_fu_1083_p1 = col_i_read_reg_1774;

assign empty_fu_1153_p1 = k_reg_987[3:0];

assign gamma_strm3_din = (gamma_sum_tmp2_V_q0 + gamma_sum_tmp2_V_q1);

assign gamma_sum_V_d1 = (gamma_acc_V_1_q0 + gamma_sum_V_q0);

assign gamma_sum_tmp0_V_address1 = zext_ln291_fu_1639_p1;

assign gamma_sum_tmp0_V_d0 = (gamma_sum_V_q1 + gamma_sum_V_q0);

assign gamma_sum_tmp1_V_address1 = zext_ln301_fu_1705_p1;

assign gamma_sum_tmp1_V_d0 = (gamma_sum_tmp0_V_q0 + gamma_sum_tmp0_V_q1);

assign gamma_sum_tmp2_V_address1 = 64'd0;

assign gamma_sum_tmp2_V_d0 = (gamma_sum_tmp1_V_q0 + gamma_sum_tmp1_V_q1);

assign icmp_ln220_fu_1064_p2 = ((t_reg_976 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_1095_p2 = ((ap_phi_mux_k_phi_fu_991_p4 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_1471_p2 = ((k_1_reg_999 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_1561_p2 = ((ap_phi_mux_k_2_phi_fu_1026_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_1627_p2 = ((ap_phi_mux_k_3_phi_fu_1038_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_1693_p2 = ((ap_phi_mux_k_4_phi_fu_1050_p4 == 2'd2) ? 1'b1 : 1'b0);

assign idxprom9425_i_i_fu_1157_p1 = empty_fu_1153_p1;

assign lhs_11_fu_1399_p3 = {{beta_acc_V_1_q0}, {43'd0}};

assign lhs_13_fu_1432_p3 = {{gamma_acc_V_1_q0}, {43'd0}};

assign lhs_3_fu_1267_p3 = {{alpha_acc_V_0_q0}, {43'd0}};

assign lhs_5_fu_1300_p3 = {{beta_acc_V_0_q0}, {43'd0}};

assign lhs_7_fu_1333_p3 = {{gamma_acc_V_0_q0}, {43'd0}};

assign lhs_9_fu_1366_p3 = {{alpha_acc_V_1_q0}, {43'd0}};

assign matA_V_0_address0 = zext_ln246_fu_1139_p1;

assign matA_V_0_address1 = zext_ln245_1_fu_1128_p1;

assign matA_V_1_address0 = zext_ln246_fu_1139_p1;

assign matA_V_1_address1 = zext_ln245_1_fu_1128_p1;

assign or_ln280_fu_1580_p2 = (shl_ln280_fu_1567_p2 | 4'd1);

assign or_ln291_fu_1646_p2 = (shl_ln291_fu_1633_p2 | 3'd1);

assign or_ln301_fu_1712_p2 = (shl_ln301_fu_1699_p2 | 2'd1);

assign or_ln691_fu_1494_p2 = (idx_V_reg_1010 | 4'd1);

assign r_V_33_fu_1171_p0 = sext_ln1115_fu_1167_p1;

assign r_V_33_fu_1171_p1 = sext_ln1115_fu_1167_p1;

assign r_V_35_fu_1189_p0 = sext_ln1115_1_fu_1185_p1;

assign r_V_35_fu_1189_p1 = sext_ln1115_1_fu_1185_p1;

assign r_V_36_fu_1203_p0 = sext_ln1115_1_fu_1185_p1;

assign r_V_36_fu_1203_p1 = sext_ln1115_fu_1167_p1;

assign r_V_38_fu_1221_p0 = sext_ln1115_2_fu_1217_p1;

assign r_V_38_fu_1221_p1 = sext_ln1115_2_fu_1217_p1;

assign r_V_40_fu_1239_p0 = sext_ln1115_3_fu_1235_p1;

assign r_V_40_fu_1239_p1 = sext_ln1115_3_fu_1235_p1;

assign r_V_41_fu_1253_p0 = sext_ln1115_3_fu_1235_p1;

assign r_V_41_fu_1253_p1 = sext_ln1115_2_fu_1217_p1;

assign ret_V_10_fu_1407_p2 = (lhs_11_fu_1399_p3 + r_V_40_reg_1895);

assign ret_V_11_fu_1440_p2 = (lhs_13_fu_1432_p3 + r_V_41_reg_1911);

assign ret_V_7_fu_1308_p2 = (lhs_5_fu_1300_p3 + r_V_35_reg_1847);

assign ret_V_8_fu_1341_p2 = (lhs_7_fu_1333_p3 + r_V_36_reg_1863);

assign ret_V_9_fu_1374_p2 = (lhs_9_fu_1366_p3 + r_V_38_reg_1879);

assign ret_V_fu_1275_p2 = (lhs_3_fu_1267_p3 + r_V_33_reg_1831);

assign sext_ln1115_1_fu_1185_p0 = matA_V_0_q0;

assign sext_ln1115_1_fu_1185_p1 = sext_ln1115_1_fu_1185_p0;

assign sext_ln1115_2_fu_1217_p0 = matA_V_1_q1;

assign sext_ln1115_2_fu_1217_p1 = sext_ln1115_2_fu_1217_p0;

assign sext_ln1115_3_fu_1235_p0 = matA_V_1_q0;

assign sext_ln1115_3_fu_1235_p1 = sext_ln1115_3_fu_1235_p0;

assign sext_ln1115_fu_1167_p0 = matA_V_0_q1;

assign sext_ln1115_fu_1167_p1 = sext_ln1115_fu_1167_p0;

assign shl_ln280_fu_1567_p2 = ap_phi_mux_k_2_phi_fu_1026_p4 << 4'd1;

assign shl_ln291_fu_1633_p2 = ap_phi_mux_k_3_phi_fu_1038_p4 << 3'd1;

assign shl_ln301_fu_1699_p2 = ap_phi_mux_k_4_phi_fu_1050_p4 << 2'd1;

assign sub_ln245_fu_1117_p2 = (tmp_cast_fu_1109_p3 - zext_ln245_fu_1101_p1);

assign tmp_cast_fu_1109_p3 = {{trunc_ln245_fu_1105_p1}, {2'd0}};

assign trunc_ln245_fu_1105_p1 = ap_phi_mux_k_phi_fu_991_p4[5:0];

assign trunc_ln708_1_fu_1445_p4 = {{ret_V_11_fu_1440_p2[106:43]}};

assign trunc_ln708_7_fu_1313_p4 = {{ret_V_7_fu_1308_p2[106:43]}};

assign trunc_ln708_8_fu_1346_p4 = {{ret_V_8_fu_1341_p2[106:43]}};

assign trunc_ln708_9_fu_1379_p4 = {{ret_V_9_fu_1374_p2[106:43]}};

assign trunc_ln708_s_fu_1412_p4 = {{ret_V_10_fu_1407_p2[106:43]}};

assign trunc_ln_fu_1280_p4 = {{ret_V_fu_1275_p2[106:43]}};

assign zext_ln220_fu_1070_p1 = t_reg_976;

assign zext_ln236_1_fu_1086_p1 = col_j_read_reg_1779;

assign zext_ln236_fu_1145_p1 = k_reg_987;

assign zext_ln245_1_fu_1128_p1 = add_ln245_fu_1123_p2;

assign zext_ln245_fu_1101_p1 = ap_phi_mux_k_phi_fu_991_p4;

assign zext_ln246_fu_1139_p1 = add_ln246_fu_1134_p2;

assign zext_ln258_fu_1477_p1 = k_1_reg_999;

assign zext_ln278_fu_1593_p1 = k_2_reg_1022;

assign zext_ln280_fu_1573_p1 = shl_ln280_fu_1567_p2;

assign zext_ln289_fu_1659_p1 = k_3_reg_1034;

assign zext_ln291_fu_1639_p1 = shl_ln291_fu_1633_p2;

assign zext_ln299_fu_1725_p1 = k_4_reg_1046;

assign zext_ln301_fu_1705_p1 = shl_ln301_fu_1699_p2;

assign zext_ln415_10_fu_1422_p1 = tmp_21_reg_1906;

assign zext_ln415_11_fu_1455_p1 = tmp_22_reg_1922;

assign zext_ln415_7_fu_1323_p1 = tmp_18_reg_1858;

assign zext_ln415_8_fu_1356_p1 = tmp_19_reg_1874;

assign zext_ln415_9_fu_1389_p1 = tmp_20_reg_1890;

assign zext_ln415_fu_1290_p1 = tmp_reg_1842;

assign zext_ln534_1_fu_1500_p1 = or_ln691_fu_1494_p2;

assign zext_ln534_fu_1487_p1 = idx_V_reg_1010;

assign zext_ln703_1_fu_1652_p1 = or_ln291_fu_1646_p2;

assign zext_ln703_2_fu_1718_p1 = or_ln301_fu_1712_p2;

assign zext_ln703_fu_1586_p1 = or_ln280_fu_1580_p2;

always @ (posedge ap_clk) begin
    col_i_load_cast_reg_1792[7:2] <= 6'b000000;
    zext_ln236_1_reg_1797[7:2] <= 6'b000000;
    alpha_sum_V_addr_2_reg_1968[0] <= 1'b1;
    beta_sum_V_addr_2_reg_1979[0] <= 1'b1;
    gamma_sum_V_addr_2_reg_1990[0] <= 1'b1;
end

endmodule //LLSSineReconstruction_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s
