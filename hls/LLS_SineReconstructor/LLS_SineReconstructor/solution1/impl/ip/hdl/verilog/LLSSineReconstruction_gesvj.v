// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_gesvj (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sine_reconstructor_16_873_dout,
        sine_reconstructor_16_873_empty_n,
        sine_reconstructor_16_873_read,
        sine_reconstructor_16_873_din,
        sine_reconstructor_16_873_full_n,
        sine_reconstructor_16_873_write,
        sine_reconstructor_16_974_dout,
        sine_reconstructor_16_974_empty_n,
        sine_reconstructor_16_974_read,
        sine_reconstructor_16_974_din,
        sine_reconstructor_16_974_full_n,
        sine_reconstructor_16_974_write,
        sine_reconstructor_16_1075_dout,
        sine_reconstructor_16_1075_empty_n,
        sine_reconstructor_16_1075_read,
        sine_reconstructor_16_1075_din,
        sine_reconstructor_16_1075_full_n,
        sine_reconstructor_16_1075_write,
        sine_reconstructor_16_1176_dout,
        sine_reconstructor_16_1176_empty_n,
        sine_reconstructor_16_1176_read,
        sine_reconstructor_16_1176_din,
        sine_reconstructor_16_1176_full_n,
        sine_reconstructor_16_1176_write,
        sine_reconstructor_16_1277_dout,
        sine_reconstructor_16_1277_empty_n,
        sine_reconstructor_16_1277_read,
        sine_reconstructor_16_1277_din,
        sine_reconstructor_16_1277_full_n,
        sine_reconstructor_16_1277_write,
        sine_reconstructor_16_1378_dout,
        sine_reconstructor_16_1378_empty_n,
        sine_reconstructor_16_1378_read,
        sine_reconstructor_16_1378_din,
        sine_reconstructor_16_1378_full_n,
        sine_reconstructor_16_1378_write,
        this_matA_0_address0,
        this_matA_0_ce0,
        this_matA_0_we0,
        this_matA_0_d0,
        this_matA_0_q0,
        this_matA_0_address1,
        this_matA_0_ce1,
        this_matA_0_q1,
        this_matU_address0,
        this_matU_ce0,
        this_matU_we0,
        this_matU_d0,
        this_matU_q0,
        this_matV_0_address0,
        this_matV_0_ce0,
        this_matV_0_we0,
        this_matV_0_d0,
        this_matV_0_q0,
        this_matV_0_address1,
        this_matV_0_ce1,
        this_matV_0_q1,
        this_A_i_0_address0,
        this_A_i_0_ce0,
        this_A_i_0_we0,
        this_A_i_0_d0,
        this_A_i_0_q0,
        this_A_j_0_address0,
        this_A_j_0_ce0,
        this_A_j_0_we0,
        this_A_j_0_d0,
        this_A_j_0_q0,
        this_V_i_0_address0,
        this_V_i_0_ce0,
        this_V_i_0_we0,
        this_V_i_0_d0,
        this_V_i_0_q0,
        this_V_j_0_address0,
        this_V_j_0_ce0,
        this_V_j_0_we0,
        this_V_j_0_d0,
        this_V_j_0_q0,
        this_sigma_address0,
        this_sigma_ce0,
        this_sigma_we0,
        this_sigma_d0,
        this_sigma_q0,
        this_alpha_acc_0_address0,
        this_alpha_acc_0_ce0,
        this_alpha_acc_0_we0,
        this_alpha_acc_0_d0,
        this_alpha_acc_0_q0,
        this_beta_acc_0_address0,
        this_beta_acc_0_ce0,
        this_beta_acc_0_we0,
        this_beta_acc_0_d0,
        this_beta_acc_0_q0,
        this_gamma_acc_0_address0,
        this_gamma_acc_0_ce0,
        this_gamma_acc_0_we0,
        this_gamma_acc_0_d0,
        this_gamma_acc_0_q0,
        this_alpha_sum_address0,
        this_alpha_sum_ce0,
        this_alpha_sum_we0,
        this_alpha_sum_d0,
        this_alpha_sum_q0,
        this_alpha_sum_address1,
        this_alpha_sum_ce1,
        this_alpha_sum_q1,
        this_beta_sum_address0,
        this_beta_sum_ce0,
        this_beta_sum_we0,
        this_beta_sum_d0,
        this_beta_sum_q0,
        this_beta_sum_address1,
        this_beta_sum_ce1,
        this_beta_sum_q1,
        this_gamma_sum_address0,
        this_gamma_sum_ce0,
        this_gamma_sum_we0,
        this_gamma_sum_d0,
        this_gamma_sum_q0,
        this_gamma_sum_address1,
        this_gamma_sum_ce1,
        this_gamma_sum_q1,
        n,
        A_address0,
        A_ce0,
        A_q0,
        U_address0,
        U_ce0,
        U_we0,
        U_d0,
        S_address0,
        S_ce0,
        S_we0,
        S_d0,
        V_address0,
        V_ce0,
        V_we0,
        V_d0
);

parameter    ap_ST_fsm_state1 = 159'd1;
parameter    ap_ST_fsm_state2 = 159'd2;
parameter    ap_ST_fsm_state3 = 159'd4;
parameter    ap_ST_fsm_state4 = 159'd8;
parameter    ap_ST_fsm_state5 = 159'd16;
parameter    ap_ST_fsm_state6 = 159'd32;
parameter    ap_ST_fsm_state7 = 159'd64;
parameter    ap_ST_fsm_state8 = 159'd128;
parameter    ap_ST_fsm_state9 = 159'd256;
parameter    ap_ST_fsm_state10 = 159'd512;
parameter    ap_ST_fsm_state11 = 159'd1024;
parameter    ap_ST_fsm_state12 = 159'd2048;
parameter    ap_ST_fsm_state13 = 159'd4096;
parameter    ap_ST_fsm_state14 = 159'd8192;
parameter    ap_ST_fsm_state15 = 159'd16384;
parameter    ap_ST_fsm_state16 = 159'd32768;
parameter    ap_ST_fsm_state17 = 159'd65536;
parameter    ap_ST_fsm_state18 = 159'd131072;
parameter    ap_ST_fsm_state19 = 159'd262144;
parameter    ap_ST_fsm_state20 = 159'd524288;
parameter    ap_ST_fsm_state21 = 159'd1048576;
parameter    ap_ST_fsm_state22 = 159'd2097152;
parameter    ap_ST_fsm_state23 = 159'd4194304;
parameter    ap_ST_fsm_state24 = 159'd8388608;
parameter    ap_ST_fsm_state25 = 159'd16777216;
parameter    ap_ST_fsm_state26 = 159'd33554432;
parameter    ap_ST_fsm_state27 = 159'd67108864;
parameter    ap_ST_fsm_state28 = 159'd134217728;
parameter    ap_ST_fsm_state29 = 159'd268435456;
parameter    ap_ST_fsm_state30 = 159'd536870912;
parameter    ap_ST_fsm_state31 = 159'd1073741824;
parameter    ap_ST_fsm_state32 = 159'd2147483648;
parameter    ap_ST_fsm_state33 = 159'd4294967296;
parameter    ap_ST_fsm_state34 = 159'd8589934592;
parameter    ap_ST_fsm_state35 = 159'd17179869184;
parameter    ap_ST_fsm_state36 = 159'd34359738368;
parameter    ap_ST_fsm_state37 = 159'd68719476736;
parameter    ap_ST_fsm_state38 = 159'd137438953472;
parameter    ap_ST_fsm_state39 = 159'd274877906944;
parameter    ap_ST_fsm_state40 = 159'd549755813888;
parameter    ap_ST_fsm_state41 = 159'd1099511627776;
parameter    ap_ST_fsm_state42 = 159'd2199023255552;
parameter    ap_ST_fsm_state43 = 159'd4398046511104;
parameter    ap_ST_fsm_state44 = 159'd8796093022208;
parameter    ap_ST_fsm_state45 = 159'd17592186044416;
parameter    ap_ST_fsm_state46 = 159'd35184372088832;
parameter    ap_ST_fsm_state47 = 159'd70368744177664;
parameter    ap_ST_fsm_state48 = 159'd140737488355328;
parameter    ap_ST_fsm_state49 = 159'd281474976710656;
parameter    ap_ST_fsm_state50 = 159'd562949953421312;
parameter    ap_ST_fsm_state51 = 159'd1125899906842624;
parameter    ap_ST_fsm_state52 = 159'd2251799813685248;
parameter    ap_ST_fsm_state53 = 159'd4503599627370496;
parameter    ap_ST_fsm_state54 = 159'd9007199254740992;
parameter    ap_ST_fsm_state55 = 159'd18014398509481984;
parameter    ap_ST_fsm_state56 = 159'd36028797018963968;
parameter    ap_ST_fsm_state57 = 159'd72057594037927936;
parameter    ap_ST_fsm_state58 = 159'd144115188075855872;
parameter    ap_ST_fsm_state59 = 159'd288230376151711744;
parameter    ap_ST_fsm_state60 = 159'd576460752303423488;
parameter    ap_ST_fsm_state61 = 159'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 159'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 159'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 159'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 159'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 159'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 159'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 159'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 159'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 159'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 159'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 159'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 159'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 159'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 159'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 159'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 159'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 159'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 159'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 159'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 159'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 159'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 159'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 159'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 159'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 159'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 159'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 159'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 159'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 159'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 159'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 159'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 159'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 159'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 159'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 159'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 159'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 159'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 159'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 159'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 159'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 159'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 159'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 159'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 159'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 159'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 159'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 159'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 159'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 159'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 159'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 159'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 159'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 159'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 159'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 159'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 159'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 159'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 159'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 159'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 159'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 159'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 159'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 159'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 159'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 159'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 159'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 159'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 159'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 159'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 159'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 159'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 159'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 159'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 159'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 159'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 159'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 159'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 159'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 159'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 159'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 159'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 159'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 159'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 159'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 159'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 159'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 159'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 159'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 159'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 159'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 159'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 159'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 159'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 159'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 159'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 159'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 159'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 159'd365375409332725729550921208179070754913983135744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [59:0] sine_reconstructor_16_873_dout;
input   sine_reconstructor_16_873_empty_n;
output   sine_reconstructor_16_873_read;
output  [59:0] sine_reconstructor_16_873_din;
input   sine_reconstructor_16_873_full_n;
output   sine_reconstructor_16_873_write;
input  [59:0] sine_reconstructor_16_974_dout;
input   sine_reconstructor_16_974_empty_n;
output   sine_reconstructor_16_974_read;
output  [59:0] sine_reconstructor_16_974_din;
input   sine_reconstructor_16_974_full_n;
output   sine_reconstructor_16_974_write;
input  [59:0] sine_reconstructor_16_1075_dout;
input   sine_reconstructor_16_1075_empty_n;
output   sine_reconstructor_16_1075_read;
output  [59:0] sine_reconstructor_16_1075_din;
input   sine_reconstructor_16_1075_full_n;
output   sine_reconstructor_16_1075_write;
input  [59:0] sine_reconstructor_16_1176_dout;
input   sine_reconstructor_16_1176_empty_n;
output   sine_reconstructor_16_1176_read;
output  [59:0] sine_reconstructor_16_1176_din;
input   sine_reconstructor_16_1176_full_n;
output   sine_reconstructor_16_1176_write;
input  [59:0] sine_reconstructor_16_1277_dout;
input   sine_reconstructor_16_1277_empty_n;
output   sine_reconstructor_16_1277_read;
output  [59:0] sine_reconstructor_16_1277_din;
input   sine_reconstructor_16_1277_full_n;
output   sine_reconstructor_16_1277_write;
input  [59:0] sine_reconstructor_16_1378_dout;
input   sine_reconstructor_16_1378_empty_n;
output   sine_reconstructor_16_1378_read;
output  [59:0] sine_reconstructor_16_1378_din;
input   sine_reconstructor_16_1378_full_n;
output   sine_reconstructor_16_1378_write;
output  [7:0] this_matA_0_address0;
output   this_matA_0_ce0;
output   this_matA_0_we0;
output  [59:0] this_matA_0_d0;
input  [59:0] this_matA_0_q0;
output  [7:0] this_matA_0_address1;
output   this_matA_0_ce1;
input  [59:0] this_matA_0_q1;
output  [12:0] this_matU_address0;
output   this_matU_ce0;
output   this_matU_we0;
output  [59:0] this_matU_d0;
input  [59:0] this_matU_q0;
output  [3:0] this_matV_0_address0;
output   this_matV_0_ce0;
output   this_matV_0_we0;
output  [59:0] this_matV_0_d0;
input  [59:0] this_matV_0_q0;
output  [3:0] this_matV_0_address1;
output   this_matV_0_ce1;
input  [59:0] this_matV_0_q1;
output  [6:0] this_A_i_0_address0;
output   this_A_i_0_ce0;
output   this_A_i_0_we0;
output  [59:0] this_A_i_0_d0;
input  [59:0] this_A_i_0_q0;
output  [6:0] this_A_j_0_address0;
output   this_A_j_0_ce0;
output   this_A_j_0_we0;
output  [59:0] this_A_j_0_d0;
input  [59:0] this_A_j_0_q0;
output  [1:0] this_V_i_0_address0;
output   this_V_i_0_ce0;
output   this_V_i_0_we0;
output  [59:0] this_V_i_0_d0;
input  [59:0] this_V_i_0_q0;
output  [1:0] this_V_j_0_address0;
output   this_V_j_0_ce0;
output   this_V_j_0_we0;
output  [59:0] this_V_j_0_d0;
input  [59:0] this_V_j_0_q0;
output  [1:0] this_sigma_address0;
output   this_sigma_ce0;
output   this_sigma_we0;
output  [59:0] this_sigma_d0;
input  [59:0] this_sigma_q0;
output  [3:0] this_alpha_acc_0_address0;
output   this_alpha_acc_0_ce0;
output   this_alpha_acc_0_we0;
output  [59:0] this_alpha_acc_0_d0;
input  [59:0] this_alpha_acc_0_q0;
output  [3:0] this_beta_acc_0_address0;
output   this_beta_acc_0_ce0;
output   this_beta_acc_0_we0;
output  [59:0] this_beta_acc_0_d0;
input  [59:0] this_beta_acc_0_q0;
output  [3:0] this_gamma_acc_0_address0;
output   this_gamma_acc_0_ce0;
output   this_gamma_acc_0_we0;
output  [59:0] this_gamma_acc_0_d0;
input  [59:0] this_gamma_acc_0_q0;
output  [3:0] this_alpha_sum_address0;
output   this_alpha_sum_ce0;
output   this_alpha_sum_we0;
output  [59:0] this_alpha_sum_d0;
input  [59:0] this_alpha_sum_q0;
output  [3:0] this_alpha_sum_address1;
output   this_alpha_sum_ce1;
input  [59:0] this_alpha_sum_q1;
output  [3:0] this_beta_sum_address0;
output   this_beta_sum_ce0;
output   this_beta_sum_we0;
output  [59:0] this_beta_sum_d0;
input  [59:0] this_beta_sum_q0;
output  [3:0] this_beta_sum_address1;
output   this_beta_sum_ce1;
input  [59:0] this_beta_sum_q1;
output  [3:0] this_gamma_sum_address0;
output   this_gamma_sum_ce0;
output   this_gamma_sum_we0;
output  [59:0] this_gamma_sum_d0;
input  [59:0] this_gamma_sum_q0;
output  [3:0] this_gamma_sum_address1;
output   this_gamma_sum_ce1;
input  [59:0] this_gamma_sum_q1;
input  [1:0] n;
output  [7:0] A_address0;
output   A_ce0;
input  [59:0] A_q0;
output  [12:0] U_address0;
output   U_ce0;
output   U_we0;
output  [59:0] U_d0;
output  [1:0] S_address0;
output   S_ce0;
output   S_we0;
output  [59:0] S_d0;
output  [3:0] V_address0;
output   V_ce0;
output   V_we0;
output  [59:0] V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sine_reconstructor_16_873_read;
reg sine_reconstructor_16_873_write;
reg sine_reconstructor_16_974_read;
reg sine_reconstructor_16_974_write;
reg sine_reconstructor_16_1075_read;
reg sine_reconstructor_16_1075_write;
reg sine_reconstructor_16_1176_read;
reg sine_reconstructor_16_1176_write;
reg sine_reconstructor_16_1277_read;
reg sine_reconstructor_16_1277_write;
reg sine_reconstructor_16_1378_read;
reg sine_reconstructor_16_1378_write;
reg[7:0] this_matA_0_address0;
reg this_matA_0_ce0;
reg this_matA_0_we0;
reg[59:0] this_matA_0_d0;
reg this_matA_0_ce1;
reg[12:0] this_matU_address0;
reg this_matU_ce0;
reg this_matU_we0;
reg[59:0] this_matU_d0;
reg[3:0] this_matV_0_address0;
reg this_matV_0_ce0;
reg this_matV_0_we0;
reg[59:0] this_matV_0_d0;
reg this_matV_0_ce1;
reg[6:0] this_A_i_0_address0;
reg this_A_i_0_ce0;
reg this_A_i_0_we0;
reg[6:0] this_A_j_0_address0;
reg this_A_j_0_ce0;
reg this_A_j_0_we0;
reg[1:0] this_V_i_0_address0;
reg this_V_i_0_ce0;
reg this_V_i_0_we0;
reg[1:0] this_V_j_0_address0;
reg this_V_j_0_ce0;
reg this_V_j_0_we0;
reg[1:0] this_sigma_address0;
reg this_sigma_ce0;
reg this_sigma_we0;
reg[59:0] this_sigma_d0;
reg A_ce0;
reg U_ce0;
reg U_we0;
reg S_ce0;
reg S_we0;
reg V_ce0;
reg V_we0;

(* fsm_encoding = "none" *) reg   [158:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sine_reconstructor_16_873_i_blk_n;
wire    ap_CS_fsm_state14;
reg    sine_reconstructor_16_974_i_blk_n;
reg    sine_reconstructor_16_1075_i_blk_n;
reg    sine_reconstructor_16_1176_i_blk_n;
wire    ap_CS_fsm_state16;
reg    sine_reconstructor_16_1277_i_blk_n;
reg    sine_reconstructor_16_1378_i_blk_n;
wire   [1:0] add_ln126_fu_1079_p2;
wire    ap_CS_fsm_state2;
wire   [6:0] add_ln134_fu_1095_p2;
reg   [6:0] add_ln134_reg_2905;
wire    ap_CS_fsm_state3;
wire   [12:0] empty_fu_1125_p2;
reg   [12:0] empty_reg_2910;
reg   [12:0] this_matU_addr_reg_2915;
wire   [6:0] add_ln136_fu_1148_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] add_ln149_fu_1180_p2;
reg   [1:0] add_ln149_reg_2934;
wire    ap_CS_fsm_state5;
wire   [3:0] empty_149_fu_1203_p2;
reg   [3:0] empty_149_reg_2939;
reg   [3:0] this_matV_0_addr_reg_2944;
wire   [7:0] zext_ln167_fu_1214_p1;
reg   [7:0] zext_ln167_reg_2952;
wire   [0:0] icmp_ln149_fu_1209_p2;
wire   [3:0] zext_ln165_fu_1217_p1;
reg   [3:0] zext_ln165_reg_2957;
wire   [1:0] add_ln151_fu_1220_p2;
wire    ap_CS_fsm_state6;
wire   [6:0] add_ln165_fu_1251_p2;
reg   [6:0] add_ln165_reg_2973;
wire    ap_CS_fsm_state7;
wire   [7:0] add_ln165_1_fu_1257_p2;
reg   [7:0] add_ln165_1_reg_2978;
wire   [7:0] sub_ln171_fu_1278_p2;
reg   [7:0] sub_ln171_reg_2983;
wire   [1:0] add_ln167_fu_1290_p2;
reg   [1:0] add_ln167_reg_2991;
wire    ap_CS_fsm_state8;
reg   [7:0] this_matA_0_addr_reg_2996;
wire   [0:0] icmp_ln167_fu_1310_p2;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln1494_fu_1326_p2;
wire   [1:0] j_6_fu_1342_p2;
reg   [1:0] j_6_reg_3032;
wire    ap_CS_fsm_state12;
wire   [1:0] i_10_fu_1354_p2;
wire   [0:0] icmp_ln219_fu_1348_p2;
reg   [59:0] tmp_67_reg_3045;
reg   [59:0] tmp_68_reg_3050;
reg   [59:0] tmp_69_reg_3055;
reg   [59:0] s_V_reg_3060;
reg   [59:0] c_V_reg_3065;
wire   [59:0] select_ln255_fu_1392_p3;
reg   [59:0] select_ln255_reg_3070;
wire   [1:0] add_ln255_fu_1400_p2;
reg   [1:0] add_ln255_reg_3075;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln255_fu_1406_p1;
reg   [63:0] zext_ln255_reg_3080;
wire   [7:0] zext_ln255_1_fu_1410_p1;
reg   [7:0] zext_ln255_1_reg_3085;
wire   [4:0] add_ln259_fu_1419_p2;
wire    ap_CS_fsm_state19;
wire   [6:0] add_ln264_fu_1436_p2;
reg   [6:0] add_ln264_reg_3102;
wire    ap_CS_fsm_state20;
wire   [3:0] empty_150_fu_1480_p1;
reg   [3:0] empty_150_reg_3115;
wire   [0:0] icmp_ln264_fu_1474_p2;
wire   [98:0] r_V_30_fu_1488_p2;
reg   [98:0] r_V_30_reg_3120;
wire    ap_CS_fsm_state21;
reg   [3:0] AUS_accu_V_addr_1_reg_3125;
reg   [0:0] tmp_56_reg_3130;
wire   [3:0] add_ln275_fu_1539_p2;
reg   [3:0] add_ln275_reg_3135;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln275_fu_1545_p1;
reg   [63:0] zext_ln275_reg_3140;
wire   [0:0] icmp_ln275_fu_1549_p2;
wire   [2:0] add_ln282_fu_1584_p2;
reg   [2:0] add_ln282_reg_3158;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln282_fu_1590_p1;
reg   [63:0] zext_ln282_reg_3163;
wire   [0:0] icmp_ln282_fu_1594_p2;
wire   [1:0] add_ln289_fu_1629_p2;
reg   [1:0] add_ln289_reg_3181;
wire    ap_CS_fsm_state27;
wire   [63:0] zext_ln289_fu_1635_p1;
reg   [63:0] zext_ln289_reg_3186;
wire   [0:0] icmp_ln289_fu_1639_p2;
wire   [59:0] accu_s_V_fu_1674_p2;
reg   [59:0] accu_s_V_reg_3204;
wire    ap_CS_fsm_state29;
reg   [0:0] p_Result_109_reg_3211;
wire   [0:0] icmp_ln935_fu_1688_p2;
reg   [0:0] icmp_ln935_reg_3217;
wire    ap_CS_fsm_state30;
wire   [59:0] tmp_V_11_fu_1698_p3;
reg   [59:0] tmp_V_11_reg_3222;
wire   [31:0] sub_ln944_fu_1734_p2;
reg   [31:0] sub_ln944_reg_3228;
wire   [0:0] icmp_ln954_fu_1832_p2;
reg   [0:0] icmp_ln954_reg_3234;
wire   [0:0] select_ln954_fu_1852_p3;
reg   [0:0] select_ln954_reg_3239;
wire   [7:0] trunc_ln943_fu_1860_p1;
reg   [7:0] trunc_ln943_reg_3244;
wire   [31:0] select_ln935_fu_1980_p3;
reg   [31:0] select_ln935_reg_3249;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_1066_p2;
reg   [31:0] v_assign_reg_3254;
wire    ap_CS_fsm_state41;
reg   [0:0] p_Result_113_reg_3260;
wire    ap_CS_fsm_state43;
wire   [53:0] zext_ln569_fu_2029_p1;
reg   [53:0] zext_ln569_reg_3266;
wire   [53:0] man_V_7_fu_2033_p2;
reg   [53:0] man_V_7_reg_3271;
wire   [0:0] icmp_ln571_fu_2039_p2;
reg   [0:0] icmp_ln571_reg_3276;
wire   [10:0] trunc_ln575_fu_2051_p1;
reg   [10:0] trunc_ln575_reg_3283;
wire   [0:0] icmp_ln581_fu_2055_p2;
reg   [0:0] icmp_ln581_reg_3288;
wire   [0:0] icmp_ln582_fu_2081_p2;
reg   [0:0] icmp_ln582_reg_3294;
wire   [0:0] icmp_ln585_fu_2087_p2;
reg   [0:0] icmp_ln585_reg_3300;
wire   [0:0] icmp_ln603_fu_2093_p2;
reg   [0:0] icmp_ln603_reg_3305;
wire   [5:0] trunc_ln586_fu_2099_p1;
reg   [5:0] trunc_ln586_reg_3310;
wire   [0:0] icmp_ln591_fu_2103_p2;
reg   [0:0] icmp_ln591_reg_3316;
wire  signed [59:0] accu_s_V_1_fu_2272_p3;
reg  signed [59:0] accu_s_V_1_reg_3321;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln885_fu_2280_p2;
reg   [0:0] icmp_ln885_reg_3330;
wire    ap_CS_fsm_state45;
wire   [0:0] p_Result_115_fu_2285_p3;
reg   [0:0] p_Result_115_reg_3334;
wire   [59:0] m_30_fu_2297_p3;
reg   [59:0] m_30_reg_3339;
wire   [0:0] icmp_ln908_fu_2428_p2;
reg   [0:0] icmp_ln908_reg_3344;
wire   [31:0] sub_ln909_fu_2434_p2;
reg   [31:0] sub_ln909_reg_3349;
wire   [31:0] add_ln908_fu_2440_p2;
reg   [31:0] add_ln908_reg_3354;
wire   [0:0] tobool31_i_i27_fu_2446_p2;
reg   [0:0] tobool31_i_i27_reg_3359;
wire   [10:0] trunc_ln893_fu_2452_p1;
reg   [10:0] trunc_ln893_reg_3364;
wire    ap_CS_fsm_state46;
wire   [0:0] icmp_ln1505_fu_2568_p2;
reg   [0:0] icmp_ln1505_reg_3374;
wire   [0:0] icmp_ln1505_1_fu_2574_p2;
reg   [0:0] icmp_ln1505_1_reg_3379;
wire   [0:0] and_ln1505_fu_2584_p2;
reg   [0:0] and_ln1505_reg_3384;
wire    ap_CS_fsm_state47;
wire  signed [98:0] conv_i_fu_2590_p1;
reg  signed [98:0] conv_i_reg_3388;
wire   [12:0] trunc_ln305_fu_2593_p1;
reg   [12:0] trunc_ln305_reg_3393;
wire   [6:0] add_ln305_fu_2597_p2;
reg   [6:0] add_ln305_reg_3398;
wire    ap_CS_fsm_state48;
reg   [12:0] this_matU_addr_3_reg_3408;
wire    ap_CS_fsm_state49;
wire   [6:0] add_ln318_fu_2706_p2;
reg   [6:0] add_ln318_reg_3421;
wire    ap_CS_fsm_state152;
wire   [12:0] tmp_31_fu_2712_p3;
reg   [12:0] tmp_31_reg_3426;
wire   [12:0] add_ln324_2_fu_2732_p2;
reg   [12:0] add_ln324_2_reg_3431;
wire   [11:0] zext_ln320_fu_2744_p1;
reg   [11:0] zext_ln320_reg_3439;
wire   [0:0] icmp_ln318_fu_2738_p2;
wire   [6:0] add_ln320_fu_2748_p2;
reg   [6:0] add_ln320_reg_3444;
wire    ap_CS_fsm_state153;
wire   [12:0] add_ln324_fu_2787_p2;
reg   [12:0] add_ln324_reg_3457;
wire   [0:0] icmp_ln320_fu_2772_p2;
wire   [1:0] add_ln329_fu_2796_p2;
reg   [1:0] add_ln329_reg_3462;
wire    ap_CS_fsm_state155;
wire   [63:0] zext_ln329_fu_2802_p1;
reg   [63:0] zext_ln329_reg_3467;
wire   [0:0] icmp_ln329_fu_2807_p2;
wire   [1:0] add_ln337_fu_2812_p2;
reg   [1:0] add_ln337_reg_3480;
wire    ap_CS_fsm_state157;
wire   [3:0] add_ln337_1_fu_2818_p2;
reg   [3:0] add_ln337_1_reg_3485;
wire   [3:0] sub_ln343_fu_2835_p2;
reg   [3:0] sub_ln343_reg_3490;
wire   [1:0] add_ln339_fu_2846_p2;
reg   [1:0] add_ln339_reg_3498;
wire    ap_CS_fsm_state158;
wire   [3:0] add_ln343_fu_2871_p2;
reg   [3:0] add_ln343_reg_3511;
wire   [0:0] icmp_ln339_fu_2866_p2;
reg   [3:0] AUS_accu_V_address0;
reg    AUS_accu_V_ce0;
reg    AUS_accu_V_we0;
reg   [59:0] AUS_accu_V_d0;
wire   [59:0] AUS_accu_V_q0;
wire   [3:0] AUS_accu_V_address1;
reg    AUS_accu_V_ce1;
wire   [59:0] AUS_accu_V_q1;
reg   [2:0] AUS_accu_tmp0_V_address0;
reg    AUS_accu_tmp0_V_ce0;
reg    AUS_accu_tmp0_V_we0;
wire   [59:0] AUS_accu_tmp0_V_d0;
wire   [59:0] AUS_accu_tmp0_V_q0;
wire   [2:0] AUS_accu_tmp0_V_address1;
reg    AUS_accu_tmp0_V_ce1;
wire   [59:0] AUS_accu_tmp0_V_q1;
reg   [1:0] AUS_accu_tmp1_V_address0;
reg    AUS_accu_tmp1_V_ce0;
reg    AUS_accu_tmp1_V_we0;
wire   [59:0] AUS_accu_tmp1_V_d0;
wire   [59:0] AUS_accu_tmp1_V_q0;
wire   [1:0] AUS_accu_tmp1_V_address1;
reg    AUS_accu_tmp1_V_ce1;
wire   [59:0] AUS_accu_tmp1_V_q1;
reg   [0:0] AUS_accu_tmp2_V_address0;
reg    AUS_accu_tmp2_V_ce0;
reg    AUS_accu_tmp2_V_we0;
wire   [59:0] AUS_accu_tmp2_V_d0;
wire   [59:0] AUS_accu_tmp2_V_q0;
wire   [0:0] AUS_accu_tmp2_V_address1;
reg    AUS_accu_tmp2_V_ce1;
wire   [59:0] AUS_accu_tmp2_V_q1;
wire   [59:0] grp_svd_and_conv_fu_984_sine_reconstructor_16_1378_din;
wire    grp_svd_and_conv_fu_984_sine_reconstructor_16_1378_write;
wire   [59:0] grp_svd_and_conv_fu_984_sine_reconstructor_16_1176_din;
wire    grp_svd_and_conv_fu_984_sine_reconstructor_16_1176_write;
wire   [59:0] grp_svd_and_conv_fu_984_sine_reconstructor_16_1277_din;
wire    grp_svd_and_conv_fu_984_sine_reconstructor_16_1277_write;
wire    grp_svd_and_conv_fu_984_ap_start;
wire    grp_svd_and_conv_fu_984_ap_done;
wire    grp_svd_and_conv_fu_984_ap_ready;
wire    grp_svd_and_conv_fu_984_ap_idle;
reg    grp_svd_and_conv_fu_984_ap_continue;
wire   [59:0] grp_read_to_2cols_fu_1000_sine_reconstructor_16_873_din;
wire    grp_read_to_2cols_fu_1000_sine_reconstructor_16_873_write;
wire   [59:0] grp_read_to_2cols_fu_1000_sine_reconstructor_16_974_din;
wire    grp_read_to_2cols_fu_1000_sine_reconstructor_16_974_write;
wire   [59:0] grp_read_to_2cols_fu_1000_sine_reconstructor_16_1075_din;
wire    grp_read_to_2cols_fu_1000_sine_reconstructor_16_1075_write;
wire   [3:0] grp_read_to_2cols_fu_1000_this_alpha_acc_0_address0;
wire    grp_read_to_2cols_fu_1000_this_alpha_acc_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_this_alpha_acc_0_d0;
wire    grp_read_to_2cols_fu_1000_this_alpha_acc_0_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_this_alpha_acc_0_address1;
wire    grp_read_to_2cols_fu_1000_this_alpha_acc_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_this_alpha_acc_0_d1;
wire    grp_read_to_2cols_fu_1000_this_alpha_acc_0_we1;
wire   [3:0] grp_read_to_2cols_fu_1000_this_beta_acc_0_address0;
wire    grp_read_to_2cols_fu_1000_this_beta_acc_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_this_beta_acc_0_d0;
wire    grp_read_to_2cols_fu_1000_this_beta_acc_0_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_this_beta_acc_0_address1;
wire    grp_read_to_2cols_fu_1000_this_beta_acc_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_this_beta_acc_0_d1;
wire    grp_read_to_2cols_fu_1000_this_beta_acc_0_we1;
wire   [3:0] grp_read_to_2cols_fu_1000_this_gamma_acc_0_address0;
wire    grp_read_to_2cols_fu_1000_this_gamma_acc_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_this_gamma_acc_0_d0;
wire    grp_read_to_2cols_fu_1000_this_gamma_acc_0_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_this_gamma_acc_0_address1;
wire    grp_read_to_2cols_fu_1000_this_gamma_acc_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_this_gamma_acc_0_d1;
wire    grp_read_to_2cols_fu_1000_this_gamma_acc_0_we1;
wire   [3:0] grp_read_to_2cols_fu_1000_this_alpha_sum_address0;
wire    grp_read_to_2cols_fu_1000_this_alpha_sum_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_this_alpha_sum_d0;
wire    grp_read_to_2cols_fu_1000_this_alpha_sum_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_this_alpha_sum_address1;
wire    grp_read_to_2cols_fu_1000_this_alpha_sum_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_this_alpha_sum_d1;
wire    grp_read_to_2cols_fu_1000_this_alpha_sum_we1;
wire   [3:0] grp_read_to_2cols_fu_1000_this_beta_sum_address0;
wire    grp_read_to_2cols_fu_1000_this_beta_sum_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_this_beta_sum_d0;
wire    grp_read_to_2cols_fu_1000_this_beta_sum_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_this_beta_sum_address1;
wire    grp_read_to_2cols_fu_1000_this_beta_sum_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_this_beta_sum_d1;
wire    grp_read_to_2cols_fu_1000_this_beta_sum_we1;
wire   [3:0] grp_read_to_2cols_fu_1000_this_gamma_sum_address0;
wire    grp_read_to_2cols_fu_1000_this_gamma_sum_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_this_gamma_sum_d0;
wire    grp_read_to_2cols_fu_1000_this_gamma_sum_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_this_gamma_sum_address1;
wire    grp_read_to_2cols_fu_1000_this_gamma_sum_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_this_gamma_sum_d1;
wire    grp_read_to_2cols_fu_1000_this_gamma_sum_we1;
wire   [7:0] grp_read_to_2cols_fu_1000_matA_0_address0;
wire    grp_read_to_2cols_fu_1000_matA_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_matA_0_d0;
wire    grp_read_to_2cols_fu_1000_matA_0_we0;
wire   [7:0] grp_read_to_2cols_fu_1000_matA_0_address1;
wire    grp_read_to_2cols_fu_1000_matA_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_matA_0_d1;
wire    grp_read_to_2cols_fu_1000_matA_0_we1;
wire   [3:0] grp_read_to_2cols_fu_1000_matV_0_address0;
wire    grp_read_to_2cols_fu_1000_matV_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_matV_0_d0;
wire    grp_read_to_2cols_fu_1000_matV_0_we0;
wire   [3:0] grp_read_to_2cols_fu_1000_matV_0_address1;
wire    grp_read_to_2cols_fu_1000_matV_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_matV_0_d1;
wire    grp_read_to_2cols_fu_1000_matV_0_we1;
wire   [6:0] grp_read_to_2cols_fu_1000_A_i_0_address0;
wire    grp_read_to_2cols_fu_1000_A_i_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_A_i_0_d0;
wire    grp_read_to_2cols_fu_1000_A_i_0_we0;
wire   [6:0] grp_read_to_2cols_fu_1000_A_i_0_address1;
wire    grp_read_to_2cols_fu_1000_A_i_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_A_i_0_d1;
wire    grp_read_to_2cols_fu_1000_A_i_0_we1;
wire   [6:0] grp_read_to_2cols_fu_1000_A_j_0_address0;
wire    grp_read_to_2cols_fu_1000_A_j_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_A_j_0_d0;
wire    grp_read_to_2cols_fu_1000_A_j_0_we0;
wire   [6:0] grp_read_to_2cols_fu_1000_A_j_0_address1;
wire    grp_read_to_2cols_fu_1000_A_j_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_A_j_0_d1;
wire    grp_read_to_2cols_fu_1000_A_j_0_we1;
wire   [1:0] grp_read_to_2cols_fu_1000_V_i_0_address0;
wire    grp_read_to_2cols_fu_1000_V_i_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_V_i_0_d0;
wire    grp_read_to_2cols_fu_1000_V_i_0_we0;
wire   [1:0] grp_read_to_2cols_fu_1000_V_i_0_address1;
wire    grp_read_to_2cols_fu_1000_V_i_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_V_i_0_d1;
wire    grp_read_to_2cols_fu_1000_V_i_0_we1;
wire   [1:0] grp_read_to_2cols_fu_1000_V_j_0_address0;
wire    grp_read_to_2cols_fu_1000_V_j_0_ce0;
wire   [59:0] grp_read_to_2cols_fu_1000_V_j_0_d0;
wire    grp_read_to_2cols_fu_1000_V_j_0_we0;
wire   [1:0] grp_read_to_2cols_fu_1000_V_j_0_address1;
wire    grp_read_to_2cols_fu_1000_V_j_0_ce1;
wire   [59:0] grp_read_to_2cols_fu_1000_V_j_0_d1;
wire    grp_read_to_2cols_fu_1000_V_j_0_we1;
wire    grp_read_to_2cols_fu_1000_ap_start;
wire    grp_read_to_2cols_fu_1000_ap_done;
wire    grp_read_to_2cols_fu_1000_ap_ready;
wire    grp_read_to_2cols_fu_1000_ap_idle;
reg    grp_read_to_2cols_fu_1000_ap_continue;
wire   [7:0] grp_update_AV_fu_1039_matA_0_address0;
wire    grp_update_AV_fu_1039_matA_0_ce0;
wire   [59:0] grp_update_AV_fu_1039_matA_0_d0;
wire    grp_update_AV_fu_1039_matA_0_we0;
wire   [7:0] grp_update_AV_fu_1039_matA_0_address1;
wire    grp_update_AV_fu_1039_matA_0_ce1;
wire   [59:0] grp_update_AV_fu_1039_matA_0_d1;
wire    grp_update_AV_fu_1039_matA_0_we1;
wire   [3:0] grp_update_AV_fu_1039_matV_0_address0;
wire    grp_update_AV_fu_1039_matV_0_ce0;
wire   [59:0] grp_update_AV_fu_1039_matV_0_d0;
wire    grp_update_AV_fu_1039_matV_0_we0;
wire   [3:0] grp_update_AV_fu_1039_matV_0_address1;
wire    grp_update_AV_fu_1039_matV_0_ce1;
wire   [59:0] grp_update_AV_fu_1039_matV_0_d1;
wire    grp_update_AV_fu_1039_matV_0_we1;
wire   [6:0] grp_update_AV_fu_1039_A_i_0_address0;
wire    grp_update_AV_fu_1039_A_i_0_ce0;
wire   [59:0] grp_update_AV_fu_1039_A_i_0_d0;
wire    grp_update_AV_fu_1039_A_i_0_we0;
wire   [6:0] grp_update_AV_fu_1039_A_i_0_address1;
wire    grp_update_AV_fu_1039_A_i_0_ce1;
wire   [59:0] grp_update_AV_fu_1039_A_i_0_d1;
wire    grp_update_AV_fu_1039_A_i_0_we1;
wire   [6:0] grp_update_AV_fu_1039_A_j_0_address0;
wire    grp_update_AV_fu_1039_A_j_0_ce0;
wire   [59:0] grp_update_AV_fu_1039_A_j_0_d0;
wire    grp_update_AV_fu_1039_A_j_0_we0;
wire   [6:0] grp_update_AV_fu_1039_A_j_0_address1;
wire    grp_update_AV_fu_1039_A_j_0_ce1;
wire   [59:0] grp_update_AV_fu_1039_A_j_0_d1;
wire    grp_update_AV_fu_1039_A_j_0_we1;
wire   [1:0] grp_update_AV_fu_1039_V_i_0_address0;
wire    grp_update_AV_fu_1039_V_i_0_ce0;
wire   [59:0] grp_update_AV_fu_1039_V_i_0_d0;
wire    grp_update_AV_fu_1039_V_i_0_we0;
wire   [1:0] grp_update_AV_fu_1039_V_i_0_address1;
wire    grp_update_AV_fu_1039_V_i_0_ce1;
wire   [59:0] grp_update_AV_fu_1039_V_i_0_d1;
wire    grp_update_AV_fu_1039_V_i_0_we1;
wire   [1:0] grp_update_AV_fu_1039_V_j_0_address0;
wire    grp_update_AV_fu_1039_V_j_0_ce0;
wire   [59:0] grp_update_AV_fu_1039_V_j_0_d0;
wire    grp_update_AV_fu_1039_V_j_0_we0;
wire   [1:0] grp_update_AV_fu_1039_V_j_0_address1;
wire    grp_update_AV_fu_1039_V_j_0_ce1;
wire   [59:0] grp_update_AV_fu_1039_V_j_0_d1;
wire    grp_update_AV_fu_1039_V_j_0_we1;
wire    grp_update_AV_fu_1039_ap_start;
wire    grp_update_AV_fu_1039_ap_done;
wire    grp_update_AV_fu_1039_ap_ready;
wire    grp_update_AV_fu_1039_ap_idle;
reg    grp_update_AV_fu_1039_ap_continue;
reg   [1:0] j_reg_689;
wire   [0:0] icmp_ln126_fu_1090_p2;
reg   [6:0] i_reg_700;
wire   [0:0] icmp_ln136_fu_1168_p2;
reg   [6:0] j_1_reg_712;
wire   [0:0] icmp_ln134_fu_1142_p2;
reg   [1:0] i_1_reg_723;
wire   [0:0] icmp_ln151_fu_1240_p2;
reg   [1:0] j_2_reg_735;
reg   [6:0] i_2_reg_746;
reg   [7:0] phi_mul_reg_757;
reg   [1:0] j_3_reg_769;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln165_fu_1284_p2;
reg   [59:0] converge_V_reg_780;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln215_fu_1337_p2;
reg   [1:0] i_8_reg_791;
reg   [59:0] converge567_load_04_lcssa637_reg_803;
reg   [1:0] j_5_reg_816;
wire    ap_CS_fsm_state17;
wire    ap_sync_grp_update_AV_fu_1039_ap_ready;
wire    ap_sync_grp_update_AV_fu_1039_ap_done;
reg    ap_block_state17_on_subcall_done;
reg   [59:0] converge567_load_0434_reg_828;
reg   [1:0] j_4_reg_840;
wire   [0:0] icmp_ln305_fu_2671_p2;
reg   [4:0] t_reg_851;
wire   [0:0] icmp_ln255_fu_1414_p2;
wire   [0:0] icmp_ln259_fu_1430_p2;
reg   [6:0] i_6_reg_862;
wire    ap_CS_fsm_state22;
reg   [3:0] t_3_reg_873;
wire    ap_CS_fsm_state24;
reg   [2:0] t_4_reg_884;
wire    ap_CS_fsm_state26;
reg   [1:0] t_5_reg_895;
wire    ap_CS_fsm_state28;
reg   [6:0] i_9_reg_906;
wire    ap_CS_fsm_state151;
reg   [6:0] i_5_reg_917;
reg   [6:0] j_7_reg_928;
wire    ap_CS_fsm_state154;
reg   [1:0] i_7_reg_939;
wire    ap_CS_fsm_state156;
reg   [1:0] i_11_reg_950;
reg   [3:0] phi_mul189_reg_961;
reg   [1:0] j_8_reg_973;
wire    ap_CS_fsm_state159;
wire   [0:0] icmp_ln337_fu_2841_p2;
reg    grp_svd_and_conv_fu_984_ap_start_reg;
reg    ap_block_state14_ignore_call6;
wire    ap_CS_fsm_state15;
wire    ap_sync_grp_svd_and_conv_fu_984_ap_ready;
wire    ap_sync_grp_svd_and_conv_fu_984_ap_done;
reg    ap_block_state15_on_subcall_done;
reg    ap_sync_reg_grp_svd_and_conv_fu_984_ap_ready;
reg    ap_sync_reg_grp_svd_and_conv_fu_984_ap_done;
reg    grp_read_to_2cols_fu_1000_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_sync_grp_read_to_2cols_fu_1000_ap_ready;
wire    ap_sync_grp_read_to_2cols_fu_1000_ap_done;
reg    ap_block_state13_on_subcall_done;
reg    ap_sync_reg_grp_read_to_2cols_fu_1000_ap_ready;
reg    ap_sync_reg_grp_read_to_2cols_fu_1000_ap_done;
reg    grp_update_AV_fu_1039_ap_start_reg;
reg    ap_block_state16_ignore_call16;
reg    ap_sync_reg_grp_update_AV_fu_1039_ap_ready;
reg    ap_sync_reg_grp_update_AV_fu_1039_ap_done;
wire   [63:0] zext_ln126_fu_1085_p1;
wire   [63:0] p_cast_fu_1137_p1;
wire   [63:0] zext_ln143_1_fu_1163_p1;
wire   [63:0] p_shl3_fu_1198_p1;
wire   [63:0] zext_ln158_1_fu_1235_p1;
wire   [63:0] zext_ln171_3_fu_1305_p1;
wire   [63:0] zext_ln171_fu_1321_p1;
wire   [63:0] zext_ln259_fu_1425_p1;
wire   [63:0] zext_ln268_1_fu_1469_p1;
wire   [63:0] zext_ln269_fu_1494_p1;
wire   [63:0] zext_ln278_fu_1561_p1;
wire   [63:0] zext_ln703_fu_1572_p1;
wire   [63:0] zext_ln285_fu_1606_p1;
wire   [63:0] zext_ln703_3_fu_1617_p1;
wire   [63:0] zext_ln292_fu_1651_p1;
wire   [63:0] zext_ln703_4_fu_1662_p1;
wire   [63:0] zext_ln727_1_fu_2630_p1;
wire   [63:0] zext_ln309_1_fu_2666_p1;
wire   [63:0] zext_ln324_4_fu_2763_p1;
wire   [63:0] zext_ln324_fu_2792_p1;
wire   [63:0] zext_ln343_3_fu_2861_p1;
wire   [63:0] zext_ln343_fu_2877_p1;
reg   [31:0] jj_fu_334;
wire   [31:0] jj_1_fu_2677_p2;
reg    ap_block_state14;
reg    ap_block_state16;
wire   [0:0] icmp_ln140_fu_1174_p2;
wire   [59:0] trunc_ln703_fu_2701_p1;
wire   [0:0] icmp_ln155_fu_1245_p2;
wire   [59:0] add_ln415_fu_1532_p2;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state32;
wire   [63:0] grp_fu_1071_p0;
wire   [10:0] tmp_29_fu_1113_p3;
wire   [12:0] tmp_28_fu_1105_p3;
wire   [12:0] tmp_59_cast_fu_1121_p1;
wire   [12:0] i_cast_fu_1101_p1;
wire   [12:0] empty_148_fu_1131_p2;
wire   [12:0] zext_ln143_fu_1154_p1;
wire   [12:0] add_ln143_fu_1158_p2;
wire   [3:0] tmp_30_fu_1190_p3;
wire   [3:0] i_1_cast_fu_1186_p1;
wire   [3:0] zext_ln158_fu_1226_p1;
wire   [3:0] add_ln158_fu_1230_p2;
wire   [5:0] trunc_ln171_fu_1266_p1;
wire   [7:0] tmp_61_cast_fu_1270_p3;
wire   [7:0] zext_ln171_1_fu_1262_p1;
wire   [7:0] zext_ln171_2_fu_1296_p1;
wire   [7:0] add_ln171_1_fu_1300_p2;
wire   [7:0] add_ln171_fu_1315_p2;
wire   [0:0] icmp_ln1498_fu_1360_p2;
wire   [0:0] icmp_ln1498_1_fu_1366_p2;
wire   [0:0] and_ln237_fu_1372_p2;
wire   [59:0] conv_tmp_fu_1378_p3;
wire   [0:0] icmp_ln1494_1_fu_1386_p2;
wire   [5:0] trunc_ln268_fu_1446_p1;
wire   [7:0] tmp_65_cast_fu_1450_p3;
wire   [7:0] zext_ln268_fu_1442_p1;
wire   [7:0] sub_ln268_fu_1458_p2;
wire   [7:0] add_ln268_fu_1464_p2;
wire  signed [59:0] r_V_30_fu_1488_p0;
wire  signed [98:0] sext_ln1115_fu_1484_p1;
wire  signed [59:0] r_V_30_fu_1488_p1;
wire   [98:0] lhs_6_fu_1506_p3;
wire   [98:0] ret_V_fu_1514_p2;
wire   [59:0] trunc_ln_fu_1519_p4;
wire   [59:0] zext_ln415_fu_1529_p1;
wire   [3:0] shl_ln278_fu_1555_p2;
wire   [3:0] or_ln278_fu_1566_p2;
wire   [2:0] shl_ln285_fu_1600_p2;
wire   [2:0] or_ln285_fu_1611_p2;
wire   [1:0] shl_ln292_fu_1645_p2;
wire   [1:0] or_ln292_fu_1656_p2;
wire   [59:0] tmp_V_8_fu_1693_p2;
reg   [59:0] p_Result_s_fu_1704_p4;
wire   [63:0] p_Result_110_fu_1714_p3;
reg   [63:0] tmp_s_fu_1722_p3;
wire   [31:0] l_fu_1730_p1;
wire   [31:0] lsb_index_fu_1740_p2;
wire   [30:0] tmp_58_fu_1746_p4;
wire   [5:0] trunc_ln947_fu_1762_p1;
wire   [5:0] sub_ln947_fu_1766_p2;
wire   [59:0] zext_ln947_fu_1772_p1;
wire   [59:0] zext_ln949_fu_1782_p1;
wire   [59:0] lshr_ln947_fu_1776_p2;
wire   [59:0] shl_ln949_fu_1786_p2;
wire   [59:0] or_ln949_1_fu_1792_p2;
wire   [59:0] and_ln949_fu_1798_p2;
wire   [0:0] tmp_59_fu_1810_p3;
wire   [0:0] p_Result_111_fu_1824_p3;
wire   [0:0] xor_ln949_fu_1818_p2;
wire   [0:0] icmp_ln946_fu_1756_p2;
wire   [0:0] icmp_ln949_fu_1804_p2;
wire   [0:0] select_ln946_fu_1844_p3;
wire   [0:0] and_ln949_1_fu_1838_p2;
wire   [31:0] sub_ln955_fu_1864_p2;
wire   [59:0] zext_ln955_fu_1869_p1;
wire   [31:0] add_ln954_fu_1878_p2;
wire   [59:0] zext_ln954_fu_1883_p1;
wire   [59:0] lshr_ln954_fu_1887_p2;
wire   [59:0] shl_ln955_fu_1873_p2;
wire   [59:0] m_fu_1892_p3;
wire   [60:0] zext_ln951_fu_1899_p1;
wire   [60:0] zext_ln961_fu_1903_p1;
wire   [60:0] m_25_fu_1906_p2;
wire   [59:0] m_s_fu_1912_p4;
wire   [0:0] p_Result_97_fu_1926_p3;
wire   [7:0] sub_ln964_fu_1942_p2;
wire   [7:0] select_ln943_fu_1934_p3;
wire   [7:0] add_ln964_fu_1947_p2;
wire   [63:0] zext_ln951_1_fu_1922_p1;
wire   [8:0] tmp_1_fu_1953_p3;
wire   [63:0] p_Result_112_fu_1960_p5;
wire   [31:0] LD_fu_1972_p1;
wire   [31:0] bitcast_ln744_fu_1976_p1;
wire   [63:0] grp_fu_1063_p1;
wire   [63:0] ireg_fu_1987_p1;
wire   [10:0] exp_tmp_fu_2003_p4;
wire   [51:0] trunc_ln565_fu_2017_p1;
wire   [52:0] p_Result_114_fu_2021_p3;
wire   [62:0] trunc_ln555_fu_1991_p1;
wire   [11:0] zext_ln455_fu_2013_p1;
wire   [11:0] F2_fu_2045_p2;
wire   [11:0] add_ln581_fu_2061_p2;
wire   [11:0] sub_ln581_fu_2067_p2;
wire   [11:0] sh_amt_fu_2073_p3;
wire  signed [53:0] man_V_fu_2109_p3;
wire   [53:0] zext_ln586_fu_2118_p1;
wire   [31:0] bitcast_ln702_fu_2127_p1;
wire   [0:0] tmp_62_fu_2130_p3;
wire  signed [59:0] sext_ln583_fu_2114_p1;
wire   [59:0] zext_ln604_fu_2146_p1;
wire   [53:0] ashr_ln586_fu_2121_p2;
wire   [53:0] trunc_ln588_cast_fu_2138_p3;
wire   [53:0] select_ln585_fu_2155_p3;
wire   [10:0] add_ln591_fu_2166_p2;
wire   [31:0] zext_ln591_fu_2171_p1;
wire   [0:0] p_Result_8_fu_2175_p3;
wire   [0:0] qb_fu_2183_p3;
wire  signed [54:0] sext_ln591_fu_2162_p1;
wire   [54:0] zext_ln415_6_fu_2189_p1;
wire   [0:0] xor_ln571_fu_2199_p2;
wire   [0:0] and_ln582_fu_2204_p2;
wire   [53:0] select_ln582_fu_2209_p3;
wire   [0:0] or_ln582_fu_2221_p2;
wire   [0:0] xor_ln582_fu_2225_p2;
wire   [0:0] and_ln581_fu_2231_p2;
wire   [54:0] add_ln415_5_fu_2193_p2;
wire  signed [54:0] sext_ln582_fu_2217_p1;
wire   [54:0] select_ln581_fu_2236_p3;
wire   [0:0] or_ln581_fu_2248_p2;
wire   [0:0] xor_ln581_fu_2253_p2;
wire   [0:0] and_ln603_fu_2259_p2;
wire   [59:0] shl_ln604_fu_2149_p2;
wire  signed [59:0] sext_ln581_fu_2244_p1;
wire   [59:0] select_ln603_fu_2264_p3;
wire   [59:0] tmp_V_fu_2292_p2;
reg   [59:0] p_Result_9_fu_2304_p4;
wire   [63:0] p_Result_116_fu_2314_p3;
reg   [63:0] tmp_2_fu_2322_p3;
wire   [31:0] l_3_fu_2330_p1;
wire   [31:0] sub_ln894_fu_2334_p2;
wire   [31:0] lsb_index_3_fu_2340_p2;
wire   [30:0] tmp_64_fu_2346_p4;
wire   [5:0] trunc_ln897_fu_2362_p1;
wire   [5:0] sub_ln897_fu_2366_p2;
wire   [59:0] zext_ln897_fu_2372_p1;
wire   [59:0] lshr_ln897_fu_2376_p2;
wire   [59:0] p_Result_106_fu_2382_p2;
wire   [0:0] tmp_65_fu_2394_p3;
wire   [0:0] icmp_ln896_fu_2356_p2;
wire   [0:0] icmp_ln897_fu_2388_p2;
wire   [0:0] p_Result_6_fu_2414_p3;
wire   [0:0] and_ln896_fu_2408_p2;
wire   [0:0] a_3_fu_2422_p2;
wire   [0:0] xor_ln899_fu_2402_p2;
wire   [63:0] zext_ln907_fu_2456_p1;
wire   [63:0] zext_ln909_fu_2459_p1;
wire   [63:0] zext_ln908_fu_2468_p1;
wire   [63:0] lshr_ln908_fu_2471_p2;
wire   [63:0] shl_ln909_fu_2462_p2;
wire   [63:0] m_24_fu_2477_p3;
wire   [63:0] zext_ln911_fu_2484_p1;
wire   [63:0] m_28_fu_2487_p2;
wire   [62:0] m_31_fu_2493_p4;
wire   [0:0] p_Result_107_fu_2507_p3;
wire   [10:0] sub_ln915_fu_2523_p2;
wire   [10:0] select_ln893_fu_2515_p3;
wire   [10:0] add_ln915_fu_2528_p2;
wire   [63:0] zext_ln912_fu_2503_p1;
wire   [11:0] tmp_4_fu_2534_p3;
wire   [63:0] p_Result_117_fu_2541_p5;
wire   [51:0] trunc_ln1_fu_2558_p4;
wire   [0:0] or_ln1505_fu_2580_p2;
wire   [0:0] grp_fu_1071_p2;
wire   [5:0] trunc_ln727_fu_2607_p1;
wire   [7:0] tmp_70_cast_fu_2611_p3;
wire   [7:0] zext_ln727_fu_2603_p1;
wire   [7:0] sub_ln727_fu_2619_p2;
wire   [7:0] add_ln727_fu_2625_p2;
wire   [10:0] tmp_35_fu_2643_p3;
wire   [12:0] tmp_34_fu_2635_p3;
wire   [12:0] zext_ln309_fu_2651_p1;
wire   [12:0] add_ln309_fu_2655_p2;
wire   [12:0] add_ln309_1_fu_2661_p2;
wire   [98:0] grp_fu_2696_p0;
wire  signed [59:0] grp_fu_2696_p1;
wire   [59:0] grp_fu_2696_p2;
wire   [10:0] tmp_32_fu_2720_p3;
wire   [12:0] zext_ln324_2_fu_2728_p1;
wire   [12:0] zext_ln324_3_fu_2754_p1;
wire   [12:0] add_ln324_3_fu_2758_p2;
wire   [11:0] zext_ln320_1_fu_2768_p1;
wire   [11:0] add_ln324_1_fu_2778_p2;
wire   [12:0] zext_ln324_1_fu_2783_p1;
wire   [3:0] tmp_33_fu_2827_p3;
wire   [3:0] zext_ln343_1_fu_2823_p1;
wire   [3:0] zext_ln343_2_fu_2852_p1;
wire   [3:0] add_ln343_1_fu_2856_p2;
reg    grp_fu_2696_ap_start;
wire    grp_fu_2696_ap_done;
reg   [158:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 159'd1;
#0 grp_svd_and_conv_fu_984_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_svd_and_conv_fu_984_ap_ready = 1'b0;
#0 ap_sync_reg_grp_svd_and_conv_fu_984_ap_done = 1'b0;
#0 grp_read_to_2cols_fu_1000_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_read_to_2cols_fu_1000_ap_ready = 1'b0;
#0 ap_sync_reg_grp_read_to_2cols_fu_1000_ap_done = 1'b0;
#0 grp_update_AV_fu_1039_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_update_AV_fu_1039_ap_ready = 1'b0;
#0 ap_sync_reg_grp_update_AV_fu_1039_ap_done = 1'b0;
end

LLSSineReconstruction_gesvj_AUS_accu_V #(
    .DataWidth( 60 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AUS_accu_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUS_accu_V_address0),
    .ce0(AUS_accu_V_ce0),
    .we0(AUS_accu_V_we0),
    .d0(AUS_accu_V_d0),
    .q0(AUS_accu_V_q0),
    .address1(AUS_accu_V_address1),
    .ce1(AUS_accu_V_ce1),
    .q1(AUS_accu_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_alpha_sum_tmp0_V #(
    .DataWidth( 60 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
AUS_accu_tmp0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUS_accu_tmp0_V_address0),
    .ce0(AUS_accu_tmp0_V_ce0),
    .we0(AUS_accu_tmp0_V_we0),
    .d0(AUS_accu_tmp0_V_d0),
    .q0(AUS_accu_tmp0_V_q0),
    .address1(AUS_accu_tmp0_V_address1),
    .ce1(AUS_accu_tmp0_V_ce1),
    .q1(AUS_accu_tmp0_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_alpha_sum_tmp1_V #(
    .DataWidth( 60 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
AUS_accu_tmp1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUS_accu_tmp1_V_address0),
    .ce0(AUS_accu_tmp1_V_ce0),
    .we0(AUS_accu_tmp1_V_we0),
    .d0(AUS_accu_tmp1_V_d0),
    .q0(AUS_accu_tmp1_V_q0),
    .address1(AUS_accu_tmp1_V_address1),
    .ce1(AUS_accu_tmp1_V_ce1),
    .q1(AUS_accu_tmp1_V_q1)
);

LLSSineReconstruction_read_and_gen_2x2_alpha_sum_tmp2_V #(
    .DataWidth( 60 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
AUS_accu_tmp2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AUS_accu_tmp2_V_address0),
    .ce0(AUS_accu_tmp2_V_ce0),
    .we0(AUS_accu_tmp2_V_we0),
    .d0(AUS_accu_tmp2_V_d0),
    .q0(AUS_accu_tmp2_V_q0),
    .address1(AUS_accu_tmp2_V_address1),
    .ce1(AUS_accu_tmp2_V_ce1),
    .q1(AUS_accu_tmp2_V_q1)
);

LLSSineReconstruction_svd_and_conv grp_svd_and_conv_fu_984(
    .sine_reconstructor_16_1378_din(grp_svd_and_conv_fu_984_sine_reconstructor_16_1378_din),
    .sine_reconstructor_16_1378_full_n(sine_reconstructor_16_1378_full_n),
    .sine_reconstructor_16_1378_write(grp_svd_and_conv_fu_984_sine_reconstructor_16_1378_write),
    .sine_reconstructor_16_1176_din(grp_svd_and_conv_fu_984_sine_reconstructor_16_1176_din),
    .sine_reconstructor_16_1176_full_n(sine_reconstructor_16_1176_full_n),
    .sine_reconstructor_16_1176_write(grp_svd_and_conv_fu_984_sine_reconstructor_16_1176_write),
    .sine_reconstructor_16_1277_din(grp_svd_and_conv_fu_984_sine_reconstructor_16_1277_din),
    .sine_reconstructor_16_1277_full_n(sine_reconstructor_16_1277_full_n),
    .sine_reconstructor_16_1277_write(grp_svd_and_conv_fu_984_sine_reconstructor_16_1277_write),
    .alpha(tmp_67_reg_3045),
    .beta(tmp_68_reg_3050),
    .gamma(tmp_69_reg_3055),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .alpha_ap_vld(1'b1),
    .beta_ap_vld(1'b1),
    .gamma_ap_vld(1'b1),
    .ap_start(grp_svd_and_conv_fu_984_ap_start),
    .ap_done(grp_svd_and_conv_fu_984_ap_done),
    .ap_ready(grp_svd_and_conv_fu_984_ap_ready),
    .ap_idle(grp_svd_and_conv_fu_984_ap_idle),
    .ap_continue(grp_svd_and_conv_fu_984_ap_continue)
);

LLSSineReconstruction_read_to_2cols grp_read_to_2cols_fu_1000(
    .sine_reconstructor_16_873_din(grp_read_to_2cols_fu_1000_sine_reconstructor_16_873_din),
    .sine_reconstructor_16_873_full_n(sine_reconstructor_16_873_full_n),
    .sine_reconstructor_16_873_write(grp_read_to_2cols_fu_1000_sine_reconstructor_16_873_write),
    .sine_reconstructor_16_974_din(grp_read_to_2cols_fu_1000_sine_reconstructor_16_974_din),
    .sine_reconstructor_16_974_full_n(sine_reconstructor_16_974_full_n),
    .sine_reconstructor_16_974_write(grp_read_to_2cols_fu_1000_sine_reconstructor_16_974_write),
    .sine_reconstructor_16_1075_din(grp_read_to_2cols_fu_1000_sine_reconstructor_16_1075_din),
    .sine_reconstructor_16_1075_full_n(sine_reconstructor_16_1075_full_n),
    .sine_reconstructor_16_1075_write(grp_read_to_2cols_fu_1000_sine_reconstructor_16_1075_write),
    .this_alpha_acc_0_address0(grp_read_to_2cols_fu_1000_this_alpha_acc_0_address0),
    .this_alpha_acc_0_ce0(grp_read_to_2cols_fu_1000_this_alpha_acc_0_ce0),
    .this_alpha_acc_0_d0(grp_read_to_2cols_fu_1000_this_alpha_acc_0_d0),
    .this_alpha_acc_0_q0(this_alpha_acc_0_q0),
    .this_alpha_acc_0_we0(grp_read_to_2cols_fu_1000_this_alpha_acc_0_we0),
    .this_alpha_acc_0_address1(grp_read_to_2cols_fu_1000_this_alpha_acc_0_address1),
    .this_alpha_acc_0_ce1(grp_read_to_2cols_fu_1000_this_alpha_acc_0_ce1),
    .this_alpha_acc_0_d1(grp_read_to_2cols_fu_1000_this_alpha_acc_0_d1),
    .this_alpha_acc_0_q1(60'd0),
    .this_alpha_acc_0_we1(grp_read_to_2cols_fu_1000_this_alpha_acc_0_we1),
    .this_beta_acc_0_address0(grp_read_to_2cols_fu_1000_this_beta_acc_0_address0),
    .this_beta_acc_0_ce0(grp_read_to_2cols_fu_1000_this_beta_acc_0_ce0),
    .this_beta_acc_0_d0(grp_read_to_2cols_fu_1000_this_beta_acc_0_d0),
    .this_beta_acc_0_q0(this_beta_acc_0_q0),
    .this_beta_acc_0_we0(grp_read_to_2cols_fu_1000_this_beta_acc_0_we0),
    .this_beta_acc_0_address1(grp_read_to_2cols_fu_1000_this_beta_acc_0_address1),
    .this_beta_acc_0_ce1(grp_read_to_2cols_fu_1000_this_beta_acc_0_ce1),
    .this_beta_acc_0_d1(grp_read_to_2cols_fu_1000_this_beta_acc_0_d1),
    .this_beta_acc_0_q1(60'd0),
    .this_beta_acc_0_we1(grp_read_to_2cols_fu_1000_this_beta_acc_0_we1),
    .this_gamma_acc_0_address0(grp_read_to_2cols_fu_1000_this_gamma_acc_0_address0),
    .this_gamma_acc_0_ce0(grp_read_to_2cols_fu_1000_this_gamma_acc_0_ce0),
    .this_gamma_acc_0_d0(grp_read_to_2cols_fu_1000_this_gamma_acc_0_d0),
    .this_gamma_acc_0_q0(this_gamma_acc_0_q0),
    .this_gamma_acc_0_we0(grp_read_to_2cols_fu_1000_this_gamma_acc_0_we0),
    .this_gamma_acc_0_address1(grp_read_to_2cols_fu_1000_this_gamma_acc_0_address1),
    .this_gamma_acc_0_ce1(grp_read_to_2cols_fu_1000_this_gamma_acc_0_ce1),
    .this_gamma_acc_0_d1(grp_read_to_2cols_fu_1000_this_gamma_acc_0_d1),
    .this_gamma_acc_0_q1(60'd0),
    .this_gamma_acc_0_we1(grp_read_to_2cols_fu_1000_this_gamma_acc_0_we1),
    .this_alpha_sum_address0(grp_read_to_2cols_fu_1000_this_alpha_sum_address0),
    .this_alpha_sum_ce0(grp_read_to_2cols_fu_1000_this_alpha_sum_ce0),
    .this_alpha_sum_d0(grp_read_to_2cols_fu_1000_this_alpha_sum_d0),
    .this_alpha_sum_q0(this_alpha_sum_q0),
    .this_alpha_sum_we0(grp_read_to_2cols_fu_1000_this_alpha_sum_we0),
    .this_alpha_sum_address1(grp_read_to_2cols_fu_1000_this_alpha_sum_address1),
    .this_alpha_sum_ce1(grp_read_to_2cols_fu_1000_this_alpha_sum_ce1),
    .this_alpha_sum_d1(grp_read_to_2cols_fu_1000_this_alpha_sum_d1),
    .this_alpha_sum_q1(this_alpha_sum_q1),
    .this_alpha_sum_we1(grp_read_to_2cols_fu_1000_this_alpha_sum_we1),
    .this_beta_sum_address0(grp_read_to_2cols_fu_1000_this_beta_sum_address0),
    .this_beta_sum_ce0(grp_read_to_2cols_fu_1000_this_beta_sum_ce0),
    .this_beta_sum_d0(grp_read_to_2cols_fu_1000_this_beta_sum_d0),
    .this_beta_sum_q0(this_beta_sum_q0),
    .this_beta_sum_we0(grp_read_to_2cols_fu_1000_this_beta_sum_we0),
    .this_beta_sum_address1(grp_read_to_2cols_fu_1000_this_beta_sum_address1),
    .this_beta_sum_ce1(grp_read_to_2cols_fu_1000_this_beta_sum_ce1),
    .this_beta_sum_d1(grp_read_to_2cols_fu_1000_this_beta_sum_d1),
    .this_beta_sum_q1(this_beta_sum_q1),
    .this_beta_sum_we1(grp_read_to_2cols_fu_1000_this_beta_sum_we1),
    .this_gamma_sum_address0(grp_read_to_2cols_fu_1000_this_gamma_sum_address0),
    .this_gamma_sum_ce0(grp_read_to_2cols_fu_1000_this_gamma_sum_ce0),
    .this_gamma_sum_d0(grp_read_to_2cols_fu_1000_this_gamma_sum_d0),
    .this_gamma_sum_q0(this_gamma_sum_q0),
    .this_gamma_sum_we0(grp_read_to_2cols_fu_1000_this_gamma_sum_we0),
    .this_gamma_sum_address1(grp_read_to_2cols_fu_1000_this_gamma_sum_address1),
    .this_gamma_sum_ce1(grp_read_to_2cols_fu_1000_this_gamma_sum_ce1),
    .this_gamma_sum_d1(grp_read_to_2cols_fu_1000_this_gamma_sum_d1),
    .this_gamma_sum_q1(this_gamma_sum_q1),
    .this_gamma_sum_we1(grp_read_to_2cols_fu_1000_this_gamma_sum_we1),
    .matA_0_address0(grp_read_to_2cols_fu_1000_matA_0_address0),
    .matA_0_ce0(grp_read_to_2cols_fu_1000_matA_0_ce0),
    .matA_0_d0(grp_read_to_2cols_fu_1000_matA_0_d0),
    .matA_0_q0(this_matA_0_q0),
    .matA_0_we0(grp_read_to_2cols_fu_1000_matA_0_we0),
    .matA_0_address1(grp_read_to_2cols_fu_1000_matA_0_address1),
    .matA_0_ce1(grp_read_to_2cols_fu_1000_matA_0_ce1),
    .matA_0_d1(grp_read_to_2cols_fu_1000_matA_0_d1),
    .matA_0_q1(this_matA_0_q1),
    .matA_0_we1(grp_read_to_2cols_fu_1000_matA_0_we1),
    .matV_0_address0(grp_read_to_2cols_fu_1000_matV_0_address0),
    .matV_0_ce0(grp_read_to_2cols_fu_1000_matV_0_ce0),
    .matV_0_d0(grp_read_to_2cols_fu_1000_matV_0_d0),
    .matV_0_q0(this_matV_0_q0),
    .matV_0_we0(grp_read_to_2cols_fu_1000_matV_0_we0),
    .matV_0_address1(grp_read_to_2cols_fu_1000_matV_0_address1),
    .matV_0_ce1(grp_read_to_2cols_fu_1000_matV_0_ce1),
    .matV_0_d1(grp_read_to_2cols_fu_1000_matV_0_d1),
    .matV_0_q1(this_matV_0_q1),
    .matV_0_we1(grp_read_to_2cols_fu_1000_matV_0_we1),
    .A_i_0_address0(grp_read_to_2cols_fu_1000_A_i_0_address0),
    .A_i_0_ce0(grp_read_to_2cols_fu_1000_A_i_0_ce0),
    .A_i_0_d0(grp_read_to_2cols_fu_1000_A_i_0_d0),
    .A_i_0_q0(60'd0),
    .A_i_0_we0(grp_read_to_2cols_fu_1000_A_i_0_we0),
    .A_i_0_address1(grp_read_to_2cols_fu_1000_A_i_0_address1),
    .A_i_0_ce1(grp_read_to_2cols_fu_1000_A_i_0_ce1),
    .A_i_0_d1(grp_read_to_2cols_fu_1000_A_i_0_d1),
    .A_i_0_q1(60'd0),
    .A_i_0_we1(grp_read_to_2cols_fu_1000_A_i_0_we1),
    .A_j_0_address0(grp_read_to_2cols_fu_1000_A_j_0_address0),
    .A_j_0_ce0(grp_read_to_2cols_fu_1000_A_j_0_ce0),
    .A_j_0_d0(grp_read_to_2cols_fu_1000_A_j_0_d0),
    .A_j_0_q0(60'd0),
    .A_j_0_we0(grp_read_to_2cols_fu_1000_A_j_0_we0),
    .A_j_0_address1(grp_read_to_2cols_fu_1000_A_j_0_address1),
    .A_j_0_ce1(grp_read_to_2cols_fu_1000_A_j_0_ce1),
    .A_j_0_d1(grp_read_to_2cols_fu_1000_A_j_0_d1),
    .A_j_0_q1(60'd0),
    .A_j_0_we1(grp_read_to_2cols_fu_1000_A_j_0_we1),
    .V_i_0_address0(grp_read_to_2cols_fu_1000_V_i_0_address0),
    .V_i_0_ce0(grp_read_to_2cols_fu_1000_V_i_0_ce0),
    .V_i_0_d0(grp_read_to_2cols_fu_1000_V_i_0_d0),
    .V_i_0_q0(60'd0),
    .V_i_0_we0(grp_read_to_2cols_fu_1000_V_i_0_we0),
    .V_i_0_address1(grp_read_to_2cols_fu_1000_V_i_0_address1),
    .V_i_0_ce1(grp_read_to_2cols_fu_1000_V_i_0_ce1),
    .V_i_0_d1(grp_read_to_2cols_fu_1000_V_i_0_d1),
    .V_i_0_q1(60'd0),
    .V_i_0_we1(grp_read_to_2cols_fu_1000_V_i_0_we1),
    .V_j_0_address0(grp_read_to_2cols_fu_1000_V_j_0_address0),
    .V_j_0_ce0(grp_read_to_2cols_fu_1000_V_j_0_ce0),
    .V_j_0_d0(grp_read_to_2cols_fu_1000_V_j_0_d0),
    .V_j_0_q0(60'd0),
    .V_j_0_we0(grp_read_to_2cols_fu_1000_V_j_0_we0),
    .V_j_0_address1(grp_read_to_2cols_fu_1000_V_j_0_address1),
    .V_j_0_ce1(grp_read_to_2cols_fu_1000_V_j_0_ce1),
    .V_j_0_d1(grp_read_to_2cols_fu_1000_V_j_0_d1),
    .V_j_0_q1(60'd0),
    .V_j_0_we1(grp_read_to_2cols_fu_1000_V_j_0_we1),
    .n(n),
    .col_i(i_8_reg_791),
    .col_j(j_5_reg_816),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .n_ap_vld(1'b1),
    .col_i_ap_vld(1'b1),
    .col_j_ap_vld(1'b1),
    .ap_start(grp_read_to_2cols_fu_1000_ap_start),
    .ap_done(grp_read_to_2cols_fu_1000_ap_done),
    .ap_ready(grp_read_to_2cols_fu_1000_ap_ready),
    .ap_idle(grp_read_to_2cols_fu_1000_ap_idle),
    .ap_continue(grp_read_to_2cols_fu_1000_ap_continue)
);

LLSSineReconstruction_update_AV grp_update_AV_fu_1039(
    .matA_0_address0(grp_update_AV_fu_1039_matA_0_address0),
    .matA_0_ce0(grp_update_AV_fu_1039_matA_0_ce0),
    .matA_0_d0(grp_update_AV_fu_1039_matA_0_d0),
    .matA_0_q0(60'd0),
    .matA_0_we0(grp_update_AV_fu_1039_matA_0_we0),
    .matA_0_address1(grp_update_AV_fu_1039_matA_0_address1),
    .matA_0_ce1(grp_update_AV_fu_1039_matA_0_ce1),
    .matA_0_d1(grp_update_AV_fu_1039_matA_0_d1),
    .matA_0_q1(60'd0),
    .matA_0_we1(grp_update_AV_fu_1039_matA_0_we1),
    .matV_0_address0(grp_update_AV_fu_1039_matV_0_address0),
    .matV_0_ce0(grp_update_AV_fu_1039_matV_0_ce0),
    .matV_0_d0(grp_update_AV_fu_1039_matV_0_d0),
    .matV_0_q0(60'd0),
    .matV_0_we0(grp_update_AV_fu_1039_matV_0_we0),
    .matV_0_address1(grp_update_AV_fu_1039_matV_0_address1),
    .matV_0_ce1(grp_update_AV_fu_1039_matV_0_ce1),
    .matV_0_d1(grp_update_AV_fu_1039_matV_0_d1),
    .matV_0_q1(60'd0),
    .matV_0_we1(grp_update_AV_fu_1039_matV_0_we1),
    .A_i_0_address0(grp_update_AV_fu_1039_A_i_0_address0),
    .A_i_0_ce0(grp_update_AV_fu_1039_A_i_0_ce0),
    .A_i_0_d0(grp_update_AV_fu_1039_A_i_0_d0),
    .A_i_0_q0(this_A_i_0_q0),
    .A_i_0_we0(grp_update_AV_fu_1039_A_i_0_we0),
    .A_i_0_address1(grp_update_AV_fu_1039_A_i_0_address1),
    .A_i_0_ce1(grp_update_AV_fu_1039_A_i_0_ce1),
    .A_i_0_d1(grp_update_AV_fu_1039_A_i_0_d1),
    .A_i_0_q1(60'd0),
    .A_i_0_we1(grp_update_AV_fu_1039_A_i_0_we1),
    .A_j_0_address0(grp_update_AV_fu_1039_A_j_0_address0),
    .A_j_0_ce0(grp_update_AV_fu_1039_A_j_0_ce0),
    .A_j_0_d0(grp_update_AV_fu_1039_A_j_0_d0),
    .A_j_0_q0(this_A_j_0_q0),
    .A_j_0_we0(grp_update_AV_fu_1039_A_j_0_we0),
    .A_j_0_address1(grp_update_AV_fu_1039_A_j_0_address1),
    .A_j_0_ce1(grp_update_AV_fu_1039_A_j_0_ce1),
    .A_j_0_d1(grp_update_AV_fu_1039_A_j_0_d1),
    .A_j_0_q1(60'd0),
    .A_j_0_we1(grp_update_AV_fu_1039_A_j_0_we1),
    .V_i_0_address0(grp_update_AV_fu_1039_V_i_0_address0),
    .V_i_0_ce0(grp_update_AV_fu_1039_V_i_0_ce0),
    .V_i_0_d0(grp_update_AV_fu_1039_V_i_0_d0),
    .V_i_0_q0(this_V_i_0_q0),
    .V_i_0_we0(grp_update_AV_fu_1039_V_i_0_we0),
    .V_i_0_address1(grp_update_AV_fu_1039_V_i_0_address1),
    .V_i_0_ce1(grp_update_AV_fu_1039_V_i_0_ce1),
    .V_i_0_d1(grp_update_AV_fu_1039_V_i_0_d1),
    .V_i_0_q1(60'd0),
    .V_i_0_we1(grp_update_AV_fu_1039_V_i_0_we1),
    .V_j_0_address0(grp_update_AV_fu_1039_V_j_0_address0),
    .V_j_0_ce0(grp_update_AV_fu_1039_V_j_0_ce0),
    .V_j_0_d0(grp_update_AV_fu_1039_V_j_0_d0),
    .V_j_0_q0(this_V_j_0_q0),
    .V_j_0_we0(grp_update_AV_fu_1039_V_j_0_we0),
    .V_j_0_address1(grp_update_AV_fu_1039_V_j_0_address1),
    .V_j_0_ce1(grp_update_AV_fu_1039_V_j_0_ce1),
    .V_j_0_d1(grp_update_AV_fu_1039_V_j_0_d1),
    .V_j_0_q1(60'd0),
    .V_j_0_we1(grp_update_AV_fu_1039_V_j_0_we1),
    .col_i(i_8_reg_791),
    .col_j(j_5_reg_816),
    .s(s_V_reg_3060),
    .c(c_V_reg_3065),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .col_i_ap_vld(1'b1),
    .col_j_ap_vld(1'b1),
    .s_ap_vld(1'b1),
    .c_ap_vld(1'b1),
    .ap_start(grp_update_AV_fu_1039_ap_start),
    .ap_done(grp_update_AV_fu_1039_ap_done),
    .ap_ready(grp_update_AV_fu_1039_ap_ready),
    .ap_idle(grp_update_AV_fu_1039_ap_idle),
    .ap_continue(grp_update_AV_fu_1039_ap_continue)
);

LLSSineReconstruction_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U290(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_assign_reg_3254),
    .ce(1'b1),
    .dout(grp_fu_1063_p1)
);

LLSSineReconstruction_fsqrt_32ns_32ns_32_10_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_10_no_dsp_1_U291(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(select_ln935_reg_3249),
    .ce(1'b1),
    .dout(grp_fu_1066_p2)
);

LLSSineReconstruction_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U292(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1071_p0),
    .din1(64'd4382569440205035030),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_1071_p2)
);

LLSSineReconstruction_mul_60s_60s_99_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 60 ),
    .din1_WIDTH( 60 ),
    .dout_WIDTH( 99 ))
mul_60s_60s_99_1_1_U293(
    .din0(r_V_30_fu_1488_p0),
    .din1(r_V_30_fu_1488_p1),
    .dout(r_V_30_fu_1488_p2)
);

LLSSineReconstruction_sdiv_99ns_60s_60_103_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 103 ),
    .din0_WIDTH( 99 ),
    .din1_WIDTH( 60 ),
    .dout_WIDTH( 60 ))
sdiv_99ns_60s_60_103_seq_1_U294(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_2696_ap_start),
    .done(grp_fu_2696_ap_done),
    .din0(grp_fu_2696_p0),
    .din1(grp_fu_2696_p1),
    .ce(1'b1),
    .dout(grp_fu_2696_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_read_to_2cols_fu_1000_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
            ap_sync_reg_grp_read_to_2cols_fu_1000_ap_done <= 1'b0;
        end else if ((grp_read_to_2cols_fu_1000_ap_done == 1'b1)) begin
            ap_sync_reg_grp_read_to_2cols_fu_1000_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_read_to_2cols_fu_1000_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
            ap_sync_reg_grp_read_to_2cols_fu_1000_ap_ready <= 1'b0;
        end else if ((grp_read_to_2cols_fu_1000_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_read_to_2cols_fu_1000_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_svd_and_conv_fu_984_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_on_subcall_done))) begin
            ap_sync_reg_grp_svd_and_conv_fu_984_ap_done <= 1'b0;
        end else if ((grp_svd_and_conv_fu_984_ap_done == 1'b1)) begin
            ap_sync_reg_grp_svd_and_conv_fu_984_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_svd_and_conv_fu_984_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_on_subcall_done))) begin
            ap_sync_reg_grp_svd_and_conv_fu_984_ap_ready <= 1'b0;
        end else if ((grp_svd_and_conv_fu_984_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_svd_and_conv_fu_984_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_update_AV_fu_1039_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
            ap_sync_reg_grp_update_AV_fu_1039_ap_done <= 1'b0;
        end else if ((grp_update_AV_fu_1039_ap_done == 1'b1)) begin
            ap_sync_reg_grp_update_AV_fu_1039_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_update_AV_fu_1039_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
            ap_sync_reg_grp_update_AV_fu_1039_ap_ready <= 1'b0;
        end else if ((grp_update_AV_fu_1039_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_update_AV_fu_1039_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_read_to_2cols_fu_1000_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state13) & (ap_sync_grp_read_to_2cols_fu_1000_ap_ready == 1'b0)) | ((icmp_ln219_fu_1348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
            grp_read_to_2cols_fu_1000_ap_start_reg <= 1'b1;
        end else if ((grp_read_to_2cols_fu_1000_ap_ready == 1'b1)) begin
            grp_read_to_2cols_fu_1000_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_svd_and_conv_fu_984_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state15) & (ap_sync_grp_svd_and_conv_fu_984_ap_ready == 1'b0)) | (~((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)))) begin
            grp_svd_and_conv_fu_984_ap_start_reg <= 1'b1;
        end else if ((grp_svd_and_conv_fu_984_ap_ready == 1'b1)) begin
            grp_svd_and_conv_fu_984_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_AV_fu_1039_ap_start_reg <= 1'b0;
    end else begin
        if (((~((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state17) & (ap_sync_grp_update_AV_fu_1039_ap_ready == 1'b0)))) begin
            grp_update_AV_fu_1039_ap_start_reg <= 1'b1;
        end else if ((grp_update_AV_fu_1039_ap_ready == 1'b1)) begin
            grp_update_AV_fu_1039_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
        converge567_load_0434_reg_828 <= select_ln255_reg_3070;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln215_fu_1337_p2 == 1'd1))) begin
        converge567_load_0434_reg_828 <= converge567_load_04_lcssa637_reg_803;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln219_fu_1348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        converge567_load_04_lcssa637_reg_803 <= converge567_load_0434_reg_828;
    end else if (((icmp_ln1494_fu_1326_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        converge567_load_04_lcssa637_reg_803 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln165_fu_1284_p2 == 1'd1))) begin
        converge_V_reg_780 <= 60'd549755813888;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln215_fu_1337_p2 == 1'd0))) begin
        converge_V_reg_780 <= converge567_load_04_lcssa637_reg_803;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        i_11_reg_950 <= 2'd0;
    end else if (((icmp_ln339_fu_2866_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state158))) begin
        i_11_reg_950 <= add_ln337_reg_3480;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln134_fu_1142_p2 == 1'd1))) begin
        i_1_reg_723 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln151_fu_1240_p2 == 1'd1))) begin
        i_1_reg_723 <= add_ln149_reg_2934;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_2_reg_746 <= 7'd0;
    end else if (((icmp_ln167_fu_1310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_reg_746 <= add_ln165_reg_2973;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln255_fu_1414_p2 == 1'd1))) begin
        i_5_reg_917 <= 7'd0;
    end else if (((icmp_ln320_fu_2772_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153))) begin
        i_5_reg_917 <= add_ln318_reg_3421;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln259_fu_1430_p2 == 1'd1))) begin
        i_6_reg_862 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_6_reg_862 <= add_ln264_reg_3102;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln318_fu_2738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state152))) begin
        i_7_reg_939 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state156)) begin
        i_7_reg_939 <= add_ln329_reg_3462;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln219_fu_1348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_8_reg_791 <= i_10_fu_1354_p2;
    end else if (((icmp_ln1494_fu_1326_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_8_reg_791 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        i_9_reg_906 <= add_ln305_reg_3398;
    end else if (((1'd1 == and_ln1505_fu_2584_p2) & (1'b1 == ap_CS_fsm_state47))) begin
        i_9_reg_906 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln126_fu_1090_p2 == 1'd1))) begin
        i_reg_700 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln136_fu_1168_p2 == 1'd1))) begin
        i_reg_700 <= add_ln134_reg_2905;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln136_fu_1168_p2 == 1'd0))) begin
        j_1_reg_712 <= add_ln136_fu_1148_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln134_fu_1142_p2 == 1'd0))) begin
        j_1_reg_712 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln151_fu_1240_p2 == 1'd0))) begin
        j_2_reg_735 <= add_ln151_fu_1220_p2;
    end else if (((icmp_ln149_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_2_reg_735 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln165_fu_1284_p2 == 1'd0))) begin
        j_3_reg_769 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        j_3_reg_769 <= add_ln167_reg_2991;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & ((icmp_ln885_reg_3330 == 1'd1) | ((1'd0 == and_ln1505_reg_3384) | (icmp_ln305_fu_2671_p2 == 1'd1))))) begin
        j_4_reg_840 <= add_ln255_reg_3075;
    end else if (((icmp_ln1494_fu_1326_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        j_4_reg_840 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
        j_5_reg_816 <= j_6_reg_3032;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln215_fu_1337_p2 == 1'd1))) begin
        j_5_reg_816 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln318_fu_2738_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state152))) begin
        j_7_reg_928 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state154)) begin
        j_7_reg_928 <= add_ln320_reg_3444;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln337_fu_2841_p2 == 1'd0))) begin
        j_8_reg_973 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state159)) begin
        j_8_reg_973 <= add_ln339_reg_3498;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_689 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln126_fu_1090_p2 == 1'd0))) begin
        j_reg_689 <= add_ln126_fu_1079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1494_fu_1326_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        jj_fu_334 <= 32'd0;
    end else if (((icmp_ln885_reg_3330 == 1'd0) & (1'd1 == and_ln1505_reg_3384) & (1'b1 == ap_CS_fsm_state48) & (icmp_ln305_fu_2671_p2 == 1'd1))) begin
        jj_fu_334 <= jj_1_fu_2677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln329_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
        phi_mul189_reg_961 <= 4'd0;
    end else if (((icmp_ln339_fu_2866_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state158))) begin
        phi_mul189_reg_961 <= add_ln337_1_reg_3485;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul_reg_757 <= 8'd0;
    end else if (((icmp_ln167_fu_1310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul_reg_757 <= add_ln165_1_reg_2978;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        t_3_reg_873 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        t_3_reg_873 <= add_ln275_reg_3135;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln275_fu_1549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        t_4_reg_884 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        t_4_reg_884 <= add_ln282_reg_3158;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_fu_1594_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        t_5_reg_895 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_5_reg_895 <= add_ln289_reg_3181;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln259_fu_1430_p2 == 1'd0))) begin
        t_reg_851 <= add_ln259_fu_1419_p2;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln255_fu_1414_p2 == 1'd0))) begin
        t_reg_851 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        AUS_accu_V_addr_1_reg_3125 <= zext_ln269_fu_1494_p1;
        r_V_30_reg_3120 <= r_V_30_fu_1488_p2;
        tmp_56_reg_3130 <= r_V_30_fu_1488_p2[32'd38];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        accu_s_V_1_reg_3321 <= accu_s_V_1_fu_2272_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        accu_s_V_reg_3204 <= accu_s_V_fu_1674_p2;
        p_Result_109_reg_3211 <= accu_s_V_fu_1674_p2[32'd59];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln134_reg_2905 <= add_ln134_fu_1095_p2;
        empty_reg_2910[12 : 4] <= empty_fu_1125_p2[12 : 4];
        this_matU_addr_reg_2915 <= p_cast_fu_1137_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln149_reg_2934 <= add_ln149_fu_1180_p2;
        empty_149_reg_2939 <= empty_149_fu_1203_p2;
        this_matV_0_addr_reg_2944[3 : 2] <= p_shl3_fu_1198_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln165_1_reg_2978 <= add_ln165_1_fu_1257_p2;
        add_ln165_reg_2973 <= add_ln165_fu_1251_p2;
        sub_ln171_reg_2983 <= sub_ln171_fu_1278_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln167_reg_2991 <= add_ln167_fu_1290_p2;
        this_matA_0_addr_reg_2996 <= zext_ln171_3_fu_1305_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln255_reg_3075 <= add_ln255_fu_1400_p2;
        zext_ln255_1_reg_3085[1 : 0] <= zext_ln255_1_fu_1410_p1[1 : 0];
        zext_ln255_reg_3080[1 : 0] <= zext_ln255_fu_1406_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln264_reg_3102 <= add_ln264_fu_1436_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln275_reg_3135 <= add_ln275_fu_1539_p2;
        zext_ln275_reg_3140[3 : 0] <= zext_ln275_fu_1545_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln282_reg_3158 <= add_ln282_fu_1584_p2;
        zext_ln282_reg_3163[2 : 0] <= zext_ln282_fu_1590_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln289_reg_3181 <= add_ln289_fu_1629_p2;
        zext_ln289_reg_3186[1 : 0] <= zext_ln289_fu_1635_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_3330 == 1'd0) & (1'd1 == and_ln1505_reg_3384) & (1'b1 == ap_CS_fsm_state48))) begin
        add_ln305_reg_3398 <= add_ln305_fu_2597_p2;
        this_matU_addr_3_reg_3408 <= zext_ln309_1_fu_2666_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        add_ln318_reg_3421 <= add_ln318_fu_2706_p2;
        add_ln324_2_reg_3431[12 : 4] <= add_ln324_2_fu_2732_p2[12 : 4];
        tmp_31_reg_3426[12 : 6] <= tmp_31_fu_2712_p3[12 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        add_ln320_reg_3444 <= add_ln320_fu_2748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln320_fu_2772_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state153))) begin
        add_ln324_reg_3457 <= add_ln324_fu_2787_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        add_ln329_reg_3462 <= add_ln329_fu_2796_p2;
        zext_ln329_reg_3467[1 : 0] <= zext_ln329_fu_2802_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        add_ln337_1_reg_3485 <= add_ln337_1_fu_2818_p2;
        add_ln337_reg_3480 <= add_ln337_fu_2812_p2;
        sub_ln343_reg_3490 <= sub_ln343_fu_2835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        add_ln339_reg_3498 <= add_ln339_fu_2846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln339_fu_2866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state158))) begin
        add_ln343_reg_3511 <= add_ln343_fu_2871_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_fu_2280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        add_ln908_reg_3354 <= add_ln908_fu_2440_p2;
        icmp_ln908_reg_3344 <= icmp_ln908_fu_2428_p2;
        m_30_reg_3339 <= m_30_fu_2297_p3;
        p_Result_115_reg_3334 <= accu_s_V_1_reg_3321[32'd59];
        sub_ln909_reg_3349 <= sub_ln909_fu_2434_p2;
        tobool31_i_i27_reg_3359 <= tobool31_i_i27_fu_2446_p2;
        trunc_ln893_reg_3364 <= trunc_ln893_fu_2452_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        and_ln1505_reg_3384 <= and_ln1505_fu_2584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c_V_reg_3065 <= sine_reconstructor_16_1277_dout;
        s_V_reg_3060 <= sine_reconstructor_16_1176_dout;
        select_ln255_reg_3070 <= select_ln255_fu_1392_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln1505_fu_2584_p2) & (1'b1 == ap_CS_fsm_state47))) begin
        conv_i_reg_3388 <= conv_i_fu_2590_p1;
        trunc_ln305_reg_3393 <= trunc_ln305_fu_2593_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln264_fu_1474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        empty_150_reg_3115 <= empty_150_fu_1480_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        icmp_ln1505_1_reg_3379 <= icmp_ln1505_1_fu_2574_p2;
        icmp_ln1505_reg_3374 <= icmp_ln1505_fu_2568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        icmp_ln571_reg_3276 <= icmp_ln571_fu_2039_p2;
        icmp_ln581_reg_3288 <= icmp_ln581_fu_2055_p2;
        icmp_ln582_reg_3294 <= icmp_ln582_fu_2081_p2;
        icmp_ln585_reg_3300 <= icmp_ln585_fu_2087_p2;
        icmp_ln591_reg_3316 <= icmp_ln591_fu_2103_p2;
        icmp_ln603_reg_3305 <= icmp_ln603_fu_2093_p2;
        man_V_7_reg_3271 <= man_V_7_fu_2033_p2;
        p_Result_113_reg_3260 <= ireg_fu_1987_p1[32'd63];
        trunc_ln575_reg_3283 <= trunc_ln575_fu_2051_p1;
        trunc_ln586_reg_3310 <= trunc_ln586_fu_2099_p1;
        zext_ln569_reg_3266[51 : 0] <= zext_ln569_fu_2029_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        icmp_ln885_reg_3330 <= icmp_ln885_fu_2280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        icmp_ln935_reg_3217 <= icmp_ln935_fu_1688_p2;
        icmp_ln954_reg_3234 <= icmp_ln954_fu_1832_p2;
        select_ln954_reg_3239 <= select_ln954_fu_1852_p3;
        sub_ln944_reg_3228 <= sub_ln944_fu_1734_p2;
        tmp_V_11_reg_3222 <= tmp_V_11_fu_1698_p3;
        trunc_ln943_reg_3244 <= trunc_ln943_fu_1860_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_6_reg_3032 <= j_6_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        select_ln935_reg_3249 <= select_ln935_fu_1980_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_67_reg_3045 <= sine_reconstructor_16_873_dout;
        tmp_68_reg_3050 <= sine_reconstructor_16_974_dout;
        tmp_69_reg_3055 <= sine_reconstructor_16_1075_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        v_assign_reg_3254 <= grp_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        zext_ln165_reg_2957[1 : 0] <= zext_ln165_fu_1217_p1[1 : 0];
        zext_ln167_reg_2952[1 : 0] <= zext_ln167_fu_1214_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln318_fu_2738_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state152))) begin
        zext_ln320_reg_3439[10 : 4] <= zext_ln320_fu_2744_p1[10 : 4];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        AUS_accu_V_address0 = zext_ln703_fu_1572_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        AUS_accu_V_address0 = AUS_accu_V_addr_1_reg_3125;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        AUS_accu_V_address0 = zext_ln269_fu_1494_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        AUS_accu_V_address0 = zext_ln259_fu_1425_p1;
    end else begin
        AUS_accu_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state22))) begin
        AUS_accu_V_ce0 = 1'b1;
    end else begin
        AUS_accu_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        AUS_accu_V_ce1 = 1'b1;
    end else begin
        AUS_accu_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        AUS_accu_V_d0 = add_ln415_fu_1532_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        AUS_accu_V_d0 = 60'd0;
    end else begin
        AUS_accu_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln259_fu_1430_p2 == 1'd0)))) begin
        AUS_accu_V_we0 = 1'b1;
    end else begin
        AUS_accu_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        AUS_accu_tmp0_V_address0 = zext_ln703_3_fu_1617_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        AUS_accu_tmp0_V_address0 = zext_ln275_reg_3140;
    end else begin
        AUS_accu_tmp0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        AUS_accu_tmp0_V_ce0 = 1'b1;
    end else begin
        AUS_accu_tmp0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        AUS_accu_tmp0_V_ce1 = 1'b1;
    end else begin
        AUS_accu_tmp0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        AUS_accu_tmp0_V_we0 = 1'b1;
    end else begin
        AUS_accu_tmp0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        AUS_accu_tmp1_V_address0 = zext_ln703_4_fu_1662_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AUS_accu_tmp1_V_address0 = zext_ln282_reg_3163;
    end else begin
        AUS_accu_tmp1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        AUS_accu_tmp1_V_ce0 = 1'b1;
    end else begin
        AUS_accu_tmp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        AUS_accu_tmp1_V_ce1 = 1'b1;
    end else begin
        AUS_accu_tmp1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        AUS_accu_tmp1_V_we0 = 1'b1;
    end else begin
        AUS_accu_tmp1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        AUS_accu_tmp2_V_address0 = zext_ln289_reg_3186;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        AUS_accu_tmp2_V_address0 = 64'd1;
    end else begin
        AUS_accu_tmp2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28))) begin
        AUS_accu_tmp2_V_ce0 = 1'b1;
    end else begin
        AUS_accu_tmp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        AUS_accu_tmp2_V_ce1 = 1'b1;
    end else begin
        AUS_accu_tmp2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        AUS_accu_tmp2_V_we0 = 1'b1;
    end else begin
        AUS_accu_tmp2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        S_we0 = 1'b1;
    end else begin
        S_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        U_ce0 = 1'b1;
    end else begin
        U_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state154)) begin
        U_we0 = 1'b1;
    end else begin
        U_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        V_ce0 = 1'b1;
    end else begin
        V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        V_we0 = 1'b1;
    end else begin
        V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state157) & (icmp_ln337_fu_2841_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln337_fu_2841_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_2696_ap_start = 1'b1;
    end else begin
        grp_fu_2696_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
        grp_read_to_2cols_fu_1000_ap_continue = 1'b1;
    end else begin
        grp_read_to_2cols_fu_1000_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_on_subcall_done))) begin
        grp_svd_and_conv_fu_984_ap_continue = 1'b1;
    end else begin
        grp_svd_and_conv_fu_984_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
        grp_update_AV_fu_1039_ap_continue = 1'b1;
    end else begin
        grp_update_AV_fu_1039_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sine_reconstructor_16_1075_i_blk_n = sine_reconstructor_16_1075_empty_n;
    end else begin
        sine_reconstructor_16_1075_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        sine_reconstructor_16_1075_read = 1'b1;
    end else begin
        sine_reconstructor_16_1075_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sine_reconstructor_16_1075_write = grp_read_to_2cols_fu_1000_sine_reconstructor_16_1075_write;
    end else begin
        sine_reconstructor_16_1075_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sine_reconstructor_16_1176_i_blk_n = sine_reconstructor_16_1176_empty_n;
    end else begin
        sine_reconstructor_16_1176_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        sine_reconstructor_16_1176_read = 1'b1;
    end else begin
        sine_reconstructor_16_1176_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sine_reconstructor_16_1176_write = grp_svd_and_conv_fu_984_sine_reconstructor_16_1176_write;
    end else begin
        sine_reconstructor_16_1176_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sine_reconstructor_16_1277_i_blk_n = sine_reconstructor_16_1277_empty_n;
    end else begin
        sine_reconstructor_16_1277_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        sine_reconstructor_16_1277_read = 1'b1;
    end else begin
        sine_reconstructor_16_1277_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sine_reconstructor_16_1277_write = grp_svd_and_conv_fu_984_sine_reconstructor_16_1277_write;
    end else begin
        sine_reconstructor_16_1277_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sine_reconstructor_16_1378_i_blk_n = sine_reconstructor_16_1378_empty_n;
    end else begin
        sine_reconstructor_16_1378_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        sine_reconstructor_16_1378_read = 1'b1;
    end else begin
        sine_reconstructor_16_1378_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sine_reconstructor_16_1378_write = grp_svd_and_conv_fu_984_sine_reconstructor_16_1378_write;
    end else begin
        sine_reconstructor_16_1378_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sine_reconstructor_16_873_i_blk_n = sine_reconstructor_16_873_empty_n;
    end else begin
        sine_reconstructor_16_873_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        sine_reconstructor_16_873_read = 1'b1;
    end else begin
        sine_reconstructor_16_873_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sine_reconstructor_16_873_write = grp_read_to_2cols_fu_1000_sine_reconstructor_16_873_write;
    end else begin
        sine_reconstructor_16_873_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sine_reconstructor_16_974_i_blk_n = sine_reconstructor_16_974_empty_n;
    end else begin
        sine_reconstructor_16_974_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
        sine_reconstructor_16_974_read = 1'b1;
    end else begin
        sine_reconstructor_16_974_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sine_reconstructor_16_974_write = grp_read_to_2cols_fu_1000_sine_reconstructor_16_974_write;
    end else begin
        sine_reconstructor_16_974_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_A_i_0_address0 = grp_update_AV_fu_1039_A_i_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_A_i_0_address0 = grp_read_to_2cols_fu_1000_A_i_0_address0;
    end else begin
        this_A_i_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_A_i_0_ce0 = grp_update_AV_fu_1039_A_i_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_A_i_0_ce0 = grp_read_to_2cols_fu_1000_A_i_0_ce0;
    end else begin
        this_A_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        this_A_i_0_we0 = grp_read_to_2cols_fu_1000_A_i_0_we0;
    end else begin
        this_A_i_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_A_j_0_address0 = grp_update_AV_fu_1039_A_j_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_A_j_0_address0 = grp_read_to_2cols_fu_1000_A_j_0_address0;
    end else begin
        this_A_j_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_A_j_0_ce0 = grp_update_AV_fu_1039_A_j_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_A_j_0_ce0 = grp_read_to_2cols_fu_1000_A_j_0_ce0;
    end else begin
        this_A_j_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        this_A_j_0_we0 = grp_read_to_2cols_fu_1000_A_j_0_we0;
    end else begin
        this_A_j_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_V_i_0_address0 = grp_update_AV_fu_1039_V_i_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_V_i_0_address0 = grp_read_to_2cols_fu_1000_V_i_0_address0;
    end else begin
        this_V_i_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_V_i_0_ce0 = grp_update_AV_fu_1039_V_i_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_V_i_0_ce0 = grp_read_to_2cols_fu_1000_V_i_0_ce0;
    end else begin
        this_V_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        this_V_i_0_we0 = grp_read_to_2cols_fu_1000_V_i_0_we0;
    end else begin
        this_V_i_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_V_j_0_address0 = grp_update_AV_fu_1039_V_j_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_V_j_0_address0 = grp_read_to_2cols_fu_1000_V_j_0_address0;
    end else begin
        this_V_j_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        this_V_j_0_ce0 = grp_update_AV_fu_1039_V_j_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_V_j_0_ce0 = grp_read_to_2cols_fu_1000_V_j_0_ce0;
    end else begin
        this_V_j_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        this_V_j_0_we0 = grp_read_to_2cols_fu_1000_V_j_0_we0;
    end else begin
        this_V_j_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        this_matA_0_address0 = zext_ln727_1_fu_2630_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        this_matA_0_address0 = zext_ln268_1_fu_1469_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        this_matA_0_address0 = this_matA_0_addr_reg_2996;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matA_0_address0 = grp_update_AV_fu_1039_matA_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_matA_0_address0 = grp_read_to_2cols_fu_1000_matA_0_address0;
    end else begin
        this_matA_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state9))) begin
        this_matA_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matA_0_ce0 = grp_update_AV_fu_1039_matA_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_matA_0_ce0 = grp_read_to_2cols_fu_1000_matA_0_ce0;
    end else begin
        this_matA_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        this_matA_0_ce1 = grp_read_to_2cols_fu_1000_matA_0_ce1;
    end else begin
        this_matA_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        this_matA_0_d0 = A_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matA_0_d0 = grp_update_AV_fu_1039_matA_0_d0;
    end else begin
        this_matA_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        this_matA_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matA_0_we0 = grp_update_AV_fu_1039_matA_0_we0;
    end else begin
        this_matA_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state153)) begin
        this_matU_address0 = zext_ln324_4_fu_2763_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        this_matU_address0 = this_matU_addr_3_reg_3408;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd1) & (icmp_ln136_fu_1168_p2 == 1'd0))) begin
        this_matU_address0 = this_matU_addr_reg_2915;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd0) & (icmp_ln136_fu_1168_p2 == 1'd0))) begin
        this_matU_address0 = zext_ln143_1_fu_1163_p1;
    end else begin
        this_matU_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state151) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd1) & (icmp_ln136_fu_1168_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd0) & (icmp_ln136_fu_1168_p2 == 1'd0)))) begin
        this_matU_ce0 = 1'b1;
    end else begin
        this_matU_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        this_matU_d0 = trunc_ln703_fu_2701_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd1) & (icmp_ln136_fu_1168_p2 == 1'd0))) begin
        this_matU_d0 = 60'd549755813888;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd0) & (icmp_ln136_fu_1168_p2 == 1'd0))) begin
        this_matU_d0 = 60'd0;
    end else begin
        this_matU_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state151) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd1) & (icmp_ln136_fu_1168_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln140_fu_1174_p2 == 1'd0) & (icmp_ln136_fu_1168_p2 == 1'd0)))) begin
        this_matU_we0 = 1'b1;
    end else begin
        this_matU_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state158)) begin
        this_matV_0_address0 = zext_ln343_3_fu_2861_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd1) & (icmp_ln151_fu_1240_p2 == 1'd0))) begin
        this_matV_0_address0 = this_matV_0_addr_reg_2944;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd0) & (icmp_ln151_fu_1240_p2 == 1'd0))) begin
        this_matV_0_address0 = zext_ln158_1_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matV_0_address0 = grp_update_AV_fu_1039_matV_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_matV_0_address0 = grp_read_to_2cols_fu_1000_matV_0_address0;
    end else begin
        this_matV_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state158) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd1) & (icmp_ln151_fu_1240_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd0) & (icmp_ln151_fu_1240_p2 == 1'd0)))) begin
        this_matV_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matV_0_ce0 = grp_update_AV_fu_1039_matV_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        this_matV_0_ce0 = grp_read_to_2cols_fu_1000_matV_0_ce0;
    end else begin
        this_matV_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        this_matV_0_ce1 = grp_read_to_2cols_fu_1000_matV_0_ce1;
    end else begin
        this_matV_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd1) & (icmp_ln151_fu_1240_p2 == 1'd0))) begin
        this_matV_0_d0 = 60'd549755813888;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd0) & (icmp_ln151_fu_1240_p2 == 1'd0))) begin
        this_matV_0_d0 = 60'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matV_0_d0 = grp_update_AV_fu_1039_matV_0_d0;
    end else begin
        this_matV_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd1) & (icmp_ln151_fu_1240_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln155_fu_1245_p2 == 1'd0) & (icmp_ln151_fu_1240_p2 == 1'd0)))) begin
        this_matV_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        this_matV_0_we0 = grp_update_AV_fu_1039_matV_0_we0;
    end else begin
        this_matV_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state155)) begin
        this_sigma_address0 = zext_ln329_fu_2802_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        this_sigma_address0 = zext_ln255_reg_3080;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_sigma_address0 = zext_ln126_fu_1085_p1;
    end else begin
        this_sigma_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state2))) begin
        this_sigma_ce0 = 1'b1;
    end else begin
        this_sigma_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        this_sigma_d0 = accu_s_V_1_fu_2272_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        this_sigma_d0 = 60'd0;
    end else begin
        this_sigma_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln126_fu_1090_p2 == 1'd0)))) begin
        this_sigma_we0 = 1'b1;
    end else begin
        this_sigma_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln126_fu_1090_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln134_fu_1142_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln136_fu_1168_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln149_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln151_fu_1240_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln165_fu_1284_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln167_fu_1310_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln1494_fu_1326_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln215_fu_1337_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln219_fu_1348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((~((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln255_fu_1414_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln259_fu_1430_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln264_fu_1474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln275_fu_1549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln282_fu_1594_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln289_fu_1639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln885_fu_2280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & ((icmp_ln885_reg_3330 == 1'd1) | ((1'd0 == and_ln1505_reg_3384) | (icmp_ln305_fu_2671_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state152 : begin
            if (((icmp_ln318_fu_2738_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state152))) begin
                ap_NS_fsm = ap_ST_fsm_state155;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end
        end
        ap_ST_fsm_state153 : begin
            if (((icmp_ln320_fu_2772_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state153))) begin
                ap_NS_fsm = ap_ST_fsm_state152;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state155 : begin
            if (((icmp_ln329_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state155))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state157 : begin
            if (((1'b1 == ap_CS_fsm_state157) & (icmp_ln337_fu_2841_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state158;
            end
        end
        ap_ST_fsm_state158 : begin
            if (((icmp_ln339_fu_2866_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state158))) begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state159;
            end
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AUS_accu_V_address1 = zext_ln278_fu_1561_p1;

assign AUS_accu_tmp0_V_address1 = zext_ln285_fu_1606_p1;

assign AUS_accu_tmp0_V_d0 = (AUS_accu_V_q0 + AUS_accu_V_q1);

assign AUS_accu_tmp1_V_address1 = zext_ln292_fu_1651_p1;

assign AUS_accu_tmp1_V_d0 = (AUS_accu_tmp0_V_q0 + AUS_accu_tmp0_V_q1);

assign AUS_accu_tmp2_V_address1 = 64'd0;

assign AUS_accu_tmp2_V_d0 = (AUS_accu_tmp1_V_q0 + AUS_accu_tmp1_V_q1);

assign A_address0 = zext_ln171_fu_1321_p1;

assign F2_fu_2045_p2 = (12'd1075 - zext_ln455_fu_2013_p1);

assign LD_fu_1972_p1 = p_Result_112_fu_1960_p5[31:0];

assign S_address0 = zext_ln329_reg_3467;

assign S_d0 = this_sigma_q0;

assign U_address0 = zext_ln324_fu_2792_p1;

assign U_d0 = this_matU_q0;

assign V_address0 = zext_ln343_fu_2877_p1;

assign V_d0 = this_matV_0_q0;

assign a_3_fu_2422_p2 = (p_Result_6_fu_2414_p3 | and_ln896_fu_2408_p2);

assign accu_s_V_1_fu_2272_p3 = ((icmp_ln571_reg_3276[0:0] == 1'b1) ? 60'd0 : select_ln603_fu_2264_p3);

assign accu_s_V_fu_1674_p2 = (AUS_accu_tmp2_V_q0 + AUS_accu_tmp2_V_q1);

assign add_ln126_fu_1079_p2 = (j_reg_689 + 2'd1);

assign add_ln134_fu_1095_p2 = (i_reg_700 + 7'd1);

assign add_ln136_fu_1148_p2 = (j_1_reg_712 + 7'd1);

assign add_ln143_fu_1158_p2 = (empty_reg_2910 + zext_ln143_fu_1154_p1);

assign add_ln149_fu_1180_p2 = (i_1_reg_723 + 2'd1);

assign add_ln151_fu_1220_p2 = (j_2_reg_735 + 2'd1);

assign add_ln158_fu_1230_p2 = (empty_149_reg_2939 + zext_ln158_fu_1226_p1);

assign add_ln165_1_fu_1257_p2 = (phi_mul_reg_757 + zext_ln167_reg_2952);

assign add_ln165_fu_1251_p2 = (i_2_reg_746 + 7'd1);

assign add_ln167_fu_1290_p2 = (j_3_reg_769 + 2'd1);

assign add_ln171_1_fu_1300_p2 = (sub_ln171_reg_2983 + zext_ln171_2_fu_1296_p1);

assign add_ln171_fu_1315_p2 = (phi_mul_reg_757 + zext_ln171_2_fu_1296_p1);

assign add_ln255_fu_1400_p2 = (j_4_reg_840 + 2'd1);

assign add_ln259_fu_1419_p2 = (t_reg_851 + 5'd1);

assign add_ln264_fu_1436_p2 = (i_6_reg_862 + 7'd1);

assign add_ln268_fu_1464_p2 = (sub_ln268_fu_1458_p2 + zext_ln255_1_reg_3085);

assign add_ln275_fu_1539_p2 = (t_3_reg_873 + 4'd1);

assign add_ln282_fu_1584_p2 = (t_4_reg_884 + 3'd1);

assign add_ln289_fu_1629_p2 = (t_5_reg_895 + 2'd1);

assign add_ln305_fu_2597_p2 = (i_9_reg_906 + 7'd1);

assign add_ln309_1_fu_2661_p2 = (add_ln309_fu_2655_p2 + trunc_ln305_reg_3393);

assign add_ln309_fu_2655_p2 = (tmp_34_fu_2635_p3 + zext_ln309_fu_2651_p1);

assign add_ln318_fu_2706_p2 = (i_5_reg_917 + 7'd1);

assign add_ln320_fu_2748_p2 = (j_7_reg_928 + 7'd1);

assign add_ln324_1_fu_2778_p2 = (zext_ln320_reg_3439 + zext_ln320_1_fu_2768_p1);

assign add_ln324_2_fu_2732_p2 = (tmp_31_fu_2712_p3 + zext_ln324_2_fu_2728_p1);

assign add_ln324_3_fu_2758_p2 = (add_ln324_2_reg_3431 + zext_ln324_3_fu_2754_p1);

assign add_ln324_fu_2787_p2 = (zext_ln324_1_fu_2783_p1 + tmp_31_reg_3426);

assign add_ln329_fu_2796_p2 = (i_7_reg_939 + 2'd1);

assign add_ln337_1_fu_2818_p2 = (phi_mul189_reg_961 + zext_ln165_reg_2957);

assign add_ln337_fu_2812_p2 = (i_11_reg_950 + 2'd1);

assign add_ln339_fu_2846_p2 = (j_8_reg_973 + 2'd1);

assign add_ln343_1_fu_2856_p2 = (sub_ln343_reg_3490 + zext_ln343_2_fu_2852_p1);

assign add_ln343_fu_2871_p2 = (phi_mul189_reg_961 + zext_ln343_2_fu_2852_p1);

assign add_ln415_5_fu_2193_p2 = ($signed(sext_ln591_fu_2162_p1) + $signed(zext_ln415_6_fu_2189_p1));

assign add_ln415_fu_1532_p2 = (trunc_ln_fu_1519_p4 + zext_ln415_fu_1529_p1);

assign add_ln581_fu_2061_p2 = ($signed(F2_fu_2045_p2) + $signed(12'd4057));

assign add_ln591_fu_2166_p2 = ($signed(trunc_ln575_reg_3283) + $signed(11'd2008));

assign add_ln727_fu_2625_p2 = (sub_ln727_fu_2619_p2 + zext_ln255_1_reg_3085);

assign add_ln908_fu_2440_p2 = ($signed(sub_ln894_fu_2334_p2) + $signed(32'd4294967242));

assign add_ln915_fu_2528_p2 = (sub_ln915_fu_2523_p2 + select_ln893_fu_2515_p3);

assign add_ln954_fu_1878_p2 = ($signed(sub_ln944_reg_3228) + $signed(32'd4294967271));

assign add_ln964_fu_1947_p2 = (sub_ln964_fu_1942_p2 + select_ln943_fu_1934_p3);

assign and_ln1505_fu_2584_p2 = (or_ln1505_fu_2580_p2 & grp_fu_1071_p2);

assign and_ln237_fu_1372_p2 = (icmp_ln1498_fu_1360_p2 & icmp_ln1498_1_fu_1366_p2);

assign and_ln581_fu_2231_p2 = (xor_ln582_fu_2225_p2 & icmp_ln581_reg_3288);

assign and_ln582_fu_2204_p2 = (xor_ln571_fu_2199_p2 & icmp_ln582_reg_3294);

assign and_ln603_fu_2259_p2 = (xor_ln581_fu_2253_p2 & icmp_ln603_reg_3305);

assign and_ln896_fu_2408_p2 = (icmp_ln897_fu_2388_p2 & icmp_ln896_fu_2356_p2);

assign and_ln949_1_fu_1838_p2 = (xor_ln949_fu_1818_p2 & p_Result_111_fu_1824_p3);

assign and_ln949_fu_1798_p2 = (tmp_V_11_fu_1698_p3 & or_ln949_1_fu_1792_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state154 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state158 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state13_on_subcall_done = ((ap_sync_grp_read_to_2cols_fu_1000_ap_ready & ap_sync_grp_read_to_2cols_fu_1000_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state14 = ((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14_ignore_call6 = ((sine_reconstructor_16_1075_empty_n == 1'b0) | (sine_reconstructor_16_974_empty_n == 1'b0) | (sine_reconstructor_16_873_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_on_subcall_done = ((ap_sync_grp_svd_and_conv_fu_984_ap_ready & ap_sync_grp_svd_and_conv_fu_984_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state16 = ((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state16_ignore_call16 = ((sine_reconstructor_16_1378_empty_n == 1'b0) | (sine_reconstructor_16_1277_empty_n == 1'b0) | (sine_reconstructor_16_1176_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state17_on_subcall_done = ((ap_sync_grp_update_AV_fu_1039_ap_ready & ap_sync_grp_update_AV_fu_1039_ap_done) == 1'b0);
end

assign ap_sync_grp_read_to_2cols_fu_1000_ap_done = (grp_read_to_2cols_fu_1000_ap_done | ap_sync_reg_grp_read_to_2cols_fu_1000_ap_done);

assign ap_sync_grp_read_to_2cols_fu_1000_ap_ready = (grp_read_to_2cols_fu_1000_ap_ready | ap_sync_reg_grp_read_to_2cols_fu_1000_ap_ready);

assign ap_sync_grp_svd_and_conv_fu_984_ap_done = (grp_svd_and_conv_fu_984_ap_done | ap_sync_reg_grp_svd_and_conv_fu_984_ap_done);

assign ap_sync_grp_svd_and_conv_fu_984_ap_ready = (grp_svd_and_conv_fu_984_ap_ready | ap_sync_reg_grp_svd_and_conv_fu_984_ap_ready);

assign ap_sync_grp_update_AV_fu_1039_ap_done = (grp_update_AV_fu_1039_ap_done | ap_sync_reg_grp_update_AV_fu_1039_ap_done);

assign ap_sync_grp_update_AV_fu_1039_ap_ready = (grp_update_AV_fu_1039_ap_ready | ap_sync_reg_grp_update_AV_fu_1039_ap_ready);

assign ashr_ln586_fu_2121_p2 = $signed(man_V_fu_2109_p3) >>> zext_ln586_fu_2118_p1;

assign bitcast_ln702_fu_2127_p1 = v_assign_reg_3254;

assign bitcast_ln744_fu_1976_p1 = LD_fu_1972_p1;

assign conv_i_fu_2590_p1 = accu_s_V_1_reg_3321;

assign conv_tmp_fu_1378_p3 = ((and_ln237_fu_1372_p2[0:0] == 1'b1) ? 60'd0 : sine_reconstructor_16_1378_dout);

assign empty_148_fu_1131_p2 = (empty_fu_1125_p2 + i_cast_fu_1101_p1);

assign empty_149_fu_1203_p2 = (tmp_30_fu_1190_p3 - i_1_cast_fu_1186_p1);

assign empty_150_fu_1480_p1 = i_6_reg_862[3:0];

assign empty_fu_1125_p2 = (tmp_28_fu_1105_p3 + tmp_59_cast_fu_1121_p1);

assign exp_tmp_fu_2003_p4 = {{ireg_fu_1987_p1[62:52]}};

assign grp_fu_1071_p0 = p_Result_117_fu_2541_p5;

assign grp_fu_2696_p0 = {{this_matA_0_q0}, {39'd0}};

assign grp_fu_2696_p1 = conv_i_reg_3388;

assign grp_read_to_2cols_fu_1000_ap_start = grp_read_to_2cols_fu_1000_ap_start_reg;

assign grp_svd_and_conv_fu_984_ap_start = grp_svd_and_conv_fu_984_ap_start_reg;

assign grp_update_AV_fu_1039_ap_start = grp_update_AV_fu_1039_ap_start_reg;

assign i_10_fu_1354_p2 = (i_8_reg_791 + 2'd1);

assign i_1_cast_fu_1186_p1 = i_1_reg_723;

assign i_cast_fu_1101_p1 = i_reg_700;

assign icmp_ln126_fu_1090_p2 = ((j_reg_689 == n) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_1142_p2 = ((i_reg_700 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_1168_p2 = ((j_1_reg_712 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_1174_p2 = ((i_reg_700 == j_1_reg_712) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_1386_p2 = (($signed(converge567_load_0434_reg_828) > $signed(conv_tmp_fu_1378_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1326_p2 = (($signed(converge_V_reg_780) > $signed(60'd5498)) ? 1'b1 : 1'b0);

assign icmp_ln1498_1_fu_1366_p2 = ((sine_reconstructor_16_1176_dout == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln1498_fu_1360_p2 = ((sine_reconstructor_16_1277_dout == 60'd549755813888) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1209_p2 = ((i_1_reg_723 == n) ? 1'b1 : 1'b0);

assign icmp_ln1505_1_fu_2574_p2 = ((trunc_ln1_fu_2558_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1505_fu_2568_p2 = ((add_ln915_fu_2528_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1240_p2 = ((j_2_reg_735 == n) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_1245_p2 = ((i_1_reg_723 == j_2_reg_735) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_1284_p2 = ((i_2_reg_746 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_1310_p2 = ((j_3_reg_769 == n) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1337_p2 = ((i_8_reg_791 < n) ? 1'b1 : 1'b0);

assign icmp_ln219_fu_1348_p2 = ((j_5_reg_816 == i_8_reg_791) ? 1'b1 : 1'b0);

assign icmp_ln255_fu_1414_p2 = ((j_4_reg_840 == n) ? 1'b1 : 1'b0);

assign icmp_ln259_fu_1430_p2 = ((t_reg_851 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln264_fu_1474_p2 = ((i_6_reg_862 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln275_fu_1549_p2 = ((t_3_reg_873 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_1594_p2 = ((t_4_reg_884 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_1639_p2 = ((t_5_reg_895 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln305_fu_2671_p2 = ((i_9_reg_906 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_2738_p2 = ((i_5_reg_917 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln320_fu_2772_p2 = ((j_7_reg_928 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_2807_p2 = ((i_7_reg_939 == n) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_2841_p2 = ((i_11_reg_950 == n) ? 1'b1 : 1'b0);

assign icmp_ln339_fu_2866_p2 = ((j_8_reg_973 == n) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_2039_p2 = ((trunc_ln555_fu_1991_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_2055_p2 = (($signed(F2_fu_2045_p2) > $signed(12'd39)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_2081_p2 = ((F2_fu_2045_p2 == 12'd39) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_2087_p2 = ((sh_amt_fu_2073_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_2103_p2 = (($signed(add_ln581_fu_2061_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_2093_p2 = ((sh_amt_fu_2073_p3 < 12'd60) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_2280_p2 = ((accu_s_V_1_reg_3321 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_2356_p2 = (($signed(tmp_64_fu_2346_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_2388_p2 = ((p_Result_106_fu_2382_p2 != 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_2428_p2 = (($signed(lsb_index_3_fu_2340_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1688_p2 = ((accu_s_V_reg_3204 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_1756_p2 = (($signed(tmp_58_fu_1746_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_1804_p2 = ((and_ln949_fu_1798_p2 != 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_1832_p2 = (($signed(lsb_index_fu_1740_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_fu_1987_p1 = grp_fu_1063_p1;

assign j_6_fu_1342_p2 = (j_5_reg_816 + 2'd1);

assign jj_1_fu_2677_p2 = (jj_fu_334 + 32'd1);

assign l_3_fu_2330_p1 = tmp_2_fu_2322_p3[31:0];

assign l_fu_1730_p1 = tmp_s_fu_1722_p3[31:0];

assign lhs_6_fu_1506_p3 = {{AUS_accu_V_q0}, {39'd0}};

assign lsb_index_3_fu_2340_p2 = ($signed(sub_ln894_fu_2334_p2) + $signed(32'd4294967243));

assign lsb_index_fu_1740_p2 = ($signed(sub_ln944_fu_1734_p2) + $signed(32'd4294967272));

assign lshr_ln897_fu_2376_p2 = 60'd1152921504606846975 >> zext_ln897_fu_2372_p1;

assign lshr_ln908_fu_2471_p2 = zext_ln907_fu_2456_p1 >> zext_ln908_fu_2468_p1;

assign lshr_ln947_fu_1776_p2 = 60'd1152921504606846975 >> zext_ln947_fu_1772_p1;

assign lshr_ln954_fu_1887_p2 = tmp_V_11_reg_3222 >> zext_ln954_fu_1883_p1;

assign m_24_fu_2477_p3 = ((icmp_ln908_reg_3344[0:0] == 1'b1) ? lshr_ln908_fu_2471_p2 : shl_ln909_fu_2462_p2);

assign m_25_fu_1906_p2 = (zext_ln951_fu_1899_p1 + zext_ln961_fu_1903_p1);

assign m_28_fu_2487_p2 = (m_24_fu_2477_p3 + zext_ln911_fu_2484_p1);

assign m_30_fu_2297_p3 = ((p_Result_115_fu_2285_p3[0:0] == 1'b1) ? tmp_V_fu_2292_p2 : accu_s_V_1_reg_3321);

assign m_31_fu_2493_p4 = {{m_28_fu_2487_p2[63:1]}};

assign m_fu_1892_p3 = ((icmp_ln954_reg_3234[0:0] == 1'b1) ? lshr_ln954_fu_1887_p2 : shl_ln955_fu_1873_p2);

assign m_s_fu_1912_p4 = {{m_25_fu_1906_p2[60:1]}};

assign man_V_7_fu_2033_p2 = (54'd0 - zext_ln569_fu_2029_p1);

assign man_V_fu_2109_p3 = ((p_Result_113_reg_3260[0:0] == 1'b1) ? man_V_7_reg_3271 : zext_ln569_reg_3266);

assign or_ln1505_fu_2580_p2 = (icmp_ln1505_reg_3374 | icmp_ln1505_1_reg_3379);

assign or_ln278_fu_1566_p2 = (shl_ln278_fu_1555_p2 | 4'd1);

assign or_ln285_fu_1611_p2 = (shl_ln285_fu_1600_p2 | 3'd1);

assign or_ln292_fu_1656_p2 = (shl_ln292_fu_1645_p2 | 2'd1);

assign or_ln581_fu_2248_p2 = (or_ln582_fu_2221_p2 | icmp_ln581_reg_3288);

assign or_ln582_fu_2221_p2 = (icmp_ln582_reg_3294 | icmp_ln571_reg_3276);

assign or_ln949_1_fu_1792_p2 = (shl_ln949_fu_1786_p2 | lshr_ln947_fu_1776_p2);

assign p_Result_106_fu_2382_p2 = (m_30_fu_2297_p3 & lshr_ln897_fu_2376_p2);

assign p_Result_107_fu_2507_p3 = m_28_fu_2487_p2[32'd54];

assign p_Result_110_fu_1714_p3 = {{4'd15}, {p_Result_s_fu_1704_p4}};

assign p_Result_111_fu_1824_p3 = tmp_V_11_fu_1698_p3[lsb_index_fu_1740_p2];

assign p_Result_112_fu_1960_p5 = {{zext_ln951_1_fu_1922_p1[63:32]}, {tmp_1_fu_1953_p3}, {zext_ln951_1_fu_1922_p1[22:0]}};

assign p_Result_114_fu_2021_p3 = {{1'd1}, {trunc_ln565_fu_2017_p1}};

assign p_Result_115_fu_2285_p3 = accu_s_V_1_reg_3321[32'd59];

assign p_Result_116_fu_2314_p3 = {{4'd15}, {p_Result_9_fu_2304_p4}};

assign p_Result_117_fu_2541_p5 = {{tmp_4_fu_2534_p3}, {zext_ln912_fu_2503_p1[51:0]}};

assign p_Result_6_fu_2414_p3 = m_30_fu_2297_p3[lsb_index_3_fu_2340_p2];

assign p_Result_8_fu_2175_p3 = man_V_fu_2109_p3[zext_ln591_fu_2171_p1];

assign p_Result_97_fu_1926_p3 = m_25_fu_1906_p2[32'd25];

integer ap_tvar_int_0;

always @ (m_30_fu_2297_p3) begin
    for (ap_tvar_int_0 = 60 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 59 - 0) begin
            p_Result_9_fu_2304_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_9_fu_2304_p4[ap_tvar_int_0] = m_30_fu_2297_p3[59 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_V_11_fu_1698_p3) begin
    for (ap_tvar_int_1 = 60 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 59 - 0) begin
            p_Result_s_fu_1704_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_1704_p4[ap_tvar_int_1] = tmp_V_11_fu_1698_p3[59 - ap_tvar_int_1];
        end
    end
end

assign p_cast_fu_1137_p1 = empty_148_fu_1131_p2;

assign p_shl3_fu_1198_p1 = tmp_30_fu_1190_p3;

assign qb_fu_2183_p3 = ((icmp_ln591_reg_3316[0:0] == 1'b1) ? p_Result_113_reg_3260 : p_Result_8_fu_2175_p3);

assign r_V_30_fu_1488_p0 = sext_ln1115_fu_1484_p1;

assign r_V_30_fu_1488_p1 = sext_ln1115_fu_1484_p1;

assign ret_V_fu_1514_p2 = (lhs_6_fu_1506_p3 + r_V_30_reg_3120);

assign select_ln255_fu_1392_p3 = ((icmp_ln1494_1_fu_1386_p2[0:0] == 1'b1) ? converge567_load_0434_reg_828 : conv_tmp_fu_1378_p3);

assign select_ln581_fu_2236_p3 = ((and_ln581_fu_2231_p2[0:0] == 1'b1) ? add_ln415_5_fu_2193_p2 : sext_ln582_fu_2217_p1);

assign select_ln582_fu_2209_p3 = ((and_ln582_fu_2204_p2[0:0] == 1'b1) ? man_V_fu_2109_p3 : 54'd0);

assign select_ln585_fu_2155_p3 = ((icmp_ln585_reg_3300[0:0] == 1'b1) ? ashr_ln586_fu_2121_p2 : trunc_ln588_cast_fu_2138_p3);

assign select_ln603_fu_2264_p3 = ((and_ln603_fu_2259_p2[0:0] == 1'b1) ? shl_ln604_fu_2149_p2 : sext_ln581_fu_2244_p1);

assign select_ln893_fu_2515_p3 = ((p_Result_107_fu_2507_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln935_fu_1980_p3 = ((icmp_ln935_reg_3217[0:0] == 1'b1) ? 32'd0 : bitcast_ln744_fu_1976_p1);

assign select_ln943_fu_1934_p3 = ((p_Result_97_fu_1926_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_fu_1844_p3 = ((icmp_ln946_fu_1756_p2[0:0] == 1'b1) ? icmp_ln949_fu_1804_p2 : p_Result_111_fu_1824_p3);

assign select_ln954_fu_1852_p3 = ((icmp_ln954_fu_1832_p2[0:0] == 1'b1) ? select_ln946_fu_1844_p3 : and_ln949_1_fu_1838_p2);

assign sext_ln1115_fu_1484_p1 = $signed(this_matA_0_q0);

assign sext_ln581_fu_2244_p1 = $signed(select_ln581_fu_2236_p3);

assign sext_ln582_fu_2217_p1 = $signed(select_ln582_fu_2209_p3);

assign sext_ln583_fu_2114_p1 = man_V_fu_2109_p3;

assign sext_ln591_fu_2162_p1 = $signed(select_ln585_fu_2155_p3);

assign sh_amt_fu_2073_p3 = ((icmp_ln581_fu_2055_p2[0:0] == 1'b1) ? add_ln581_fu_2061_p2 : sub_ln581_fu_2067_p2);

assign shl_ln278_fu_1555_p2 = t_3_reg_873 << 4'd1;

assign shl_ln285_fu_1600_p2 = t_4_reg_884 << 3'd1;

assign shl_ln292_fu_1645_p2 = t_5_reg_895 << 2'd1;

assign shl_ln604_fu_2149_p2 = sext_ln583_fu_2114_p1 << zext_ln604_fu_2146_p1;

assign shl_ln909_fu_2462_p2 = zext_ln907_fu_2456_p1 << zext_ln909_fu_2459_p1;

assign shl_ln949_fu_1786_p2 = 60'd1 << zext_ln949_fu_1782_p1;

assign shl_ln955_fu_1873_p2 = tmp_V_11_reg_3222 << zext_ln955_fu_1869_p1;

assign sine_reconstructor_16_1075_din = grp_read_to_2cols_fu_1000_sine_reconstructor_16_1075_din;

assign sine_reconstructor_16_1176_din = grp_svd_and_conv_fu_984_sine_reconstructor_16_1176_din;

assign sine_reconstructor_16_1277_din = grp_svd_and_conv_fu_984_sine_reconstructor_16_1277_din;

assign sine_reconstructor_16_1378_din = grp_svd_and_conv_fu_984_sine_reconstructor_16_1378_din;

assign sine_reconstructor_16_873_din = grp_read_to_2cols_fu_1000_sine_reconstructor_16_873_din;

assign sine_reconstructor_16_974_din = grp_read_to_2cols_fu_1000_sine_reconstructor_16_974_din;

assign sub_ln171_fu_1278_p2 = (tmp_61_cast_fu_1270_p3 - zext_ln171_1_fu_1262_p1);

assign sub_ln268_fu_1458_p2 = (tmp_65_cast_fu_1450_p3 - zext_ln268_fu_1442_p1);

assign sub_ln343_fu_2835_p2 = (tmp_33_fu_2827_p3 - zext_ln343_1_fu_2823_p1);

assign sub_ln581_fu_2067_p2 = (12'd39 - F2_fu_2045_p2);

assign sub_ln727_fu_2619_p2 = (tmp_70_cast_fu_2611_p3 - zext_ln727_fu_2603_p1);

assign sub_ln894_fu_2334_p2 = (32'd60 - l_3_fu_2330_p1);

assign sub_ln897_fu_2366_p2 = ($signed(6'd50) - $signed(trunc_ln897_fu_2362_p1));

assign sub_ln909_fu_2434_p2 = (32'd54 - sub_ln894_fu_2334_p2);

assign sub_ln915_fu_2523_p2 = (11'd21 - trunc_ln893_reg_3364);

assign sub_ln944_fu_1734_p2 = (32'd60 - l_fu_1730_p1);

assign sub_ln947_fu_1766_p2 = (6'd21 - trunc_ln947_fu_1762_p1);

assign sub_ln955_fu_1864_p2 = (32'd25 - sub_ln944_reg_3228);

assign sub_ln964_fu_1942_p2 = (8'd21 - trunc_ln943_reg_3244);

assign this_A_i_0_d0 = grp_read_to_2cols_fu_1000_A_i_0_d0;

assign this_A_j_0_d0 = grp_read_to_2cols_fu_1000_A_j_0_d0;

assign this_V_i_0_d0 = grp_read_to_2cols_fu_1000_V_i_0_d0;

assign this_V_j_0_d0 = grp_read_to_2cols_fu_1000_V_j_0_d0;

assign this_alpha_acc_0_address0 = grp_read_to_2cols_fu_1000_this_alpha_acc_0_address0;

assign this_alpha_acc_0_ce0 = grp_read_to_2cols_fu_1000_this_alpha_acc_0_ce0;

assign this_alpha_acc_0_d0 = grp_read_to_2cols_fu_1000_this_alpha_acc_0_d0;

assign this_alpha_acc_0_we0 = grp_read_to_2cols_fu_1000_this_alpha_acc_0_we0;

assign this_alpha_sum_address0 = grp_read_to_2cols_fu_1000_this_alpha_sum_address0;

assign this_alpha_sum_address1 = grp_read_to_2cols_fu_1000_this_alpha_sum_address1;

assign this_alpha_sum_ce0 = grp_read_to_2cols_fu_1000_this_alpha_sum_ce0;

assign this_alpha_sum_ce1 = grp_read_to_2cols_fu_1000_this_alpha_sum_ce1;

assign this_alpha_sum_d0 = grp_read_to_2cols_fu_1000_this_alpha_sum_d0;

assign this_alpha_sum_we0 = grp_read_to_2cols_fu_1000_this_alpha_sum_we0;

assign this_beta_acc_0_address0 = grp_read_to_2cols_fu_1000_this_beta_acc_0_address0;

assign this_beta_acc_0_ce0 = grp_read_to_2cols_fu_1000_this_beta_acc_0_ce0;

assign this_beta_acc_0_d0 = grp_read_to_2cols_fu_1000_this_beta_acc_0_d0;

assign this_beta_acc_0_we0 = grp_read_to_2cols_fu_1000_this_beta_acc_0_we0;

assign this_beta_sum_address0 = grp_read_to_2cols_fu_1000_this_beta_sum_address0;

assign this_beta_sum_address1 = grp_read_to_2cols_fu_1000_this_beta_sum_address1;

assign this_beta_sum_ce0 = grp_read_to_2cols_fu_1000_this_beta_sum_ce0;

assign this_beta_sum_ce1 = grp_read_to_2cols_fu_1000_this_beta_sum_ce1;

assign this_beta_sum_d0 = grp_read_to_2cols_fu_1000_this_beta_sum_d0;

assign this_beta_sum_we0 = grp_read_to_2cols_fu_1000_this_beta_sum_we0;

assign this_gamma_acc_0_address0 = grp_read_to_2cols_fu_1000_this_gamma_acc_0_address0;

assign this_gamma_acc_0_ce0 = grp_read_to_2cols_fu_1000_this_gamma_acc_0_ce0;

assign this_gamma_acc_0_d0 = grp_read_to_2cols_fu_1000_this_gamma_acc_0_d0;

assign this_gamma_acc_0_we0 = grp_read_to_2cols_fu_1000_this_gamma_acc_0_we0;

assign this_gamma_sum_address0 = grp_read_to_2cols_fu_1000_this_gamma_sum_address0;

assign this_gamma_sum_address1 = grp_read_to_2cols_fu_1000_this_gamma_sum_address1;

assign this_gamma_sum_ce0 = grp_read_to_2cols_fu_1000_this_gamma_sum_ce0;

assign this_gamma_sum_ce1 = grp_read_to_2cols_fu_1000_this_gamma_sum_ce1;

assign this_gamma_sum_d0 = grp_read_to_2cols_fu_1000_this_gamma_sum_d0;

assign this_gamma_sum_we0 = grp_read_to_2cols_fu_1000_this_gamma_sum_we0;

assign this_matA_0_address1 = grp_read_to_2cols_fu_1000_matA_0_address1;

assign this_matV_0_address1 = grp_read_to_2cols_fu_1000_matV_0_address1;

assign tmp_1_fu_1953_p3 = {{p_Result_109_reg_3211}, {add_ln964_fu_1947_p2}};

assign tmp_28_fu_1105_p3 = {{i_reg_700}, {6'd0}};

assign tmp_29_fu_1113_p3 = {{i_reg_700}, {4'd0}};


always @ (p_Result_116_fu_2314_p3) begin
    if (p_Result_116_fu_2314_p3[0] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd0;
    end else if (p_Result_116_fu_2314_p3[1] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd1;
    end else if (p_Result_116_fu_2314_p3[2] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd2;
    end else if (p_Result_116_fu_2314_p3[3] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd3;
    end else if (p_Result_116_fu_2314_p3[4] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd4;
    end else if (p_Result_116_fu_2314_p3[5] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd5;
    end else if (p_Result_116_fu_2314_p3[6] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd6;
    end else if (p_Result_116_fu_2314_p3[7] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd7;
    end else if (p_Result_116_fu_2314_p3[8] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd8;
    end else if (p_Result_116_fu_2314_p3[9] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd9;
    end else if (p_Result_116_fu_2314_p3[10] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd10;
    end else if (p_Result_116_fu_2314_p3[11] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd11;
    end else if (p_Result_116_fu_2314_p3[12] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd12;
    end else if (p_Result_116_fu_2314_p3[13] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd13;
    end else if (p_Result_116_fu_2314_p3[14] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd14;
    end else if (p_Result_116_fu_2314_p3[15] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd15;
    end else if (p_Result_116_fu_2314_p3[16] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd16;
    end else if (p_Result_116_fu_2314_p3[17] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd17;
    end else if (p_Result_116_fu_2314_p3[18] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd18;
    end else if (p_Result_116_fu_2314_p3[19] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd19;
    end else if (p_Result_116_fu_2314_p3[20] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd20;
    end else if (p_Result_116_fu_2314_p3[21] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd21;
    end else if (p_Result_116_fu_2314_p3[22] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd22;
    end else if (p_Result_116_fu_2314_p3[23] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd23;
    end else if (p_Result_116_fu_2314_p3[24] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd24;
    end else if (p_Result_116_fu_2314_p3[25] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd25;
    end else if (p_Result_116_fu_2314_p3[26] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd26;
    end else if (p_Result_116_fu_2314_p3[27] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd27;
    end else if (p_Result_116_fu_2314_p3[28] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd28;
    end else if (p_Result_116_fu_2314_p3[29] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd29;
    end else if (p_Result_116_fu_2314_p3[30] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd30;
    end else if (p_Result_116_fu_2314_p3[31] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd31;
    end else if (p_Result_116_fu_2314_p3[32] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd32;
    end else if (p_Result_116_fu_2314_p3[33] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd33;
    end else if (p_Result_116_fu_2314_p3[34] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd34;
    end else if (p_Result_116_fu_2314_p3[35] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd35;
    end else if (p_Result_116_fu_2314_p3[36] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd36;
    end else if (p_Result_116_fu_2314_p3[37] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd37;
    end else if (p_Result_116_fu_2314_p3[38] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd38;
    end else if (p_Result_116_fu_2314_p3[39] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd39;
    end else if (p_Result_116_fu_2314_p3[40] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd40;
    end else if (p_Result_116_fu_2314_p3[41] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd41;
    end else if (p_Result_116_fu_2314_p3[42] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd42;
    end else if (p_Result_116_fu_2314_p3[43] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd43;
    end else if (p_Result_116_fu_2314_p3[44] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd44;
    end else if (p_Result_116_fu_2314_p3[45] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd45;
    end else if (p_Result_116_fu_2314_p3[46] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd46;
    end else if (p_Result_116_fu_2314_p3[47] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd47;
    end else if (p_Result_116_fu_2314_p3[48] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd48;
    end else if (p_Result_116_fu_2314_p3[49] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd49;
    end else if (p_Result_116_fu_2314_p3[50] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd50;
    end else if (p_Result_116_fu_2314_p3[51] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd51;
    end else if (p_Result_116_fu_2314_p3[52] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd52;
    end else if (p_Result_116_fu_2314_p3[53] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd53;
    end else if (p_Result_116_fu_2314_p3[54] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd54;
    end else if (p_Result_116_fu_2314_p3[55] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd55;
    end else if (p_Result_116_fu_2314_p3[56] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd56;
    end else if (p_Result_116_fu_2314_p3[57] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd57;
    end else if (p_Result_116_fu_2314_p3[58] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd58;
    end else if (p_Result_116_fu_2314_p3[59] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd59;
    end else if (p_Result_116_fu_2314_p3[60] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd60;
    end else if (p_Result_116_fu_2314_p3[61] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd61;
    end else if (p_Result_116_fu_2314_p3[62] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd62;
    end else if (p_Result_116_fu_2314_p3[63] == 1'b1) begin
        tmp_2_fu_2322_p3 = 64'd63;
    end else begin
        tmp_2_fu_2322_p3 = 64'd64;
    end
end

assign tmp_30_fu_1190_p3 = {{i_1_reg_723}, {2'd0}};

assign tmp_31_fu_2712_p3 = {{i_5_reg_917}, {6'd0}};

assign tmp_32_fu_2720_p3 = {{i_5_reg_917}, {4'd0}};

assign tmp_33_fu_2827_p3 = {{i_11_reg_950}, {2'd0}};

assign tmp_34_fu_2635_p3 = {{i_9_reg_906}, {6'd0}};

assign tmp_35_fu_2643_p3 = {{i_9_reg_906}, {4'd0}};

assign tmp_4_fu_2534_p3 = {{p_Result_115_reg_3334}, {add_ln915_fu_2528_p2}};

assign tmp_58_fu_1746_p4 = {{lsb_index_fu_1740_p2[31:1]}};

assign tmp_59_cast_fu_1121_p1 = tmp_29_fu_1113_p3;

assign tmp_59_fu_1810_p3 = lsb_index_fu_1740_p2[32'd31];

assign tmp_61_cast_fu_1270_p3 = {{trunc_ln171_fu_1266_p1}, {2'd0}};

assign tmp_62_fu_2130_p3 = bitcast_ln702_fu_2127_p1[32'd31];

assign tmp_64_fu_2346_p4 = {{lsb_index_3_fu_2340_p2[31:1]}};

assign tmp_65_cast_fu_1450_p3 = {{trunc_ln268_fu_1446_p1}, {2'd0}};

assign tmp_65_fu_2394_p3 = lsb_index_3_fu_2340_p2[32'd31];

assign tmp_70_cast_fu_2611_p3 = {{trunc_ln727_fu_2607_p1}, {2'd0}};

assign tmp_V_11_fu_1698_p3 = ((p_Result_109_reg_3211[0:0] == 1'b1) ? tmp_V_8_fu_1693_p2 : accu_s_V_reg_3204);

assign tmp_V_8_fu_1693_p2 = (60'd0 - accu_s_V_reg_3204);

assign tmp_V_fu_2292_p2 = ($signed(60'd0) - $signed(accu_s_V_1_reg_3321));


always @ (p_Result_110_fu_1714_p3) begin
    if (p_Result_110_fu_1714_p3[0] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd0;
    end else if (p_Result_110_fu_1714_p3[1] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd1;
    end else if (p_Result_110_fu_1714_p3[2] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd2;
    end else if (p_Result_110_fu_1714_p3[3] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd3;
    end else if (p_Result_110_fu_1714_p3[4] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd4;
    end else if (p_Result_110_fu_1714_p3[5] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd5;
    end else if (p_Result_110_fu_1714_p3[6] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd6;
    end else if (p_Result_110_fu_1714_p3[7] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd7;
    end else if (p_Result_110_fu_1714_p3[8] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd8;
    end else if (p_Result_110_fu_1714_p3[9] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd9;
    end else if (p_Result_110_fu_1714_p3[10] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd10;
    end else if (p_Result_110_fu_1714_p3[11] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd11;
    end else if (p_Result_110_fu_1714_p3[12] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd12;
    end else if (p_Result_110_fu_1714_p3[13] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd13;
    end else if (p_Result_110_fu_1714_p3[14] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd14;
    end else if (p_Result_110_fu_1714_p3[15] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd15;
    end else if (p_Result_110_fu_1714_p3[16] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd16;
    end else if (p_Result_110_fu_1714_p3[17] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd17;
    end else if (p_Result_110_fu_1714_p3[18] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd18;
    end else if (p_Result_110_fu_1714_p3[19] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd19;
    end else if (p_Result_110_fu_1714_p3[20] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd20;
    end else if (p_Result_110_fu_1714_p3[21] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd21;
    end else if (p_Result_110_fu_1714_p3[22] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd22;
    end else if (p_Result_110_fu_1714_p3[23] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd23;
    end else if (p_Result_110_fu_1714_p3[24] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd24;
    end else if (p_Result_110_fu_1714_p3[25] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd25;
    end else if (p_Result_110_fu_1714_p3[26] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd26;
    end else if (p_Result_110_fu_1714_p3[27] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd27;
    end else if (p_Result_110_fu_1714_p3[28] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd28;
    end else if (p_Result_110_fu_1714_p3[29] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd29;
    end else if (p_Result_110_fu_1714_p3[30] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd30;
    end else if (p_Result_110_fu_1714_p3[31] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd31;
    end else if (p_Result_110_fu_1714_p3[32] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd32;
    end else if (p_Result_110_fu_1714_p3[33] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd33;
    end else if (p_Result_110_fu_1714_p3[34] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd34;
    end else if (p_Result_110_fu_1714_p3[35] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd35;
    end else if (p_Result_110_fu_1714_p3[36] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd36;
    end else if (p_Result_110_fu_1714_p3[37] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd37;
    end else if (p_Result_110_fu_1714_p3[38] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd38;
    end else if (p_Result_110_fu_1714_p3[39] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd39;
    end else if (p_Result_110_fu_1714_p3[40] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd40;
    end else if (p_Result_110_fu_1714_p3[41] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd41;
    end else if (p_Result_110_fu_1714_p3[42] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd42;
    end else if (p_Result_110_fu_1714_p3[43] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd43;
    end else if (p_Result_110_fu_1714_p3[44] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd44;
    end else if (p_Result_110_fu_1714_p3[45] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd45;
    end else if (p_Result_110_fu_1714_p3[46] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd46;
    end else if (p_Result_110_fu_1714_p3[47] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd47;
    end else if (p_Result_110_fu_1714_p3[48] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd48;
    end else if (p_Result_110_fu_1714_p3[49] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd49;
    end else if (p_Result_110_fu_1714_p3[50] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd50;
    end else if (p_Result_110_fu_1714_p3[51] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd51;
    end else if (p_Result_110_fu_1714_p3[52] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd52;
    end else if (p_Result_110_fu_1714_p3[53] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd53;
    end else if (p_Result_110_fu_1714_p3[54] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd54;
    end else if (p_Result_110_fu_1714_p3[55] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd55;
    end else if (p_Result_110_fu_1714_p3[56] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd56;
    end else if (p_Result_110_fu_1714_p3[57] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd57;
    end else if (p_Result_110_fu_1714_p3[58] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd58;
    end else if (p_Result_110_fu_1714_p3[59] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd59;
    end else if (p_Result_110_fu_1714_p3[60] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd60;
    end else if (p_Result_110_fu_1714_p3[61] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd61;
    end else if (p_Result_110_fu_1714_p3[62] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd62;
    end else if (p_Result_110_fu_1714_p3[63] == 1'b1) begin
        tmp_s_fu_1722_p3 = 64'd63;
    end else begin
        tmp_s_fu_1722_p3 = 64'd64;
    end
end

assign tobool31_i_i27_fu_2446_p2 = (xor_ln899_fu_2402_p2 & a_3_fu_2422_p2);

assign trunc_ln171_fu_1266_p1 = i_2_reg_746[5:0];

assign trunc_ln1_fu_2558_p4 = {{m_28_fu_2487_p2[52:1]}};

assign trunc_ln268_fu_1446_p1 = i_6_reg_862[5:0];

assign trunc_ln305_fu_2593_p1 = jj_fu_334[12:0];

assign trunc_ln555_fu_1991_p1 = ireg_fu_1987_p1[62:0];

assign trunc_ln565_fu_2017_p1 = ireg_fu_1987_p1[51:0];

assign trunc_ln575_fu_2051_p1 = F2_fu_2045_p2[10:0];

assign trunc_ln586_fu_2099_p1 = sh_amt_fu_2073_p3[5:0];

assign trunc_ln588_cast_fu_2138_p3 = ((tmp_62_fu_2130_p3[0:0] == 1'b1) ? 54'd18014398509481983 : 54'd0);

assign trunc_ln703_fu_2701_p1 = grp_fu_2696_p2[59:0];

assign trunc_ln727_fu_2607_p1 = i_9_reg_906[5:0];

assign trunc_ln893_fu_2452_p1 = tmp_2_fu_2322_p3[10:0];

assign trunc_ln897_fu_2362_p1 = sub_ln894_fu_2334_p2[5:0];

assign trunc_ln943_fu_1860_p1 = tmp_s_fu_1722_p3[7:0];

assign trunc_ln947_fu_1762_p1 = sub_ln944_fu_1734_p2[5:0];

assign trunc_ln_fu_1519_p4 = {{ret_V_fu_1514_p2[98:39]}};

assign xor_ln571_fu_2199_p2 = (icmp_ln571_reg_3276 ^ 1'd1);

assign xor_ln581_fu_2253_p2 = (or_ln581_fu_2248_p2 ^ 1'd1);

assign xor_ln582_fu_2225_p2 = (or_ln582_fu_2221_p2 ^ 1'd1);

assign xor_ln899_fu_2402_p2 = (tmp_65_fu_2394_p3 ^ 1'd1);

assign xor_ln949_fu_1818_p2 = (tmp_59_fu_1810_p3 ^ 1'd1);

assign zext_ln126_fu_1085_p1 = j_reg_689;

assign zext_ln143_1_fu_1163_p1 = add_ln143_fu_1158_p2;

assign zext_ln143_fu_1154_p1 = j_1_reg_712;

assign zext_ln158_1_fu_1235_p1 = add_ln158_fu_1230_p2;

assign zext_ln158_fu_1226_p1 = j_2_reg_735;

assign zext_ln165_fu_1217_p1 = n;

assign zext_ln167_fu_1214_p1 = n;

assign zext_ln171_1_fu_1262_p1 = i_2_reg_746;

assign zext_ln171_2_fu_1296_p1 = j_3_reg_769;

assign zext_ln171_3_fu_1305_p1 = add_ln171_1_fu_1300_p2;

assign zext_ln171_fu_1321_p1 = add_ln171_fu_1315_p2;

assign zext_ln255_1_fu_1410_p1 = j_4_reg_840;

assign zext_ln255_fu_1406_p1 = j_4_reg_840;

assign zext_ln259_fu_1425_p1 = t_reg_851;

assign zext_ln268_1_fu_1469_p1 = add_ln268_fu_1464_p2;

assign zext_ln268_fu_1442_p1 = i_6_reg_862;

assign zext_ln269_fu_1494_p1 = empty_150_reg_3115;

assign zext_ln275_fu_1545_p1 = t_3_reg_873;

assign zext_ln278_fu_1561_p1 = shl_ln278_fu_1555_p2;

assign zext_ln282_fu_1590_p1 = t_4_reg_884;

assign zext_ln285_fu_1606_p1 = shl_ln285_fu_1600_p2;

assign zext_ln289_fu_1635_p1 = t_5_reg_895;

assign zext_ln292_fu_1651_p1 = shl_ln292_fu_1645_p2;

assign zext_ln309_1_fu_2666_p1 = add_ln309_1_fu_2661_p2;

assign zext_ln309_fu_2651_p1 = tmp_35_fu_2643_p3;

assign zext_ln320_1_fu_2768_p1 = j_7_reg_928;

assign zext_ln320_fu_2744_p1 = tmp_32_fu_2720_p3;

assign zext_ln324_1_fu_2783_p1 = add_ln324_1_fu_2778_p2;

assign zext_ln324_2_fu_2728_p1 = tmp_32_fu_2720_p3;

assign zext_ln324_3_fu_2754_p1 = j_7_reg_928;

assign zext_ln324_4_fu_2763_p1 = add_ln324_3_fu_2758_p2;

assign zext_ln324_fu_2792_p1 = add_ln324_reg_3457;

assign zext_ln329_fu_2802_p1 = i_7_reg_939;

assign zext_ln343_1_fu_2823_p1 = i_11_reg_950;

assign zext_ln343_2_fu_2852_p1 = j_8_reg_973;

assign zext_ln343_3_fu_2861_p1 = add_ln343_1_fu_2856_p2;

assign zext_ln343_fu_2877_p1 = add_ln343_reg_3511;

assign zext_ln415_6_fu_2189_p1 = qb_fu_2183_p3;

assign zext_ln415_fu_1529_p1 = tmp_56_reg_3130;

assign zext_ln455_fu_2013_p1 = exp_tmp_fu_2003_p4;

assign zext_ln569_fu_2029_p1 = p_Result_114_fu_2021_p3;

assign zext_ln586_fu_2118_p1 = trunc_ln586_reg_3310;

assign zext_ln591_fu_2171_p1 = add_ln591_fu_2166_p2;

assign zext_ln604_fu_2146_p1 = trunc_ln586_reg_3310;

assign zext_ln703_3_fu_1617_p1 = or_ln285_fu_1611_p2;

assign zext_ln703_4_fu_1662_p1 = or_ln292_fu_1656_p2;

assign zext_ln703_fu_1572_p1 = or_ln278_fu_1566_p2;

assign zext_ln727_1_fu_2630_p1 = add_ln727_fu_2625_p2;

assign zext_ln727_fu_2603_p1 = i_9_reg_906;

assign zext_ln897_fu_2372_p1 = sub_ln897_fu_2366_p2;

assign zext_ln907_fu_2456_p1 = m_30_reg_3339;

assign zext_ln908_fu_2468_p1 = add_ln908_reg_3354;

assign zext_ln909_fu_2459_p1 = sub_ln909_reg_3349;

assign zext_ln911_fu_2484_p1 = tobool31_i_i27_reg_3359;

assign zext_ln912_fu_2503_p1 = m_31_fu_2493_p4;

assign zext_ln947_fu_1772_p1 = sub_ln947_fu_1766_p2;

assign zext_ln949_fu_1782_p1 = lsb_index_fu_1740_p2;

assign zext_ln951_1_fu_1922_p1 = m_s_fu_1912_p4;

assign zext_ln951_fu_1899_p1 = m_fu_1892_p3;

assign zext_ln954_fu_1883_p1 = add_ln954_fu_1878_p2;

assign zext_ln955_fu_1869_p1 = sub_ln955_fu_1864_p2;

assign zext_ln961_fu_1903_p1 = select_ln954_reg_3239;

always @ (posedge ap_clk) begin
    empty_reg_2910[3:0] <= 4'b0000;
    this_matV_0_addr_reg_2944[1:0] <= 2'b00;
    zext_ln167_reg_2952[7:2] <= 6'b000000;
    zext_ln165_reg_2957[3:2] <= 2'b00;
    zext_ln255_reg_3080[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    zext_ln255_1_reg_3085[7:2] <= 6'b000000;
    zext_ln275_reg_3140[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln282_reg_3163[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln289_reg_3186[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    zext_ln569_reg_3266[53:52] <= 2'b01;
    tmp_31_reg_3426[5:0] <= 6'b000000;
    add_ln324_2_reg_3431[3:0] <= 4'b0000;
    zext_ln320_reg_3439[3:0] <= 4'b0000;
    zext_ln320_reg_3439[11] <= 1'b0;
    zext_ln329_reg_3467[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //LLSSineReconstruction_gesvj
