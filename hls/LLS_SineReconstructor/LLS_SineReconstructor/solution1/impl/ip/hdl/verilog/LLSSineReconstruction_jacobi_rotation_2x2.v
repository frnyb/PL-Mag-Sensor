// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_jacobi_rotation_2x2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sine_reconstructor_16_1176_din,
        sine_reconstructor_16_1176_full_n,
        sine_reconstructor_16_1176_write,
        sine_reconstructor_16_1277_din,
        sine_reconstructor_16_1277_full_n,
        sine_reconstructor_16_1277_write,
        alpha_dout,
        alpha_empty_n,
        alpha_read,
        beta_dout,
        beta_empty_n,
        beta_read,
        gamma_dout,
        gamma_empty_n,
        gamma_read
);

parameter    ap_ST_fsm_state1 = 118'd1;
parameter    ap_ST_fsm_state2 = 118'd2;
parameter    ap_ST_fsm_state3 = 118'd4;
parameter    ap_ST_fsm_state4 = 118'd8;
parameter    ap_ST_fsm_state5 = 118'd16;
parameter    ap_ST_fsm_state6 = 118'd32;
parameter    ap_ST_fsm_state7 = 118'd64;
parameter    ap_ST_fsm_state8 = 118'd128;
parameter    ap_ST_fsm_state9 = 118'd256;
parameter    ap_ST_fsm_state10 = 118'd512;
parameter    ap_ST_fsm_state11 = 118'd1024;
parameter    ap_ST_fsm_state12 = 118'd2048;
parameter    ap_ST_fsm_state13 = 118'd4096;
parameter    ap_ST_fsm_state14 = 118'd8192;
parameter    ap_ST_fsm_state15 = 118'd16384;
parameter    ap_ST_fsm_state16 = 118'd32768;
parameter    ap_ST_fsm_state17 = 118'd65536;
parameter    ap_ST_fsm_state18 = 118'd131072;
parameter    ap_ST_fsm_state19 = 118'd262144;
parameter    ap_ST_fsm_state20 = 118'd524288;
parameter    ap_ST_fsm_state21 = 118'd1048576;
parameter    ap_ST_fsm_state22 = 118'd2097152;
parameter    ap_ST_fsm_state23 = 118'd4194304;
parameter    ap_ST_fsm_state24 = 118'd8388608;
parameter    ap_ST_fsm_state25 = 118'd16777216;
parameter    ap_ST_fsm_state26 = 118'd33554432;
parameter    ap_ST_fsm_state27 = 118'd67108864;
parameter    ap_ST_fsm_state28 = 118'd134217728;
parameter    ap_ST_fsm_state29 = 118'd268435456;
parameter    ap_ST_fsm_state30 = 118'd536870912;
parameter    ap_ST_fsm_state31 = 118'd1073741824;
parameter    ap_ST_fsm_state32 = 118'd2147483648;
parameter    ap_ST_fsm_state33 = 118'd4294967296;
parameter    ap_ST_fsm_state34 = 118'd8589934592;
parameter    ap_ST_fsm_state35 = 118'd17179869184;
parameter    ap_ST_fsm_state36 = 118'd34359738368;
parameter    ap_ST_fsm_state37 = 118'd68719476736;
parameter    ap_ST_fsm_state38 = 118'd137438953472;
parameter    ap_ST_fsm_state39 = 118'd274877906944;
parameter    ap_ST_fsm_state40 = 118'd549755813888;
parameter    ap_ST_fsm_state41 = 118'd1099511627776;
parameter    ap_ST_fsm_state42 = 118'd2199023255552;
parameter    ap_ST_fsm_state43 = 118'd4398046511104;
parameter    ap_ST_fsm_state44 = 118'd8796093022208;
parameter    ap_ST_fsm_state45 = 118'd17592186044416;
parameter    ap_ST_fsm_state46 = 118'd35184372088832;
parameter    ap_ST_fsm_state47 = 118'd70368744177664;
parameter    ap_ST_fsm_state48 = 118'd140737488355328;
parameter    ap_ST_fsm_state49 = 118'd281474976710656;
parameter    ap_ST_fsm_state50 = 118'd562949953421312;
parameter    ap_ST_fsm_state51 = 118'd1125899906842624;
parameter    ap_ST_fsm_state52 = 118'd2251799813685248;
parameter    ap_ST_fsm_state53 = 118'd4503599627370496;
parameter    ap_ST_fsm_state54 = 118'd9007199254740992;
parameter    ap_ST_fsm_state55 = 118'd18014398509481984;
parameter    ap_ST_fsm_state56 = 118'd36028797018963968;
parameter    ap_ST_fsm_state57 = 118'd72057594037927936;
parameter    ap_ST_fsm_state58 = 118'd144115188075855872;
parameter    ap_ST_fsm_state59 = 118'd288230376151711744;
parameter    ap_ST_fsm_state60 = 118'd576460752303423488;
parameter    ap_ST_fsm_state61 = 118'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 118'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 118'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 118'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 118'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 118'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 118'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 118'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 118'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 118'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 118'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 118'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 118'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 118'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 118'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 118'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 118'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 118'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 118'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 118'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 118'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 118'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 118'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 118'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 118'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 118'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 118'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 118'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 118'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 118'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 118'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 118'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 118'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 118'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 118'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 118'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 118'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 118'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 118'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 118'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 118'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 118'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 118'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 118'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 118'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 118'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 118'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 118'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 118'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 118'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 118'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 118'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 118'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 118'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 118'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 118'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 118'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 118'd166153499473114484112975882535043072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [59:0] sine_reconstructor_16_1176_din;
input   sine_reconstructor_16_1176_full_n;
output   sine_reconstructor_16_1176_write;
output  [59:0] sine_reconstructor_16_1277_din;
input   sine_reconstructor_16_1277_full_n;
output   sine_reconstructor_16_1277_write;
input  [59:0] alpha_dout;
input   alpha_empty_n;
output   alpha_read;
input  [59:0] beta_dout;
input   beta_empty_n;
output   beta_read;
input  [59:0] gamma_dout;
input   gamma_empty_n;
output   gamma_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sine_reconstructor_16_1176_write;
reg sine_reconstructor_16_1277_write;
reg alpha_read;
reg beta_read;
reg gamma_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [117:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sine_reconstructor_16_1176_blk_n;
wire    ap_CS_fsm_state118;
reg    sine_reconstructor_16_1277_blk_n;
reg    alpha_blk_n;
reg    beta_blk_n;
reg    gamma_blk_n;
wire   [63:0] grp_fu_198_p2;
reg   [63:0] reg_240;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state86;
wire   [63:0] grp_fu_203_p2;
reg   [63:0] reg_250;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state54;
wire   [63:0] grp_fu_235_p2;
reg   [63:0] reg_256;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state116;
reg   [59:0] p_Val2_27_reg_1982;
reg   [59:0] p_Val2_s_reg_1988;
reg   [59:0] p_Val2_24_reg_1994;
reg   [0:0] p_Result_77_reg_2001;
wire   [59:0] tmp_V_fu_269_p2;
reg   [59:0] tmp_V_reg_2007;
reg   [0:0] p_Result_80_reg_2012;
reg   [0:0] p_Result_83_reg_2018;
wire   [59:0] tmp_V_4_fu_291_p2;
reg   [59:0] tmp_V_4_reg_2024;
wire   [0:0] icmp_ln885_fu_297_p2;
reg   [0:0] icmp_ln885_reg_2029;
wire    ap_CS_fsm_state2;
reg   [62:0] m_19_reg_2034;
wire   [10:0] select_ln893_fu_515_p3;
reg   [10:0] select_ln893_reg_2039;
wire   [10:0] trunc_ln893_fu_523_p1;
reg   [10:0] trunc_ln893_reg_2044;
wire   [0:0] icmp_ln885_2_fu_527_p2;
reg   [0:0] icmp_ln885_2_reg_2049;
reg   [62:0] m_23_reg_2054;
wire   [10:0] select_ln893_2_fu_745_p3;
reg   [10:0] select_ln893_2_reg_2059;
wire   [10:0] trunc_ln893_2_fu_753_p1;
reg   [10:0] trunc_ln893_2_reg_2064;
wire   [63:0] m00_fu_793_p3;
wire    ap_CS_fsm_state3;
wire   [63:0] m11_fu_837_p3;
wire   [0:0] icmp_ln885_1_fu_845_p2;
reg   [0:0] icmp_ln885_1_reg_2079;
wire    ap_CS_fsm_state6;
wire   [59:0] m_20_fu_855_p3;
reg   [59:0] m_20_reg_2084;
wire   [31:0] sub_ln894_1_fu_891_p2;
reg   [31:0] sub_ln894_1_reg_2089;
wire   [0:0] icmp_ln908_1_fu_985_p2;
reg   [0:0] icmp_ln908_1_reg_2095;
wire   [0:0] tobool31_i_i4927_i_fu_991_p2;
reg   [0:0] tobool31_i_i4927_i_reg_2100;
wire   [10:0] trunc_ln893_1_fu_997_p1;
reg   [10:0] trunc_ln893_1_reg_2105;
wire   [63:0] deno_fu_1145_p1;
reg   [63:0] deno_reg_2110;
wire   [0:0] or_ln466_2_fu_1165_p2;
reg   [0:0] or_ln466_2_reg_2118;
wire   [63:0] p_Result_87_fu_1199_p5;
reg   [63:0] p_Result_87_reg_2124;
wire    ap_CS_fsm_state9;
wire   [0:0] or_ln466_fu_1267_p2;
reg   [0:0] or_ln466_reg_2129;
wire   [63:0] grp_fu_207_p2;
reg   [63:0] deno2_reg_2134;
wire   [63:0] KK_fu_1273_p1;
wire    ap_CS_fsm_state49;
wire   [63:0] M2_fu_1309_p1;
wire    ap_CS_fsm_state55;
wire   [63:0] grp_fu_211_p2;
reg   [63:0] tmpDivider_reg_2150;
wire    ap_CS_fsm_state81;
wire   [63:0] LD_4_fu_1328_p3;
reg   [63:0] LD_4_reg_2156;
wire    ap_CS_fsm_state111;
wire   [59:0] select_ln571_7_fu_1650_p3;
reg   [59:0] select_ln571_7_reg_2161;
wire    ap_CS_fsm_state112;
wire   [59:0] select_ln571_3_fu_1974_p3;
reg   [59:0] select_ln571_3_reg_2166;
wire    ap_CS_fsm_state117;
reg    ap_block_state1;
reg    ap_block_state118;
reg   [63:0] grp_fu_198_p0;
reg   [63:0] grp_fu_198_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state82;
reg   [63:0] grp_fu_203_p0;
reg   [63:0] grp_fu_203_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state60;
reg   [63:0] grp_fu_235_p1;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state87;
wire   [59:0] m_18_fu_302_p3;
reg   [59:0] p_Result_s_fu_307_p4;
wire   [63:0] p_Result_78_fu_317_p3;
reg   [63:0] tmp_i_fu_325_p3;
wire   [31:0] l_fu_333_p1;
wire   [31:0] sub_ln894_fu_337_p2;
wire   [31:0] lsb_index_fu_343_p2;
wire   [30:0] tmp_30_fu_349_p4;
wire   [5:0] trunc_ln897_fu_365_p1;
wire   [5:0] sub_ln897_fu_369_p2;
wire   [59:0] zext_ln897_fu_375_p1;
wire   [59:0] lshr_ln897_fu_379_p2;
wire   [59:0] p_Result_42_fu_385_p2;
wire   [0:0] tmp_31_fu_397_p3;
wire   [0:0] icmp_ln896_fu_359_p2;
wire   [0:0] icmp_ln897_fu_391_p2;
wire   [0:0] p_Result_3_fu_417_p3;
wire   [0:0] and_ln896_fu_411_p2;
wire   [31:0] sub_ln909_fu_441_p2;
wire   [63:0] zext_ln907_fu_431_p1;
wire   [63:0] zext_ln909_fu_447_p1;
wire   [31:0] add_ln908_fu_457_p2;
wire   [63:0] zext_ln908_fu_463_p1;
wire   [0:0] a_fu_425_p2;
wire   [0:0] xor_ln899_fu_405_p2;
wire   [0:0] icmp_ln908_fu_435_p2;
wire   [63:0] lshr_ln908_fu_467_p2;
wire   [63:0] shl_ln909_fu_451_p2;
wire   [0:0] tobool31_i_i13_i_fu_473_p2;
wire   [63:0] m_fu_479_p3;
wire   [63:0] zext_ln911_fu_487_p1;
wire   [63:0] m_6_fu_491_p2;
wire   [0:0] p_Result_43_fu_507_p3;
wire   [59:0] m_22_fu_532_p3;
reg   [59:0] p_Result_54_fu_537_p4;
wire   [63:0] p_Result_84_fu_547_p3;
reg   [63:0] tmp_i_147_fu_555_p3;
wire   [31:0] l_2_fu_563_p1;
wire   [31:0] sub_ln894_2_fu_567_p2;
wire   [31:0] lsb_index_2_fu_573_p2;
wire   [30:0] tmp_38_fu_579_p4;
wire   [5:0] trunc_ln897_2_fu_595_p1;
wire   [5:0] sub_ln897_2_fu_599_p2;
wire   [59:0] zext_ln897_2_fu_605_p1;
wire   [59:0] lshr_ln897_2_fu_609_p2;
wire   [59:0] p_Result_56_fu_615_p2;
wire   [0:0] tmp_39_fu_627_p3;
wire   [0:0] icmp_ln896_2_fu_589_p2;
wire   [0:0] icmp_ln897_2_fu_621_p2;
wire   [0:0] p_Result_57_fu_647_p3;
wire   [0:0] and_ln896_2_fu_641_p2;
wire   [31:0] sub_ln909_2_fu_671_p2;
wire   [63:0] zext_ln907_2_fu_661_p1;
wire   [63:0] zext_ln909_2_fu_677_p1;
wire   [31:0] add_ln908_2_fu_687_p2;
wire   [63:0] zext_ln908_2_fu_693_p1;
wire   [0:0] a_2_fu_655_p2;
wire   [0:0] xor_ln899_2_fu_635_p2;
wire   [0:0] icmp_ln908_2_fu_665_p2;
wire   [63:0] lshr_ln908_2_fu_697_p2;
wire   [63:0] shl_ln909_2_fu_681_p2;
wire   [0:0] tobool31_i_i11941_i_fu_703_p2;
wire   [63:0] m_10_fu_709_p3;
wire   [63:0] zext_ln911_2_fu_717_p1;
wire   [63:0] m_15_fu_721_p2;
wire   [0:0] p_Result_58_fu_737_p3;
wire   [10:0] sub_ln915_fu_760_p2;
wire   [10:0] add_ln915_fu_765_p2;
wire   [63:0] zext_ln912_fu_757_p1;
wire   [11:0] tmp_2_i_fu_770_p3;
wire   [63:0] p_Result_79_fu_777_p5;
wire   [63:0] bitcast_ln734_fu_789_p1;
wire   [10:0] sub_ln915_2_fu_804_p2;
wire   [10:0] add_ln915_2_fu_809_p2;
wire   [63:0] zext_ln912_2_fu_801_p1;
wire   [11:0] tmp_4_i_fu_814_p3;
wire   [63:0] p_Result_85_fu_821_p5;
wire   [63:0] bitcast_ln734_1_fu_833_p1;
wire   [59:0] tmp_V_2_fu_850_p2;
reg   [59:0] p_Result_7_fu_861_p4;
wire   [63:0] p_Result_81_fu_871_p3;
reg   [63:0] tmp_6_i_fu_879_p3;
wire   [31:0] l_1_fu_887_p1;
wire   [31:0] lsb_index_1_fu_897_p2;
wire   [30:0] tmp_34_fu_903_p4;
wire   [5:0] trunc_ln897_1_fu_919_p1;
wire   [5:0] sub_ln897_1_fu_923_p2;
wire   [59:0] zext_ln897_1_fu_929_p1;
wire   [59:0] lshr_ln897_1_fu_933_p2;
wire   [59:0] p_Result_49_fu_939_p2;
wire   [0:0] tmp_35_fu_951_p3;
wire   [0:0] icmp_ln896_1_fu_913_p2;
wire   [0:0] icmp_ln897_1_fu_945_p2;
wire   [0:0] p_Result_50_fu_971_p3;
wire   [0:0] and_ln896_1_fu_965_p2;
wire   [0:0] a_1_fu_979_p2;
wire   [0:0] xor_ln899_1_fu_959_p2;
wire   [31:0] sub_ln909_1_fu_1004_p2;
wire   [63:0] zext_ln907_1_fu_1001_p1;
wire   [63:0] zext_ln909_1_fu_1009_p1;
wire   [31:0] add_ln908_1_fu_1019_p2;
wire   [63:0] zext_ln908_1_fu_1024_p1;
wire   [63:0] lshr_ln908_1_fu_1028_p2;
wire   [63:0] shl_ln909_1_fu_1013_p2;
wire   [63:0] m_5_fu_1034_p3;
wire   [63:0] zext_ln911_1_fu_1041_p1;
wire   [63:0] m_12_fu_1044_p2;
wire   [62:0] m_21_fu_1050_p4;
wire   [0:0] p_Result_51_fu_1064_p3;
wire   [10:0] sub_ln915_1_fu_1080_p2;
wire   [10:0] select_ln893_1_fu_1072_p3;
wire   [10:0] add_ln915_1_fu_1085_p2;
wire   [63:0] zext_ln912_1_fu_1060_p1;
wire   [11:0] tmp_3_i_fu_1091_p3;
wire   [63:0] p_Result_82_fu_1098_p5;
wire   [63:0] data_V_fu_1110_p3;
wire   [10:0] tmp_48_fu_1117_p4;
wire   [10:0] exp1_V_fu_1127_p2;
wire   [63:0] p_Result_86_fu_1133_p5;
wire   [51:0] trunc_ln466_1_fu_1149_p1;
wire   [0:0] icmp_ln466_3_fu_1159_p2;
wire   [0:0] icmp_ln466_2_fu_1153_p2;
wire   [63:0] data_V_1_fu_1171_p1;
wire   [10:0] tmp_49_fu_1175_p4;
wire   [10:0] exp1_V_6_fu_1185_p2;
wire   [11:0] tmp_8_i_fu_1191_p3;
wire   [51:0] trunc_ln466_fu_1211_p1;
wire   [0:0] icmp_ln466_1_fu_1221_p2;
wire   [0:0] icmp_ln466_fu_1215_p2;
wire   [0:0] or_ln466_1_fu_1227_p2;
wire   [0:0] grp_fu_215_p2;
wire   [0:0] grp_fu_220_p2;
wire   [0:0] and_ln466_2_fu_1233_p2;
wire   [0:0] and_ln466_3_fu_1239_p2;
wire   [0:0] grp_fu_225_p2;
wire   [0:0] grp_fu_230_p2;
wire   [0:0] and_ln466_4_fu_1250_p2;
wire   [0:0] and_ln466_5_fu_1256_p2;
wire   [0:0] and_ln466_fu_1244_p2;
wire   [0:0] and_ln466_1_fu_1261_p2;
wire   [63:0] data_V_2_fu_1277_p1;
wire   [10:0] tmp_50_fu_1281_p4;
wire   [10:0] exp1_V_7_fu_1291_p2;
wire   [63:0] p_Result_88_fu_1297_p5;
wire   [63:0] bitcast_ln466_fu_1314_p1;
wire   [63:0] xor_ln466_fu_1318_p2;
wire   [63:0] bitcast_ln466_1_fu_1324_p1;
wire   [63:0] ireg_1_fu_1335_p1;
wire   [10:0] exp_tmp_1_fu_1350_p4;
wire   [51:0] trunc_ln565_1_fu_1364_p1;
wire   [52:0] p_Result_92_fu_1368_p3;
wire   [53:0] zext_ln569_1_fu_1376_p1;
wire   [0:0] p_Result_91_fu_1342_p3;
wire   [53:0] man_V_3_fu_1380_p2;
wire   [62:0] trunc_ln555_1_fu_1338_p1;
wire   [11:0] zext_ln455_1_fu_1360_p1;
wire   [11:0] F2_1_fu_1400_p2;
wire   [0:0] icmp_ln581_1_fu_1410_p2;
wire   [11:0] add_ln581_1_fu_1416_p2;
wire   [11:0] sub_ln581_1_fu_1422_p2;
wire  signed [53:0] man_V_fu_1386_p3;
wire   [11:0] sh_amt_1_fu_1428_p3;
wire   [5:0] trunc_ln586_1_fu_1462_p1;
wire   [53:0] zext_ln586_1_fu_1466_p1;
wire   [0:0] tmp_47_fu_1476_p3;
wire  signed [59:0] sext_ln583_1_fu_1442_p1;
wire   [59:0] zext_ln604_1_fu_1492_p1;
wire   [0:0] icmp_ln585_1_fu_1450_p2;
wire   [53:0] ashr_ln586_1_fu_1470_p2;
wire   [53:0] trunc_ln588_1_cast_i_fu_1484_p3;
wire   [53:0] s_right_V_3_fu_1502_p3;
wire   [10:0] trunc_ln575_1_fu_1406_p1;
wire   [10:0] add_ln591_1_fu_1520_p2;
wire   [31:0] zext_ln591_1_fu_1526_p1;
wire   [0:0] icmp_ln591_1_fu_1514_p2;
wire   [0:0] p_Result_76_fu_1530_p3;
wire   [0:0] qb_1_fu_1538_p3;
wire  signed [54:0] sext_ln586_1_fu_1510_p1;
wire   [54:0] zext_ln415_5_fu_1546_p1;
wire   [0:0] icmp_ln571_1_fu_1394_p2;
wire   [0:0] icmp_ln582_1_fu_1436_p2;
wire   [0:0] xor_ln571_1_fu_1556_p2;
wire   [0:0] or_ln582_1_fu_1568_p2;
wire   [0:0] xor_ln582_1_fu_1574_p2;
wire   [0:0] or_ln581_1_fu_1586_p2;
wire   [0:0] icmp_ln603_1_fu_1456_p2;
wire   [0:0] xor_ln581_1_fu_1592_p2;
wire   [59:0] s_right_V_2_fu_1496_p2;
wire   [0:0] and_ln603_1_fu_1598_p2;
wire   [0:0] and_ln581_1_fu_1580_p2;
wire   [54:0] s_right_V_fu_1550_p2;
wire  signed [54:0] sext_ln583_3_fu_1446_p1;
wire   [54:0] select_ln571_5_fu_1618_p3;
wire   [0:0] and_ln582_1_fu_1562_p2;
wire   [0:0] or_ln571_3_fu_1612_p2;
wire   [59:0] select_ln571_4_fu_1604_p3;
wire  signed [59:0] sext_ln571_1_fu_1626_p1;
wire   [0:0] or_ln571_4_fu_1630_p2;
wire   [0:0] or_ln571_5_fu_1644_p2;
wire   [59:0] select_ln571_6_fu_1636_p3;
wire   [63:0] ireg_fu_1658_p1;
wire   [10:0] exp_tmp_fu_1674_p4;
wire   [51:0] trunc_ln565_fu_1688_p1;
wire   [52:0] p_Result_90_fu_1692_p3;
wire   [53:0] zext_ln569_fu_1700_p1;
wire   [0:0] p_Result_89_fu_1666_p3;
wire   [53:0] man_V_2_fu_1704_p2;
wire   [62:0] trunc_ln555_fu_1662_p1;
wire   [11:0] zext_ln455_fu_1684_p1;
wire   [11:0] F2_fu_1724_p2;
wire   [0:0] icmp_ln581_fu_1734_p2;
wire   [11:0] add_ln581_fu_1740_p2;
wire   [11:0] sub_ln581_fu_1746_p2;
wire  signed [53:0] man_V_5_fu_1710_p3;
wire   [11:0] sh_amt_fu_1752_p3;
wire   [5:0] trunc_ln586_fu_1786_p1;
wire   [53:0] zext_ln586_fu_1790_p1;
wire   [0:0] tmp_45_fu_1800_p3;
wire  signed [59:0] sext_ln583_fu_1766_p1;
wire   [59:0] zext_ln604_fu_1816_p1;
wire   [0:0] icmp_ln585_fu_1774_p2;
wire   [53:0] ashr_ln586_fu_1794_p2;
wire   [53:0] trunc_ln588_cast_i_fu_1808_p3;
wire   [53:0] c_right_V_3_fu_1826_p3;
wire   [10:0] trunc_ln575_fu_1730_p1;
wire   [10:0] add_ln591_fu_1844_p2;
wire   [31:0] zext_ln591_fu_1850_p1;
wire   [0:0] icmp_ln591_fu_1838_p2;
wire   [0:0] p_Result_73_fu_1854_p3;
wire   [0:0] qb_fu_1862_p3;
wire  signed [54:0] sext_ln586_fu_1834_p1;
wire   [54:0] zext_ln415_fu_1870_p1;
wire   [0:0] icmp_ln571_fu_1718_p2;
wire   [0:0] icmp_ln582_fu_1760_p2;
wire   [0:0] xor_ln571_fu_1880_p2;
wire   [0:0] or_ln582_fu_1892_p2;
wire   [0:0] xor_ln582_fu_1898_p2;
wire   [0:0] or_ln581_fu_1910_p2;
wire   [0:0] icmp_ln603_fu_1780_p2;
wire   [0:0] xor_ln581_fu_1916_p2;
wire   [59:0] c_right_V_2_fu_1820_p2;
wire   [0:0] and_ln603_fu_1922_p2;
wire   [0:0] and_ln581_fu_1904_p2;
wire   [54:0] c_right_V_fu_1874_p2;
wire  signed [54:0] sext_ln583_2_fu_1770_p1;
wire   [54:0] select_ln571_1_fu_1942_p3;
wire   [0:0] and_ln582_fu_1886_p2;
wire   [0:0] or_ln571_fu_1936_p2;
wire   [59:0] select_ln571_fu_1928_p3;
wire  signed [59:0] sext_ln571_fu_1950_p1;
wire   [0:0] or_ln571_1_fu_1954_p2;
wire   [0:0] or_ln571_2_fu_1968_p2;
wire   [59:0] select_ln571_2_fu_1960_p3;
reg   [1:0] grp_fu_198_opcode;
reg   [117:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 118'd1;
end

LLSSineReconstruction_dadddsub_64ns_64ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_no_dsp_1_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(grp_fu_198_p1),
    .opcode(grp_fu_198_opcode),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

LLSSineReconstruction_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_203_p0),
    .din1(grp_fu_203_p1),
    .ce(1'b1),
    .dout(grp_fu_203_p2)
);

LLSSineReconstruction_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(deno_reg_2110),
    .din1(deno_reg_2110),
    .ce(1'b1),
    .dout(grp_fu_207_p2)
);

LLSSineReconstruction_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(deno2_reg_2134),
    .din1(reg_240),
    .ce(1'b1),
    .dout(grp_fu_211_p2)
);

LLSSineReconstruction_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U196(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_240),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_215_p2)
);

LLSSineReconstruction_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U197(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(deno_reg_2110),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_220_p2)
);

LLSSineReconstruction_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U198(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_240),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_225_p2)
);

LLSSineReconstruction_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U199(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(deno_reg_2110),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_230_p2)
);

LLSSineReconstruction_dsqrt_64ns_64ns_64_30_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_30_no_dsp_1_U200(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(grp_fu_235_p1),
    .ce(1'b1),
    .dout(grp_fu_235_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state118))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        LD_4_reg_2156 <= LD_4_fu_1328_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        deno2_reg_2134 <= grp_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        deno_reg_2110 <= deno_fu_1145_p1;
        or_ln466_2_reg_2118 <= or_ln466_2_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln885_1_reg_2079 <= icmp_ln885_1_fu_845_p2;
        icmp_ln908_1_reg_2095 <= icmp_ln908_1_fu_985_p2;
        m_20_reg_2084 <= m_20_fu_855_p3;
        sub_ln894_1_reg_2089 <= sub_ln894_1_fu_891_p2;
        tobool31_i_i4927_i_reg_2100 <= tobool31_i_i4927_i_fu_991_p2;
        trunc_ln893_1_reg_2105 <= trunc_ln893_1_fu_997_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln885_2_reg_2049 <= icmp_ln885_2_fu_527_p2;
        icmp_ln885_reg_2029 <= icmp_ln885_fu_297_p2;
        m_19_reg_2034 <= {{m_6_fu_491_p2[63:1]}};
        m_23_reg_2054 <= {{m_15_fu_721_p2[63:1]}};
        select_ln893_2_reg_2059[0] <= select_ln893_2_fu_745_p3[0];
        select_ln893_reg_2039[0] <= select_ln893_fu_515_p3[0];
        trunc_ln893_2_reg_2064 <= trunc_ln893_2_fu_753_p1;
        trunc_ln893_reg_2044 <= trunc_ln893_fu_523_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        or_ln466_reg_2129 <= or_ln466_fu_1267_p2;
        p_Result_87_reg_2124 <= p_Result_87_fu_1199_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_Result_77_reg_2001 <= beta_dout[32'd59];
        p_Result_80_reg_2012 <= gamma_dout[32'd59];
        p_Result_83_reg_2018 <= alpha_dout[32'd59];
        p_Val2_24_reg_1994 <= gamma_dout;
        p_Val2_27_reg_1982 <= alpha_dout;
        p_Val2_s_reg_1988 <= beta_dout;
        tmp_V_4_reg_2024 <= tmp_V_4_fu_291_p2;
        tmp_V_reg_2007 <= tmp_V_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_240 <= grp_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_250 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state48))) begin
        reg_256 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        select_ln571_3_reg_2166 <= select_ln571_3_fu_1974_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        select_ln571_7_reg_2161 <= select_ln571_7_fu_1650_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        tmpDivider_reg_2150 <= grp_fu_211_p2;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alpha_blk_n = alpha_empty_n;
    end else begin
        alpha_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        alpha_read = 1'b1;
    end else begin
        alpha_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state118))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state118))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        beta_blk_n = beta_empty_n;
    end else begin
        beta_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        beta_read = 1'b1;
    end else begin
        beta_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gamma_blk_n = gamma_empty_n;
    end else begin
        gamma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gamma_read = 1'b1;
    end else begin
        gamma_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_198_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_198_opcode = 2'd0;
    end else begin
        grp_fu_198_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_198_p0 = 64'd4607182418800017408;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_198_p0 = reg_250;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_198_p0 = deno2_reg_2134;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_198_p0 = m00_fu_793_p3;
    end else begin
        grp_fu_198_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_198_p1 = tmpDivider_reg_2150;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_198_p1 = M2_fu_1309_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_198_p1 = reg_250;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_198_p1 = m11_fu_837_p3;
    end else begin
        grp_fu_198_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_203_p0 = KK_fu_1273_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_203_p0 = reg_240;
    end else begin
        grp_fu_203_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_203_p1 = reg_256;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_203_p1 = reg_240;
    end else begin
        grp_fu_203_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_235_p1 = tmpDivider_reg_2150;
    end else if (((1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_235_p1 = reg_240;
    end else begin
        grp_fu_235_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        sine_reconstructor_16_1176_blk_n = sine_reconstructor_16_1176_full_n;
    end else begin
        sine_reconstructor_16_1176_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state118))) begin
        sine_reconstructor_16_1176_write = 1'b1;
    end else begin
        sine_reconstructor_16_1176_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        sine_reconstructor_16_1277_blk_n = sine_reconstructor_16_1277_full_n;
    end else begin
        sine_reconstructor_16_1277_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state118))) begin
        sine_reconstructor_16_1277_write = 1'b1;
    end else begin
        sine_reconstructor_16_1277_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            if ((~((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state118))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1400_p2 = (12'd1075 - zext_ln455_1_fu_1360_p1);

assign F2_fu_1724_p2 = (12'd1075 - zext_ln455_fu_1684_p1);

assign KK_fu_1273_p1 = p_Result_87_reg_2124;

assign LD_4_fu_1328_p3 = ((or_ln466_reg_2129[0:0] == 1'b1) ? grp_fu_235_p2 : bitcast_ln466_1_fu_1324_p1);

assign M2_fu_1309_p1 = p_Result_88_fu_1297_p5;

assign a_1_fu_979_p2 = (p_Result_50_fu_971_p3 | and_ln896_1_fu_965_p2);

assign a_2_fu_655_p2 = (p_Result_57_fu_647_p3 | and_ln896_2_fu_641_p2);

assign a_fu_425_p2 = (p_Result_3_fu_417_p3 | and_ln896_fu_411_p2);

assign add_ln581_1_fu_1416_p2 = ($signed(F2_1_fu_1400_p2) + $signed(12'd4057));

assign add_ln581_fu_1740_p2 = ($signed(F2_fu_1724_p2) + $signed(12'd4057));

assign add_ln591_1_fu_1520_p2 = ($signed(trunc_ln575_1_fu_1406_p1) + $signed(11'd2008));

assign add_ln591_fu_1844_p2 = ($signed(trunc_ln575_fu_1730_p1) + $signed(11'd2008));

assign add_ln908_1_fu_1019_p2 = ($signed(sub_ln894_1_reg_2089) + $signed(32'd4294967242));

assign add_ln908_2_fu_687_p2 = ($signed(sub_ln894_2_fu_567_p2) + $signed(32'd4294967242));

assign add_ln908_fu_457_p2 = ($signed(sub_ln894_fu_337_p2) + $signed(32'd4294967242));

assign add_ln915_1_fu_1085_p2 = (sub_ln915_1_fu_1080_p2 + select_ln893_1_fu_1072_p3);

assign add_ln915_2_fu_809_p2 = (sub_ln915_2_fu_804_p2 + select_ln893_2_reg_2059);

assign add_ln915_fu_765_p2 = (sub_ln915_fu_760_p2 + select_ln893_reg_2039);

assign and_ln466_1_fu_1261_p2 = (and_ln466_5_fu_1256_p2 & and_ln466_4_fu_1250_p2);

assign and_ln466_2_fu_1233_p2 = (or_ln466_1_fu_1227_p2 & grp_fu_215_p2);

assign and_ln466_3_fu_1239_p2 = (or_ln466_2_reg_2118 & grp_fu_220_p2);

assign and_ln466_4_fu_1250_p2 = (or_ln466_1_fu_1227_p2 & grp_fu_225_p2);

assign and_ln466_5_fu_1256_p2 = (or_ln466_2_reg_2118 & grp_fu_230_p2);

assign and_ln466_fu_1244_p2 = (and_ln466_3_fu_1239_p2 & and_ln466_2_fu_1233_p2);

assign and_ln581_1_fu_1580_p2 = (xor_ln582_1_fu_1574_p2 & icmp_ln581_1_fu_1410_p2);

assign and_ln581_fu_1904_p2 = (xor_ln582_fu_1898_p2 & icmp_ln581_fu_1734_p2);

assign and_ln582_1_fu_1562_p2 = (xor_ln571_1_fu_1556_p2 & icmp_ln582_1_fu_1436_p2);

assign and_ln582_fu_1886_p2 = (xor_ln571_fu_1880_p2 & icmp_ln582_fu_1760_p2);

assign and_ln603_1_fu_1598_p2 = (xor_ln581_1_fu_1592_p2 & icmp_ln603_1_fu_1456_p2);

assign and_ln603_fu_1922_p2 = (xor_ln581_fu_1916_p2 & icmp_ln603_fu_1780_p2);

assign and_ln896_1_fu_965_p2 = (icmp_ln897_1_fu_945_p2 & icmp_ln896_1_fu_913_p2);

assign and_ln896_2_fu_641_p2 = (icmp_ln897_2_fu_621_p2 & icmp_ln896_2_fu_589_p2);

assign and_ln896_fu_411_p2 = (icmp_ln897_fu_391_p2 & icmp_ln896_fu_359_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == alpha_empty_n) | (gamma_empty_n == 1'b0) | (beta_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state118 = ((sine_reconstructor_16_1277_full_n == 1'b0) | (sine_reconstructor_16_1176_full_n == 1'b0));
end

assign ashr_ln586_1_fu_1470_p2 = $signed(man_V_fu_1386_p3) >>> zext_ln586_1_fu_1466_p1;

assign ashr_ln586_fu_1794_p2 = $signed(man_V_5_fu_1710_p3) >>> zext_ln586_fu_1790_p1;

assign bitcast_ln466_1_fu_1324_p1 = xor_ln466_fu_1318_p2;

assign bitcast_ln466_fu_1314_p1 = grp_fu_235_p2;

assign bitcast_ln734_1_fu_833_p1 = p_Result_85_fu_821_p5;

assign bitcast_ln734_fu_789_p1 = p_Result_79_fu_777_p5;

assign c_right_V_2_fu_1820_p2 = sext_ln583_fu_1766_p1 << zext_ln604_fu_1816_p1;

assign c_right_V_3_fu_1826_p3 = ((icmp_ln585_fu_1774_p2[0:0] == 1'b1) ? ashr_ln586_fu_1794_p2 : trunc_ln588_cast_i_fu_1808_p3);

assign c_right_V_fu_1874_p2 = ($signed(sext_ln586_fu_1834_p1) + $signed(zext_ln415_fu_1870_p1));

assign data_V_1_fu_1171_p1 = reg_240;

assign data_V_2_fu_1277_p1 = reg_240;

assign data_V_fu_1110_p3 = ((icmp_ln885_1_reg_2079[0:0] == 1'b1) ? 64'd0 : p_Result_82_fu_1098_p5);

assign deno_fu_1145_p1 = p_Result_86_fu_1133_p5;

assign exp1_V_6_fu_1185_p2 = (tmp_49_fu_1175_p4 + 11'd1);

assign exp1_V_7_fu_1291_p2 = (tmp_50_fu_1281_p4 + 11'd1);

assign exp1_V_fu_1127_p2 = (tmp_48_fu_1117_p4 + 11'd1);

assign exp_tmp_1_fu_1350_p4 = {{ireg_1_fu_1335_p1[62:52]}};

assign exp_tmp_fu_1674_p4 = {{ireg_fu_1658_p1[62:52]}};

assign icmp_ln466_1_fu_1221_p2 = ((trunc_ln466_fu_1211_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln466_2_fu_1153_p2 = ((exp1_V_fu_1127_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln466_3_fu_1159_p2 = ((trunc_ln466_1_fu_1149_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln466_fu_1215_p2 = ((tmp_49_fu_1175_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1394_p2 = ((trunc_ln555_1_fu_1338_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1718_p2 = ((trunc_ln555_fu_1662_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_1410_p2 = (($signed(F2_1_fu_1400_p2) > $signed(12'd39)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1734_p2 = (($signed(F2_fu_1724_p2) > $signed(12'd39)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1436_p2 = ((F2_1_fu_1400_p2 == 12'd39) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1760_p2 = ((F2_fu_1724_p2 == 12'd39) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1450_p2 = ((sh_amt_1_fu_1428_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1774_p2 = ((sh_amt_fu_1752_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_1514_p2 = (($signed(add_ln581_1_fu_1416_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_1838_p2 = (($signed(add_ln581_fu_1740_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1456_p2 = ((sh_amt_1_fu_1428_p3 < 12'd60) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1780_p2 = ((sh_amt_fu_1752_p3 < 12'd60) ? 1'b1 : 1'b0);

assign icmp_ln885_1_fu_845_p2 = ((p_Val2_24_reg_1994 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_2_fu_527_p2 = ((p_Val2_27_reg_1982 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_297_p2 = ((p_Val2_s_reg_1988 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln896_1_fu_913_p2 = (($signed(tmp_34_fu_903_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln896_2_fu_589_p2 = (($signed(tmp_38_fu_579_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln896_fu_359_p2 = (($signed(tmp_30_fu_349_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_945_p2 = ((p_Result_49_fu_939_p2 != 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_621_p2 = ((p_Result_56_fu_615_p2 != 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_391_p2 = ((p_Result_42_fu_385_p2 != 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln908_1_fu_985_p2 = (($signed(lsb_index_1_fu_897_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_2_fu_665_p2 = (($signed(lsb_index_2_fu_573_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_435_p2 = (($signed(lsb_index_fu_343_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_1_fu_1335_p1 = LD_4_reg_2156;

assign ireg_fu_1658_p1 = reg_256;

assign l_1_fu_887_p1 = tmp_6_i_fu_879_p3[31:0];

assign l_2_fu_563_p1 = tmp_i_147_fu_555_p3[31:0];

assign l_fu_333_p1 = tmp_i_fu_325_p3[31:0];

assign lsb_index_1_fu_897_p2 = ($signed(sub_ln894_1_fu_891_p2) + $signed(32'd4294967243));

assign lsb_index_2_fu_573_p2 = ($signed(sub_ln894_2_fu_567_p2) + $signed(32'd4294967243));

assign lsb_index_fu_343_p2 = ($signed(sub_ln894_fu_337_p2) + $signed(32'd4294967243));

assign lshr_ln897_1_fu_933_p2 = 60'd1152921504606846975 >> zext_ln897_1_fu_929_p1;

assign lshr_ln897_2_fu_609_p2 = 60'd1152921504606846975 >> zext_ln897_2_fu_605_p1;

assign lshr_ln897_fu_379_p2 = 60'd1152921504606846975 >> zext_ln897_fu_375_p1;

assign lshr_ln908_1_fu_1028_p2 = zext_ln907_1_fu_1001_p1 >> zext_ln908_1_fu_1024_p1;

assign lshr_ln908_2_fu_697_p2 = zext_ln907_2_fu_661_p1 >> zext_ln908_2_fu_693_p1;

assign lshr_ln908_fu_467_p2 = zext_ln907_fu_431_p1 >> zext_ln908_fu_463_p1;

assign m00_fu_793_p3 = ((icmp_ln885_reg_2029[0:0] == 1'b1) ? 64'd0 : bitcast_ln734_fu_789_p1);

assign m11_fu_837_p3 = ((icmp_ln885_2_reg_2049[0:0] == 1'b1) ? 64'd0 : bitcast_ln734_1_fu_833_p1);

assign m_10_fu_709_p3 = ((icmp_ln908_2_fu_665_p2[0:0] == 1'b1) ? lshr_ln908_2_fu_697_p2 : shl_ln909_2_fu_681_p2);

assign m_12_fu_1044_p2 = (m_5_fu_1034_p3 + zext_ln911_1_fu_1041_p1);

assign m_15_fu_721_p2 = (m_10_fu_709_p3 + zext_ln911_2_fu_717_p1);

assign m_18_fu_302_p3 = ((p_Result_77_reg_2001[0:0] == 1'b1) ? tmp_V_reg_2007 : p_Val2_s_reg_1988);

assign m_20_fu_855_p3 = ((p_Result_80_reg_2012[0:0] == 1'b1) ? tmp_V_2_fu_850_p2 : p_Val2_24_reg_1994);

assign m_21_fu_1050_p4 = {{m_12_fu_1044_p2[63:1]}};

assign m_22_fu_532_p3 = ((p_Result_83_reg_2018[0:0] == 1'b1) ? tmp_V_4_reg_2024 : p_Val2_27_reg_1982);

assign m_5_fu_1034_p3 = ((icmp_ln908_1_reg_2095[0:0] == 1'b1) ? lshr_ln908_1_fu_1028_p2 : shl_ln909_1_fu_1013_p2);

assign m_6_fu_491_p2 = (m_fu_479_p3 + zext_ln911_fu_487_p1);

assign m_fu_479_p3 = ((icmp_ln908_fu_435_p2[0:0] == 1'b1) ? lshr_ln908_fu_467_p2 : shl_ln909_fu_451_p2);

assign man_V_2_fu_1704_p2 = (54'd0 - zext_ln569_fu_1700_p1);

assign man_V_3_fu_1380_p2 = (54'd0 - zext_ln569_1_fu_1376_p1);

assign man_V_5_fu_1710_p3 = ((p_Result_89_fu_1666_p3[0:0] == 1'b1) ? man_V_2_fu_1704_p2 : zext_ln569_fu_1700_p1);

assign man_V_fu_1386_p3 = ((p_Result_91_fu_1342_p3[0:0] == 1'b1) ? man_V_3_fu_1380_p2 : zext_ln569_1_fu_1376_p1);

assign or_ln466_1_fu_1227_p2 = (icmp_ln466_fu_1215_p2 | icmp_ln466_1_fu_1221_p2);

assign or_ln466_2_fu_1165_p2 = (icmp_ln466_3_fu_1159_p2 | icmp_ln466_2_fu_1153_p2);

assign or_ln466_fu_1267_p2 = (and_ln466_fu_1244_p2 | and_ln466_1_fu_1261_p2);

assign or_ln571_1_fu_1954_p2 = (and_ln582_fu_1886_p2 | and_ln581_fu_1904_p2);

assign or_ln571_2_fu_1968_p2 = (or_ln571_fu_1936_p2 | or_ln571_1_fu_1954_p2);

assign or_ln571_3_fu_1612_p2 = (icmp_ln571_1_fu_1394_p2 | and_ln603_1_fu_1598_p2);

assign or_ln571_4_fu_1630_p2 = (and_ln582_1_fu_1562_p2 | and_ln581_1_fu_1580_p2);

assign or_ln571_5_fu_1644_p2 = (or_ln571_4_fu_1630_p2 | or_ln571_3_fu_1612_p2);

assign or_ln571_fu_1936_p2 = (icmp_ln571_fu_1718_p2 | and_ln603_fu_1922_p2);

assign or_ln581_1_fu_1586_p2 = (or_ln582_1_fu_1568_p2 | icmp_ln581_1_fu_1410_p2);

assign or_ln581_fu_1910_p2 = (or_ln582_fu_1892_p2 | icmp_ln581_fu_1734_p2);

assign or_ln582_1_fu_1568_p2 = (icmp_ln582_1_fu_1436_p2 | icmp_ln571_1_fu_1394_p2);

assign or_ln582_fu_1892_p2 = (icmp_ln582_fu_1760_p2 | icmp_ln571_fu_1718_p2);

assign p_Result_3_fu_417_p3 = m_18_fu_302_p3[lsb_index_fu_343_p2];

assign p_Result_42_fu_385_p2 = (m_18_fu_302_p3 & lshr_ln897_fu_379_p2);

assign p_Result_43_fu_507_p3 = m_6_fu_491_p2[32'd54];

assign p_Result_49_fu_939_p2 = (m_20_fu_855_p3 & lshr_ln897_1_fu_933_p2);

assign p_Result_50_fu_971_p3 = m_20_fu_855_p3[lsb_index_1_fu_897_p2];

assign p_Result_51_fu_1064_p3 = m_12_fu_1044_p2[32'd54];

integer ap_tvar_int_0;

always @ (m_22_fu_532_p3) begin
    for (ap_tvar_int_0 = 60 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 59 - 0) begin
            p_Result_54_fu_537_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_54_fu_537_p4[ap_tvar_int_0] = m_22_fu_532_p3[59 - ap_tvar_int_0];
        end
    end
end

assign p_Result_56_fu_615_p2 = (m_22_fu_532_p3 & lshr_ln897_2_fu_609_p2);

assign p_Result_57_fu_647_p3 = m_22_fu_532_p3[lsb_index_2_fu_573_p2];

assign p_Result_58_fu_737_p3 = m_15_fu_721_p2[32'd54];

assign p_Result_73_fu_1854_p3 = man_V_5_fu_1710_p3[zext_ln591_fu_1850_p1];

assign p_Result_76_fu_1530_p3 = man_V_fu_1386_p3[zext_ln591_1_fu_1526_p1];

assign p_Result_78_fu_317_p3 = {{4'd15}, {p_Result_s_fu_307_p4}};

assign p_Result_79_fu_777_p5 = {{tmp_2_i_fu_770_p3}, {zext_ln912_fu_757_p1[51:0]}};

integer ap_tvar_int_1;

always @ (m_20_fu_855_p3) begin
    for (ap_tvar_int_1 = 60 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 59 - 0) begin
            p_Result_7_fu_861_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_7_fu_861_p4[ap_tvar_int_1] = m_20_fu_855_p3[59 - ap_tvar_int_1];
        end
    end
end

assign p_Result_81_fu_871_p3 = {{4'd15}, {p_Result_7_fu_861_p4}};

assign p_Result_82_fu_1098_p5 = {{tmp_3_i_fu_1091_p3}, {zext_ln912_1_fu_1060_p1[51:0]}};

assign p_Result_84_fu_547_p3 = {{4'd15}, {p_Result_54_fu_537_p4}};

assign p_Result_85_fu_821_p5 = {{tmp_4_i_fu_814_p3}, {zext_ln912_2_fu_801_p1[51:0]}};

assign p_Result_86_fu_1133_p5 = {{data_V_fu_1110_p3[63:63]}, {exp1_V_fu_1127_p2}, {data_V_fu_1110_p3[51:0]}};

assign p_Result_87_fu_1199_p5 = {{tmp_8_i_fu_1191_p3}, {data_V_1_fu_1171_p1[51:0]}};

assign p_Result_88_fu_1297_p5 = {{data_V_2_fu_1277_p1[63:63]}, {exp1_V_7_fu_1291_p2}, {data_V_2_fu_1277_p1[51:0]}};

assign p_Result_89_fu_1666_p3 = ireg_fu_1658_p1[32'd63];

assign p_Result_90_fu_1692_p3 = {{1'd1}, {trunc_ln565_fu_1688_p1}};

assign p_Result_91_fu_1342_p3 = ireg_1_fu_1335_p1[32'd63];

assign p_Result_92_fu_1368_p3 = {{1'd1}, {trunc_ln565_1_fu_1364_p1}};

integer ap_tvar_int_2;

always @ (m_18_fu_302_p3) begin
    for (ap_tvar_int_2 = 60 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 59 - 0) begin
            p_Result_s_fu_307_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_s_fu_307_p4[ap_tvar_int_2] = m_18_fu_302_p3[59 - ap_tvar_int_2];
        end
    end
end

assign qb_1_fu_1538_p3 = ((icmp_ln591_1_fu_1514_p2[0:0] == 1'b1) ? p_Result_91_fu_1342_p3 : p_Result_76_fu_1530_p3);

assign qb_fu_1862_p3 = ((icmp_ln591_fu_1838_p2[0:0] == 1'b1) ? p_Result_89_fu_1666_p3 : p_Result_73_fu_1854_p3);

assign s_right_V_2_fu_1496_p2 = sext_ln583_1_fu_1442_p1 << zext_ln604_1_fu_1492_p1;

assign s_right_V_3_fu_1502_p3 = ((icmp_ln585_1_fu_1450_p2[0:0] == 1'b1) ? ashr_ln586_1_fu_1470_p2 : trunc_ln588_1_cast_i_fu_1484_p3);

assign s_right_V_fu_1550_p2 = ($signed(sext_ln586_1_fu_1510_p1) + $signed(zext_ln415_5_fu_1546_p1));

assign select_ln571_1_fu_1942_p3 = ((and_ln581_fu_1904_p2[0:0] == 1'b1) ? c_right_V_fu_1874_p2 : sext_ln583_2_fu_1770_p1);

assign select_ln571_2_fu_1960_p3 = ((or_ln571_fu_1936_p2[0:0] == 1'b1) ? select_ln571_fu_1928_p3 : sext_ln571_fu_1950_p1);

assign select_ln571_3_fu_1974_p3 = ((or_ln571_2_fu_1968_p2[0:0] == 1'b1) ? select_ln571_2_fu_1960_p3 : 60'd0);

assign select_ln571_4_fu_1604_p3 = ((icmp_ln571_1_fu_1394_p2[0:0] == 1'b1) ? 60'd0 : s_right_V_2_fu_1496_p2);

assign select_ln571_5_fu_1618_p3 = ((and_ln581_1_fu_1580_p2[0:0] == 1'b1) ? s_right_V_fu_1550_p2 : sext_ln583_3_fu_1446_p1);

assign select_ln571_6_fu_1636_p3 = ((or_ln571_3_fu_1612_p2[0:0] == 1'b1) ? select_ln571_4_fu_1604_p3 : sext_ln571_1_fu_1626_p1);

assign select_ln571_7_fu_1650_p3 = ((or_ln571_5_fu_1644_p2[0:0] == 1'b1) ? select_ln571_6_fu_1636_p3 : 60'd0);

assign select_ln571_fu_1928_p3 = ((icmp_ln571_fu_1718_p2[0:0] == 1'b1) ? 60'd0 : c_right_V_2_fu_1820_p2);

assign select_ln893_1_fu_1072_p3 = ((p_Result_51_fu_1064_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln893_2_fu_745_p3 = ((p_Result_58_fu_737_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln893_fu_515_p3 = ((p_Result_43_fu_507_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln571_1_fu_1626_p1 = $signed(select_ln571_5_fu_1618_p3);

assign sext_ln571_fu_1950_p1 = $signed(select_ln571_1_fu_1942_p3);

assign sext_ln583_1_fu_1442_p1 = man_V_fu_1386_p3;

assign sext_ln583_2_fu_1770_p1 = man_V_5_fu_1710_p3;

assign sext_ln583_3_fu_1446_p1 = man_V_fu_1386_p3;

assign sext_ln583_fu_1766_p1 = man_V_5_fu_1710_p3;

assign sext_ln586_1_fu_1510_p1 = $signed(s_right_V_3_fu_1502_p3);

assign sext_ln586_fu_1834_p1 = $signed(c_right_V_3_fu_1826_p3);

assign sh_amt_1_fu_1428_p3 = ((icmp_ln581_1_fu_1410_p2[0:0] == 1'b1) ? add_ln581_1_fu_1416_p2 : sub_ln581_1_fu_1422_p2);

assign sh_amt_fu_1752_p3 = ((icmp_ln581_fu_1734_p2[0:0] == 1'b1) ? add_ln581_fu_1740_p2 : sub_ln581_fu_1746_p2);

assign shl_ln909_1_fu_1013_p2 = zext_ln907_1_fu_1001_p1 << zext_ln909_1_fu_1009_p1;

assign shl_ln909_2_fu_681_p2 = zext_ln907_2_fu_661_p1 << zext_ln909_2_fu_677_p1;

assign shl_ln909_fu_451_p2 = zext_ln907_fu_431_p1 << zext_ln909_fu_447_p1;

assign sine_reconstructor_16_1176_din = select_ln571_7_reg_2161;

assign sine_reconstructor_16_1277_din = select_ln571_3_reg_2166;

assign sub_ln581_1_fu_1422_p2 = (12'd39 - F2_1_fu_1400_p2);

assign sub_ln581_fu_1746_p2 = (12'd39 - F2_fu_1724_p2);

assign sub_ln894_1_fu_891_p2 = (32'd60 - l_1_fu_887_p1);

assign sub_ln894_2_fu_567_p2 = (32'd60 - l_2_fu_563_p1);

assign sub_ln894_fu_337_p2 = (32'd60 - l_fu_333_p1);

assign sub_ln897_1_fu_923_p2 = ($signed(6'd50) - $signed(trunc_ln897_1_fu_919_p1));

assign sub_ln897_2_fu_599_p2 = ($signed(6'd50) - $signed(trunc_ln897_2_fu_595_p1));

assign sub_ln897_fu_369_p2 = ($signed(6'd50) - $signed(trunc_ln897_fu_365_p1));

assign sub_ln909_1_fu_1004_p2 = (32'd54 - sub_ln894_1_reg_2089);

assign sub_ln909_2_fu_671_p2 = (32'd54 - sub_ln894_2_fu_567_p2);

assign sub_ln909_fu_441_p2 = (32'd54 - sub_ln894_fu_337_p2);

assign sub_ln915_1_fu_1080_p2 = (11'd21 - trunc_ln893_1_reg_2105);

assign sub_ln915_2_fu_804_p2 = (11'd21 - trunc_ln893_2_reg_2064);

assign sub_ln915_fu_760_p2 = (11'd21 - trunc_ln893_reg_2044);

assign tmp_2_i_fu_770_p3 = {{p_Result_77_reg_2001}, {add_ln915_fu_765_p2}};

assign tmp_30_fu_349_p4 = {{lsb_index_fu_343_p2[31:1]}};

assign tmp_31_fu_397_p3 = lsb_index_fu_343_p2[32'd31];

assign tmp_34_fu_903_p4 = {{lsb_index_1_fu_897_p2[31:1]}};

assign tmp_35_fu_951_p3 = lsb_index_1_fu_897_p2[32'd31];

assign tmp_38_fu_579_p4 = {{lsb_index_2_fu_573_p2[31:1]}};

assign tmp_39_fu_627_p3 = lsb_index_2_fu_573_p2[32'd31];

assign tmp_3_i_fu_1091_p3 = {{p_Result_80_reg_2012}, {add_ln915_1_fu_1085_p2}};

assign tmp_45_fu_1800_p3 = ireg_fu_1658_p1[32'd63];

assign tmp_47_fu_1476_p3 = ireg_1_fu_1335_p1[32'd63];

assign tmp_48_fu_1117_p4 = {{data_V_fu_1110_p3[62:52]}};

assign tmp_49_fu_1175_p4 = {{data_V_1_fu_1171_p1[62:52]}};

assign tmp_4_i_fu_814_p3 = {{p_Result_83_reg_2018}, {add_ln915_2_fu_809_p2}};

assign tmp_50_fu_1281_p4 = {{data_V_2_fu_1277_p1[62:52]}};


always @ (p_Result_81_fu_871_p3) begin
    if (p_Result_81_fu_871_p3[0] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd0;
    end else if (p_Result_81_fu_871_p3[1] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd1;
    end else if (p_Result_81_fu_871_p3[2] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd2;
    end else if (p_Result_81_fu_871_p3[3] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd3;
    end else if (p_Result_81_fu_871_p3[4] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd4;
    end else if (p_Result_81_fu_871_p3[5] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd5;
    end else if (p_Result_81_fu_871_p3[6] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd6;
    end else if (p_Result_81_fu_871_p3[7] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd7;
    end else if (p_Result_81_fu_871_p3[8] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd8;
    end else if (p_Result_81_fu_871_p3[9] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd9;
    end else if (p_Result_81_fu_871_p3[10] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd10;
    end else if (p_Result_81_fu_871_p3[11] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd11;
    end else if (p_Result_81_fu_871_p3[12] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd12;
    end else if (p_Result_81_fu_871_p3[13] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd13;
    end else if (p_Result_81_fu_871_p3[14] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd14;
    end else if (p_Result_81_fu_871_p3[15] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd15;
    end else if (p_Result_81_fu_871_p3[16] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd16;
    end else if (p_Result_81_fu_871_p3[17] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd17;
    end else if (p_Result_81_fu_871_p3[18] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd18;
    end else if (p_Result_81_fu_871_p3[19] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd19;
    end else if (p_Result_81_fu_871_p3[20] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd20;
    end else if (p_Result_81_fu_871_p3[21] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd21;
    end else if (p_Result_81_fu_871_p3[22] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd22;
    end else if (p_Result_81_fu_871_p3[23] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd23;
    end else if (p_Result_81_fu_871_p3[24] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd24;
    end else if (p_Result_81_fu_871_p3[25] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd25;
    end else if (p_Result_81_fu_871_p3[26] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd26;
    end else if (p_Result_81_fu_871_p3[27] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd27;
    end else if (p_Result_81_fu_871_p3[28] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd28;
    end else if (p_Result_81_fu_871_p3[29] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd29;
    end else if (p_Result_81_fu_871_p3[30] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd30;
    end else if (p_Result_81_fu_871_p3[31] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd31;
    end else if (p_Result_81_fu_871_p3[32] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd32;
    end else if (p_Result_81_fu_871_p3[33] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd33;
    end else if (p_Result_81_fu_871_p3[34] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd34;
    end else if (p_Result_81_fu_871_p3[35] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd35;
    end else if (p_Result_81_fu_871_p3[36] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd36;
    end else if (p_Result_81_fu_871_p3[37] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd37;
    end else if (p_Result_81_fu_871_p3[38] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd38;
    end else if (p_Result_81_fu_871_p3[39] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd39;
    end else if (p_Result_81_fu_871_p3[40] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd40;
    end else if (p_Result_81_fu_871_p3[41] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd41;
    end else if (p_Result_81_fu_871_p3[42] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd42;
    end else if (p_Result_81_fu_871_p3[43] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd43;
    end else if (p_Result_81_fu_871_p3[44] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd44;
    end else if (p_Result_81_fu_871_p3[45] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd45;
    end else if (p_Result_81_fu_871_p3[46] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd46;
    end else if (p_Result_81_fu_871_p3[47] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd47;
    end else if (p_Result_81_fu_871_p3[48] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd48;
    end else if (p_Result_81_fu_871_p3[49] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd49;
    end else if (p_Result_81_fu_871_p3[50] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd50;
    end else if (p_Result_81_fu_871_p3[51] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd51;
    end else if (p_Result_81_fu_871_p3[52] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd52;
    end else if (p_Result_81_fu_871_p3[53] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd53;
    end else if (p_Result_81_fu_871_p3[54] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd54;
    end else if (p_Result_81_fu_871_p3[55] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd55;
    end else if (p_Result_81_fu_871_p3[56] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd56;
    end else if (p_Result_81_fu_871_p3[57] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd57;
    end else if (p_Result_81_fu_871_p3[58] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd58;
    end else if (p_Result_81_fu_871_p3[59] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd59;
    end else if (p_Result_81_fu_871_p3[60] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd60;
    end else if (p_Result_81_fu_871_p3[61] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd61;
    end else if (p_Result_81_fu_871_p3[62] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd62;
    end else if (p_Result_81_fu_871_p3[63] == 1'b1) begin
        tmp_6_i_fu_879_p3 = 64'd63;
    end else begin
        tmp_6_i_fu_879_p3 = 64'd64;
    end
end

assign tmp_8_i_fu_1191_p3 = {{1'd0}, {exp1_V_6_fu_1185_p2}};

assign tmp_V_2_fu_850_p2 = (60'd0 - p_Val2_24_reg_1994);

assign tmp_V_4_fu_291_p2 = (60'd0 - alpha_dout);

assign tmp_V_fu_269_p2 = (60'd0 - beta_dout);


always @ (p_Result_84_fu_547_p3) begin
    if (p_Result_84_fu_547_p3[0] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd0;
    end else if (p_Result_84_fu_547_p3[1] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd1;
    end else if (p_Result_84_fu_547_p3[2] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd2;
    end else if (p_Result_84_fu_547_p3[3] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd3;
    end else if (p_Result_84_fu_547_p3[4] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd4;
    end else if (p_Result_84_fu_547_p3[5] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd5;
    end else if (p_Result_84_fu_547_p3[6] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd6;
    end else if (p_Result_84_fu_547_p3[7] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd7;
    end else if (p_Result_84_fu_547_p3[8] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd8;
    end else if (p_Result_84_fu_547_p3[9] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd9;
    end else if (p_Result_84_fu_547_p3[10] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd10;
    end else if (p_Result_84_fu_547_p3[11] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd11;
    end else if (p_Result_84_fu_547_p3[12] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd12;
    end else if (p_Result_84_fu_547_p3[13] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd13;
    end else if (p_Result_84_fu_547_p3[14] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd14;
    end else if (p_Result_84_fu_547_p3[15] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd15;
    end else if (p_Result_84_fu_547_p3[16] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd16;
    end else if (p_Result_84_fu_547_p3[17] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd17;
    end else if (p_Result_84_fu_547_p3[18] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd18;
    end else if (p_Result_84_fu_547_p3[19] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd19;
    end else if (p_Result_84_fu_547_p3[20] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd20;
    end else if (p_Result_84_fu_547_p3[21] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd21;
    end else if (p_Result_84_fu_547_p3[22] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd22;
    end else if (p_Result_84_fu_547_p3[23] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd23;
    end else if (p_Result_84_fu_547_p3[24] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd24;
    end else if (p_Result_84_fu_547_p3[25] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd25;
    end else if (p_Result_84_fu_547_p3[26] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd26;
    end else if (p_Result_84_fu_547_p3[27] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd27;
    end else if (p_Result_84_fu_547_p3[28] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd28;
    end else if (p_Result_84_fu_547_p3[29] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd29;
    end else if (p_Result_84_fu_547_p3[30] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd30;
    end else if (p_Result_84_fu_547_p3[31] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd31;
    end else if (p_Result_84_fu_547_p3[32] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd32;
    end else if (p_Result_84_fu_547_p3[33] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd33;
    end else if (p_Result_84_fu_547_p3[34] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd34;
    end else if (p_Result_84_fu_547_p3[35] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd35;
    end else if (p_Result_84_fu_547_p3[36] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd36;
    end else if (p_Result_84_fu_547_p3[37] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd37;
    end else if (p_Result_84_fu_547_p3[38] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd38;
    end else if (p_Result_84_fu_547_p3[39] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd39;
    end else if (p_Result_84_fu_547_p3[40] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd40;
    end else if (p_Result_84_fu_547_p3[41] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd41;
    end else if (p_Result_84_fu_547_p3[42] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd42;
    end else if (p_Result_84_fu_547_p3[43] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd43;
    end else if (p_Result_84_fu_547_p3[44] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd44;
    end else if (p_Result_84_fu_547_p3[45] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd45;
    end else if (p_Result_84_fu_547_p3[46] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd46;
    end else if (p_Result_84_fu_547_p3[47] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd47;
    end else if (p_Result_84_fu_547_p3[48] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd48;
    end else if (p_Result_84_fu_547_p3[49] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd49;
    end else if (p_Result_84_fu_547_p3[50] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd50;
    end else if (p_Result_84_fu_547_p3[51] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd51;
    end else if (p_Result_84_fu_547_p3[52] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd52;
    end else if (p_Result_84_fu_547_p3[53] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd53;
    end else if (p_Result_84_fu_547_p3[54] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd54;
    end else if (p_Result_84_fu_547_p3[55] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd55;
    end else if (p_Result_84_fu_547_p3[56] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd56;
    end else if (p_Result_84_fu_547_p3[57] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd57;
    end else if (p_Result_84_fu_547_p3[58] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd58;
    end else if (p_Result_84_fu_547_p3[59] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd59;
    end else if (p_Result_84_fu_547_p3[60] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd60;
    end else if (p_Result_84_fu_547_p3[61] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd61;
    end else if (p_Result_84_fu_547_p3[62] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd62;
    end else if (p_Result_84_fu_547_p3[63] == 1'b1) begin
        tmp_i_147_fu_555_p3 = 64'd63;
    end else begin
        tmp_i_147_fu_555_p3 = 64'd64;
    end
end


always @ (p_Result_78_fu_317_p3) begin
    if (p_Result_78_fu_317_p3[0] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd0;
    end else if (p_Result_78_fu_317_p3[1] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd1;
    end else if (p_Result_78_fu_317_p3[2] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd2;
    end else if (p_Result_78_fu_317_p3[3] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd3;
    end else if (p_Result_78_fu_317_p3[4] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd4;
    end else if (p_Result_78_fu_317_p3[5] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd5;
    end else if (p_Result_78_fu_317_p3[6] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd6;
    end else if (p_Result_78_fu_317_p3[7] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd7;
    end else if (p_Result_78_fu_317_p3[8] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd8;
    end else if (p_Result_78_fu_317_p3[9] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd9;
    end else if (p_Result_78_fu_317_p3[10] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd10;
    end else if (p_Result_78_fu_317_p3[11] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd11;
    end else if (p_Result_78_fu_317_p3[12] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd12;
    end else if (p_Result_78_fu_317_p3[13] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd13;
    end else if (p_Result_78_fu_317_p3[14] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd14;
    end else if (p_Result_78_fu_317_p3[15] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd15;
    end else if (p_Result_78_fu_317_p3[16] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd16;
    end else if (p_Result_78_fu_317_p3[17] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd17;
    end else if (p_Result_78_fu_317_p3[18] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd18;
    end else if (p_Result_78_fu_317_p3[19] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd19;
    end else if (p_Result_78_fu_317_p3[20] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd20;
    end else if (p_Result_78_fu_317_p3[21] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd21;
    end else if (p_Result_78_fu_317_p3[22] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd22;
    end else if (p_Result_78_fu_317_p3[23] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd23;
    end else if (p_Result_78_fu_317_p3[24] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd24;
    end else if (p_Result_78_fu_317_p3[25] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd25;
    end else if (p_Result_78_fu_317_p3[26] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd26;
    end else if (p_Result_78_fu_317_p3[27] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd27;
    end else if (p_Result_78_fu_317_p3[28] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd28;
    end else if (p_Result_78_fu_317_p3[29] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd29;
    end else if (p_Result_78_fu_317_p3[30] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd30;
    end else if (p_Result_78_fu_317_p3[31] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd31;
    end else if (p_Result_78_fu_317_p3[32] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd32;
    end else if (p_Result_78_fu_317_p3[33] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd33;
    end else if (p_Result_78_fu_317_p3[34] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd34;
    end else if (p_Result_78_fu_317_p3[35] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd35;
    end else if (p_Result_78_fu_317_p3[36] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd36;
    end else if (p_Result_78_fu_317_p3[37] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd37;
    end else if (p_Result_78_fu_317_p3[38] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd38;
    end else if (p_Result_78_fu_317_p3[39] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd39;
    end else if (p_Result_78_fu_317_p3[40] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd40;
    end else if (p_Result_78_fu_317_p3[41] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd41;
    end else if (p_Result_78_fu_317_p3[42] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd42;
    end else if (p_Result_78_fu_317_p3[43] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd43;
    end else if (p_Result_78_fu_317_p3[44] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd44;
    end else if (p_Result_78_fu_317_p3[45] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd45;
    end else if (p_Result_78_fu_317_p3[46] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd46;
    end else if (p_Result_78_fu_317_p3[47] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd47;
    end else if (p_Result_78_fu_317_p3[48] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd48;
    end else if (p_Result_78_fu_317_p3[49] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd49;
    end else if (p_Result_78_fu_317_p3[50] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd50;
    end else if (p_Result_78_fu_317_p3[51] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd51;
    end else if (p_Result_78_fu_317_p3[52] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd52;
    end else if (p_Result_78_fu_317_p3[53] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd53;
    end else if (p_Result_78_fu_317_p3[54] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd54;
    end else if (p_Result_78_fu_317_p3[55] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd55;
    end else if (p_Result_78_fu_317_p3[56] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd56;
    end else if (p_Result_78_fu_317_p3[57] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd57;
    end else if (p_Result_78_fu_317_p3[58] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd58;
    end else if (p_Result_78_fu_317_p3[59] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd59;
    end else if (p_Result_78_fu_317_p3[60] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd60;
    end else if (p_Result_78_fu_317_p3[61] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd61;
    end else if (p_Result_78_fu_317_p3[62] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd62;
    end else if (p_Result_78_fu_317_p3[63] == 1'b1) begin
        tmp_i_fu_325_p3 = 64'd63;
    end else begin
        tmp_i_fu_325_p3 = 64'd64;
    end
end

assign tobool31_i_i11941_i_fu_703_p2 = (xor_ln899_2_fu_635_p2 & a_2_fu_655_p2);

assign tobool31_i_i13_i_fu_473_p2 = (xor_ln899_fu_405_p2 & a_fu_425_p2);

assign tobool31_i_i4927_i_fu_991_p2 = (xor_ln899_1_fu_959_p2 & a_1_fu_979_p2);

assign trunc_ln466_1_fu_1149_p1 = data_V_fu_1110_p3[51:0];

assign trunc_ln466_fu_1211_p1 = data_V_1_fu_1171_p1[51:0];

assign trunc_ln555_1_fu_1338_p1 = ireg_1_fu_1335_p1[62:0];

assign trunc_ln555_fu_1662_p1 = ireg_fu_1658_p1[62:0];

assign trunc_ln565_1_fu_1364_p1 = ireg_1_fu_1335_p1[51:0];

assign trunc_ln565_fu_1688_p1 = ireg_fu_1658_p1[51:0];

assign trunc_ln575_1_fu_1406_p1 = F2_1_fu_1400_p2[10:0];

assign trunc_ln575_fu_1730_p1 = F2_fu_1724_p2[10:0];

assign trunc_ln586_1_fu_1462_p1 = sh_amt_1_fu_1428_p3[5:0];

assign trunc_ln586_fu_1786_p1 = sh_amt_fu_1752_p3[5:0];

assign trunc_ln588_1_cast_i_fu_1484_p3 = ((tmp_47_fu_1476_p3[0:0] == 1'b1) ? 54'd18014398509481983 : 54'd0);

assign trunc_ln588_cast_i_fu_1808_p3 = ((tmp_45_fu_1800_p3[0:0] == 1'b1) ? 54'd18014398509481983 : 54'd0);

assign trunc_ln893_1_fu_997_p1 = tmp_6_i_fu_879_p3[10:0];

assign trunc_ln893_2_fu_753_p1 = tmp_i_147_fu_555_p3[10:0];

assign trunc_ln893_fu_523_p1 = tmp_i_fu_325_p3[10:0];

assign trunc_ln897_1_fu_919_p1 = sub_ln894_1_fu_891_p2[5:0];

assign trunc_ln897_2_fu_595_p1 = sub_ln894_2_fu_567_p2[5:0];

assign trunc_ln897_fu_365_p1 = sub_ln894_fu_337_p2[5:0];

assign xor_ln466_fu_1318_p2 = (bitcast_ln466_fu_1314_p1 ^ 64'd9223372036854775808);

assign xor_ln571_1_fu_1556_p2 = (icmp_ln571_1_fu_1394_p2 ^ 1'd1);

assign xor_ln571_fu_1880_p2 = (icmp_ln571_fu_1718_p2 ^ 1'd1);

assign xor_ln581_1_fu_1592_p2 = (or_ln581_1_fu_1586_p2 ^ 1'd1);

assign xor_ln581_fu_1916_p2 = (or_ln581_fu_1910_p2 ^ 1'd1);

assign xor_ln582_1_fu_1574_p2 = (or_ln582_1_fu_1568_p2 ^ 1'd1);

assign xor_ln582_fu_1898_p2 = (or_ln582_fu_1892_p2 ^ 1'd1);

assign xor_ln899_1_fu_959_p2 = (tmp_35_fu_951_p3 ^ 1'd1);

assign xor_ln899_2_fu_635_p2 = (tmp_39_fu_627_p3 ^ 1'd1);

assign xor_ln899_fu_405_p2 = (tmp_31_fu_397_p3 ^ 1'd1);

assign zext_ln415_5_fu_1546_p1 = qb_1_fu_1538_p3;

assign zext_ln415_fu_1870_p1 = qb_fu_1862_p3;

assign zext_ln455_1_fu_1360_p1 = exp_tmp_1_fu_1350_p4;

assign zext_ln455_fu_1684_p1 = exp_tmp_fu_1674_p4;

assign zext_ln569_1_fu_1376_p1 = p_Result_92_fu_1368_p3;

assign zext_ln569_fu_1700_p1 = p_Result_90_fu_1692_p3;

assign zext_ln586_1_fu_1466_p1 = trunc_ln586_1_fu_1462_p1;

assign zext_ln586_fu_1790_p1 = trunc_ln586_fu_1786_p1;

assign zext_ln591_1_fu_1526_p1 = add_ln591_1_fu_1520_p2;

assign zext_ln591_fu_1850_p1 = add_ln591_fu_1844_p2;

assign zext_ln604_1_fu_1492_p1 = trunc_ln586_1_fu_1462_p1;

assign zext_ln604_fu_1816_p1 = trunc_ln586_fu_1786_p1;

assign zext_ln897_1_fu_929_p1 = sub_ln897_1_fu_923_p2;

assign zext_ln897_2_fu_605_p1 = sub_ln897_2_fu_599_p2;

assign zext_ln897_fu_375_p1 = sub_ln897_fu_369_p2;

assign zext_ln907_1_fu_1001_p1 = m_20_reg_2084;

assign zext_ln907_2_fu_661_p1 = m_22_fu_532_p3;

assign zext_ln907_fu_431_p1 = m_18_fu_302_p3;

assign zext_ln908_1_fu_1024_p1 = add_ln908_1_fu_1019_p2;

assign zext_ln908_2_fu_693_p1 = add_ln908_2_fu_687_p2;

assign zext_ln908_fu_463_p1 = add_ln908_fu_457_p2;

assign zext_ln909_1_fu_1009_p1 = sub_ln909_1_fu_1004_p2;

assign zext_ln909_2_fu_677_p1 = sub_ln909_2_fu_671_p2;

assign zext_ln909_fu_447_p1 = sub_ln909_fu_441_p2;

assign zext_ln911_1_fu_1041_p1 = tobool31_i_i4927_i_reg_2100;

assign zext_ln911_2_fu_717_p1 = tobool31_i_i11941_i_fu_703_p2;

assign zext_ln911_fu_487_p1 = tobool31_i_i13_i_fu_473_p2;

assign zext_ln912_1_fu_1060_p1 = m_21_fu_1050_p4;

assign zext_ln912_2_fu_801_p1 = m_23_reg_2054;

assign zext_ln912_fu_757_p1 = m_19_reg_2034;

always @ (posedge ap_clk) begin
    select_ln893_reg_2039[10:1] <= 10'b0111111111;
    select_ln893_2_reg_2059[10:1] <= 10'b0111111111;
end

endmodule //LLSSineReconstruction_jacobi_rotation_2x2
