-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LLSSineReconstruction_read_to_2cols is
port (
    sine_reconstructor_16_873_din : OUT STD_LOGIC_VECTOR (59 downto 0);
    sine_reconstructor_16_873_full_n : IN STD_LOGIC;
    sine_reconstructor_16_873_write : OUT STD_LOGIC;
    sine_reconstructor_16_974_din : OUT STD_LOGIC_VECTOR (59 downto 0);
    sine_reconstructor_16_974_full_n : IN STD_LOGIC;
    sine_reconstructor_16_974_write : OUT STD_LOGIC;
    sine_reconstructor_16_1075_din : OUT STD_LOGIC_VECTOR (59 downto 0);
    sine_reconstructor_16_1075_full_n : IN STD_LOGIC;
    sine_reconstructor_16_1075_write : OUT STD_LOGIC;
    this_alpha_acc_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_alpha_acc_0_ce0 : OUT STD_LOGIC;
    this_alpha_acc_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_acc_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_acc_0_we0 : OUT STD_LOGIC;
    this_alpha_acc_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_alpha_acc_0_ce1 : OUT STD_LOGIC;
    this_alpha_acc_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_acc_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_acc_0_we1 : OUT STD_LOGIC;
    this_beta_acc_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_beta_acc_0_ce0 : OUT STD_LOGIC;
    this_beta_acc_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_beta_acc_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_beta_acc_0_we0 : OUT STD_LOGIC;
    this_beta_acc_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_beta_acc_0_ce1 : OUT STD_LOGIC;
    this_beta_acc_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_beta_acc_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_beta_acc_0_we1 : OUT STD_LOGIC;
    this_gamma_acc_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_gamma_acc_0_ce0 : OUT STD_LOGIC;
    this_gamma_acc_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_acc_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_acc_0_we0 : OUT STD_LOGIC;
    this_gamma_acc_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_gamma_acc_0_ce1 : OUT STD_LOGIC;
    this_gamma_acc_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_acc_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_acc_0_we1 : OUT STD_LOGIC;
    this_alpha_sum_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_alpha_sum_ce0 : OUT STD_LOGIC;
    this_alpha_sum_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_sum_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_sum_we0 : OUT STD_LOGIC;
    this_alpha_sum_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_alpha_sum_ce1 : OUT STD_LOGIC;
    this_alpha_sum_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_sum_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_alpha_sum_we1 : OUT STD_LOGIC;
    this_beta_sum_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_beta_sum_ce0 : OUT STD_LOGIC;
    this_beta_sum_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_beta_sum_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_beta_sum_we0 : OUT STD_LOGIC;
    this_beta_sum_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_beta_sum_ce1 : OUT STD_LOGIC;
    this_beta_sum_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_beta_sum_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_beta_sum_we1 : OUT STD_LOGIC;
    this_gamma_sum_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_gamma_sum_ce0 : OUT STD_LOGIC;
    this_gamma_sum_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_sum_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_sum_we0 : OUT STD_LOGIC;
    this_gamma_sum_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_gamma_sum_ce1 : OUT STD_LOGIC;
    this_gamma_sum_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_sum_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    this_gamma_sum_we1 : OUT STD_LOGIC;
    matA_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matA_0_ce0 : OUT STD_LOGIC;
    matA_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    matA_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    matA_0_we0 : OUT STD_LOGIC;
    matA_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    matA_0_ce1 : OUT STD_LOGIC;
    matA_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    matA_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    matA_0_we1 : OUT STD_LOGIC;
    matV_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    matV_0_ce0 : OUT STD_LOGIC;
    matV_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    matV_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    matV_0_we0 : OUT STD_LOGIC;
    matV_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    matV_0_ce1 : OUT STD_LOGIC;
    matV_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    matV_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    matV_0_we1 : OUT STD_LOGIC;
    A_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    A_i_0_ce0 : OUT STD_LOGIC;
    A_i_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    A_i_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    A_i_0_we0 : OUT STD_LOGIC;
    A_i_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    A_i_0_ce1 : OUT STD_LOGIC;
    A_i_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    A_i_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    A_i_0_we1 : OUT STD_LOGIC;
    A_j_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    A_j_0_ce0 : OUT STD_LOGIC;
    A_j_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    A_j_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    A_j_0_we0 : OUT STD_LOGIC;
    A_j_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    A_j_0_ce1 : OUT STD_LOGIC;
    A_j_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    A_j_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    A_j_0_we1 : OUT STD_LOGIC;
    V_i_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    V_i_0_ce0 : OUT STD_LOGIC;
    V_i_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    V_i_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    V_i_0_we0 : OUT STD_LOGIC;
    V_i_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    V_i_0_ce1 : OUT STD_LOGIC;
    V_i_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    V_i_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    V_i_0_we1 : OUT STD_LOGIC;
    V_j_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    V_j_0_ce0 : OUT STD_LOGIC;
    V_j_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
    V_j_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
    V_j_0_we0 : OUT STD_LOGIC;
    V_j_0_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    V_j_0_ce1 : OUT STD_LOGIC;
    V_j_0_d1 : OUT STD_LOGIC_VECTOR (59 downto 0);
    V_j_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
    V_j_0_we1 : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (1 downto 0);
    col_i : IN STD_LOGIC_VECTOR (1 downto 0);
    col_j : IN STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    n_ap_vld : IN STD_LOGIC;
    col_i_ap_vld : IN STD_LOGIC;
    col_j_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of LLSSineReconstruction_read_to_2cols is 
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal read_to_2cols_entry508_U0_ap_start : STD_LOGIC;
    signal read_to_2cols_entry508_U0_ap_done : STD_LOGIC;
    signal read_to_2cols_entry508_U0_ap_continue : STD_LOGIC;
    signal read_to_2cols_entry508_U0_ap_idle : STD_LOGIC;
    signal read_to_2cols_entry508_U0_ap_ready : STD_LOGIC;
    signal read_to_2cols_entry508_U0_n_out_din : STD_LOGIC_VECTOR (1 downto 0);
    signal read_to_2cols_entry508_U0_n_out_write : STD_LOGIC;
    signal read_to_2cols_entry508_U0_col_i_out_din : STD_LOGIC_VECTOR (1 downto 0);
    signal read_to_2cols_entry508_U0_col_i_out_write : STD_LOGIC;
    signal read_to_2cols_entry508_U0_col_i_out1_din : STD_LOGIC_VECTOR (1 downto 0);
    signal read_to_2cols_entry508_U0_col_i_out1_write : STD_LOGIC;
    signal read_to_2cols_entry508_U0_col_j_out_din : STD_LOGIC_VECTOR (1 downto 0);
    signal read_to_2cols_entry508_U0_col_j_out_write : STD_LOGIC;
    signal read_to_2cols_entry508_U0_col_j_out2_din : STD_LOGIC_VECTOR (1 downto 0);
    signal read_to_2cols_entry508_U0_col_j_out2_write : STD_LOGIC;
    signal read_and_gen_2x2_U0_ap_start : STD_LOGIC;
    signal read_and_gen_2x2_U0_ap_done : STD_LOGIC;
    signal read_and_gen_2x2_U0_ap_continue : STD_LOGIC;
    signal read_and_gen_2x2_U0_ap_idle : STD_LOGIC;
    signal read_and_gen_2x2_U0_ap_ready : STD_LOGIC;
    signal read_and_gen_2x2_U0_sine_reconstructor_16_873_din : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_sine_reconstructor_16_873_write : STD_LOGIC;
    signal read_and_gen_2x2_U0_sine_reconstructor_16_974_din : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_sine_reconstructor_16_974_write : STD_LOGIC;
    signal read_and_gen_2x2_U0_sine_reconstructor_16_1075_din : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_sine_reconstructor_16_1075_write : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_14_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_14_0_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_14_0_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_14_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_this_15_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_15_0_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_15_0_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_15_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_this_16_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_16_0_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_16_0_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_16_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_this_17_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_17_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_17_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_17_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_this_17_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_17_ce1 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_18_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_18_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_18_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_18_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_this_18_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_18_ce1 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_19_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_19_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_19_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_this_19_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_this_19_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_and_gen_2x2_U0_this_19_ce1 : STD_LOGIC;
    signal read_and_gen_2x2_U0_matA_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_and_gen_2x2_U0_matA_0_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_matA_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_and_gen_2x2_U0_matA_0_ce1 : STD_LOGIC;
    signal read_and_gen_2x2_U0_A_i_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal read_and_gen_2x2_U0_A_i_0_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_A_i_0_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_A_i_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_A_j_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal read_and_gen_2x2_U0_A_j_0_ce0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_A_j_0_we0 : STD_LOGIC;
    signal read_and_gen_2x2_U0_A_j_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_and_gen_2x2_U0_col_i_read : STD_LOGIC;
    signal read_and_gen_2x2_U0_col_j_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal read_V_2cols_U0_ap_start : STD_LOGIC;
    signal read_V_2cols_U0_ap_done : STD_LOGIC;
    signal read_V_2cols_U0_ap_continue : STD_LOGIC;
    signal read_V_2cols_U0_ap_idle : STD_LOGIC;
    signal read_V_2cols_U0_ap_ready : STD_LOGIC;
    signal read_V_2cols_U0_matV_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_V_2cols_U0_matV_0_ce0 : STD_LOGIC;
    signal read_V_2cols_U0_matV_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal read_V_2cols_U0_matV_0_ce1 : STD_LOGIC;
    signal read_V_2cols_U0_V_i_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_V_2cols_U0_V_i_0_ce0 : STD_LOGIC;
    signal read_V_2cols_U0_V_i_0_we0 : STD_LOGIC;
    signal read_V_2cols_U0_V_i_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_V_2cols_U0_V_j_0_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_V_2cols_U0_V_j_0_ce0 : STD_LOGIC;
    signal read_V_2cols_U0_V_j_0_we0 : STD_LOGIC;
    signal read_V_2cols_U0_V_j_0_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_V_2cols_U0_n_read : STD_LOGIC;
    signal read_V_2cols_U0_col_i_read : STD_LOGIC;
    signal read_V_2cols_U0_col_j_read : STD_LOGIC;
    signal n_c_full_n : STD_LOGIC;
    signal n_c_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal n_c_empty_n : STD_LOGIC;
    signal col_i_c_full_n : STD_LOGIC;
    signal col_i_c_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal col_i_c_empty_n : STD_LOGIC;
    signal col_i_c9_full_n : STD_LOGIC;
    signal col_i_c9_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal col_i_c9_empty_n : STD_LOGIC;
    signal col_j_c_full_n : STD_LOGIC;
    signal col_j_c_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal col_j_c_empty_n : STD_LOGIC;
    signal col_j_c10_full_n : STD_LOGIC;
    signal col_j_c10_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal col_j_c10_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_read_to_2cols_entry508_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_read_to_2cols_entry508_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_read_and_gen_2x2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_read_and_gen_2x2_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_read_V_2cols_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_read_V_2cols_U0_ap_ready : STD_LOGIC;
    signal read_to_2cols_entry508_U0_start_full_n : STD_LOGIC;
    signal read_to_2cols_entry508_U0_start_write : STD_LOGIC;
    signal read_and_gen_2x2_U0_start_full_n : STD_LOGIC;
    signal read_and_gen_2x2_U0_start_write : STD_LOGIC;
    signal read_V_2cols_U0_start_full_n : STD_LOGIC;
    signal read_V_2cols_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component LLSSineReconstruction_read_to_2cols_entry508 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n : IN STD_LOGIC_VECTOR (1 downto 0);
        col_i : IN STD_LOGIC_VECTOR (1 downto 0);
        col_j : IN STD_LOGIC_VECTOR (1 downto 0);
        n_out_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        n_out_full_n : IN STD_LOGIC;
        n_out_write : OUT STD_LOGIC;
        col_i_out_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        col_i_out_full_n : IN STD_LOGIC;
        col_i_out_write : OUT STD_LOGIC;
        col_i_out1_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        col_i_out1_full_n : IN STD_LOGIC;
        col_i_out1_write : OUT STD_LOGIC;
        col_j_out_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        col_j_out_full_n : IN STD_LOGIC;
        col_j_out_write : OUT STD_LOGIC;
        col_j_out2_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        col_j_out2_full_n : IN STD_LOGIC;
        col_j_out2_write : OUT STD_LOGIC );
    end component;


    component LLSSineReconstruction_read_and_gen_2x2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sine_reconstructor_16_873_din : OUT STD_LOGIC_VECTOR (59 downto 0);
        sine_reconstructor_16_873_full_n : IN STD_LOGIC;
        sine_reconstructor_16_873_write : OUT STD_LOGIC;
        sine_reconstructor_16_974_din : OUT STD_LOGIC_VECTOR (59 downto 0);
        sine_reconstructor_16_974_full_n : IN STD_LOGIC;
        sine_reconstructor_16_974_write : OUT STD_LOGIC;
        sine_reconstructor_16_1075_din : OUT STD_LOGIC_VECTOR (59 downto 0);
        sine_reconstructor_16_1075_full_n : IN STD_LOGIC;
        sine_reconstructor_16_1075_write : OUT STD_LOGIC;
        this_14_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_14_0_ce0 : OUT STD_LOGIC;
        this_14_0_we0 : OUT STD_LOGIC;
        this_14_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        this_14_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_15_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_15_0_ce0 : OUT STD_LOGIC;
        this_15_0_we0 : OUT STD_LOGIC;
        this_15_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        this_15_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_16_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_16_0_ce0 : OUT STD_LOGIC;
        this_16_0_we0 : OUT STD_LOGIC;
        this_16_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        this_16_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_17_ce0 : OUT STD_LOGIC;
        this_17_we0 : OUT STD_LOGIC;
        this_17_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        this_17_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_17_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_17_ce1 : OUT STD_LOGIC;
        this_17_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_18_ce0 : OUT STD_LOGIC;
        this_18_we0 : OUT STD_LOGIC;
        this_18_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        this_18_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_18_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_18_ce1 : OUT STD_LOGIC;
        this_18_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_19_ce0 : OUT STD_LOGIC;
        this_19_we0 : OUT STD_LOGIC;
        this_19_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        this_19_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        this_19_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_19_ce1 : OUT STD_LOGIC;
        this_19_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
        matA_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        matA_0_ce0 : OUT STD_LOGIC;
        matA_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        matA_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        matA_0_ce1 : OUT STD_LOGIC;
        matA_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
        A_i_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_i_0_ce0 : OUT STD_LOGIC;
        A_i_0_we0 : OUT STD_LOGIC;
        A_i_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        A_j_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_j_0_ce0 : OUT STD_LOGIC;
        A_j_0_we0 : OUT STD_LOGIC;
        A_j_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        col_i_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        col_i_empty_n : IN STD_LOGIC;
        col_i_read : OUT STD_LOGIC;
        col_j_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        col_j_empty_n : IN STD_LOGIC;
        col_j_read : OUT STD_LOGIC );
    end component;


    component LLSSineReconstruction_read_V_2cols IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        matV_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matV_0_ce0 : OUT STD_LOGIC;
        matV_0_q0 : IN STD_LOGIC_VECTOR (59 downto 0);
        matV_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        matV_0_ce1 : OUT STD_LOGIC;
        matV_0_q1 : IN STD_LOGIC_VECTOR (59 downto 0);
        V_i_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        V_i_0_ce0 : OUT STD_LOGIC;
        V_i_0_we0 : OUT STD_LOGIC;
        V_i_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        V_j_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        V_j_0_ce0 : OUT STD_LOGIC;
        V_j_0_we0 : OUT STD_LOGIC;
        V_j_0_d0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        n_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        n_empty_n : IN STD_LOGIC;
        n_read : OUT STD_LOGIC;
        col_i_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        col_i_empty_n : IN STD_LOGIC;
        col_i_read : OUT STD_LOGIC;
        col_j_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        col_j_empty_n : IN STD_LOGIC;
        col_j_read : OUT STD_LOGIC );
    end component;


    component LLSSineReconstruction_fifo_w2_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    read_to_2cols_entry508_U0 : component LLSSineReconstruction_read_to_2cols_entry508
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => read_to_2cols_entry508_U0_ap_start,
        ap_done => read_to_2cols_entry508_U0_ap_done,
        ap_continue => read_to_2cols_entry508_U0_ap_continue,
        ap_idle => read_to_2cols_entry508_U0_ap_idle,
        ap_ready => read_to_2cols_entry508_U0_ap_ready,
        n => n,
        col_i => col_i,
        col_j => col_j,
        n_out_din => read_to_2cols_entry508_U0_n_out_din,
        n_out_full_n => n_c_full_n,
        n_out_write => read_to_2cols_entry508_U0_n_out_write,
        col_i_out_din => read_to_2cols_entry508_U0_col_i_out_din,
        col_i_out_full_n => col_i_c_full_n,
        col_i_out_write => read_to_2cols_entry508_U0_col_i_out_write,
        col_i_out1_din => read_to_2cols_entry508_U0_col_i_out1_din,
        col_i_out1_full_n => col_i_c9_full_n,
        col_i_out1_write => read_to_2cols_entry508_U0_col_i_out1_write,
        col_j_out_din => read_to_2cols_entry508_U0_col_j_out_din,
        col_j_out_full_n => col_j_c_full_n,
        col_j_out_write => read_to_2cols_entry508_U0_col_j_out_write,
        col_j_out2_din => read_to_2cols_entry508_U0_col_j_out2_din,
        col_j_out2_full_n => col_j_c10_full_n,
        col_j_out2_write => read_to_2cols_entry508_U0_col_j_out2_write);

    read_and_gen_2x2_U0 : component LLSSineReconstruction_read_and_gen_2x2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => read_and_gen_2x2_U0_ap_start,
        ap_done => read_and_gen_2x2_U0_ap_done,
        ap_continue => read_and_gen_2x2_U0_ap_continue,
        ap_idle => read_and_gen_2x2_U0_ap_idle,
        ap_ready => read_and_gen_2x2_U0_ap_ready,
        sine_reconstructor_16_873_din => read_and_gen_2x2_U0_sine_reconstructor_16_873_din,
        sine_reconstructor_16_873_full_n => sine_reconstructor_16_873_full_n,
        sine_reconstructor_16_873_write => read_and_gen_2x2_U0_sine_reconstructor_16_873_write,
        sine_reconstructor_16_974_din => read_and_gen_2x2_U0_sine_reconstructor_16_974_din,
        sine_reconstructor_16_974_full_n => sine_reconstructor_16_974_full_n,
        sine_reconstructor_16_974_write => read_and_gen_2x2_U0_sine_reconstructor_16_974_write,
        sine_reconstructor_16_1075_din => read_and_gen_2x2_U0_sine_reconstructor_16_1075_din,
        sine_reconstructor_16_1075_full_n => sine_reconstructor_16_1075_full_n,
        sine_reconstructor_16_1075_write => read_and_gen_2x2_U0_sine_reconstructor_16_1075_write,
        this_14_0_address0 => read_and_gen_2x2_U0_this_14_0_address0,
        this_14_0_ce0 => read_and_gen_2x2_U0_this_14_0_ce0,
        this_14_0_we0 => read_and_gen_2x2_U0_this_14_0_we0,
        this_14_0_d0 => read_and_gen_2x2_U0_this_14_0_d0,
        this_14_0_q0 => this_alpha_acc_0_q0,
        this_15_0_address0 => read_and_gen_2x2_U0_this_15_0_address0,
        this_15_0_ce0 => read_and_gen_2x2_U0_this_15_0_ce0,
        this_15_0_we0 => read_and_gen_2x2_U0_this_15_0_we0,
        this_15_0_d0 => read_and_gen_2x2_U0_this_15_0_d0,
        this_15_0_q0 => this_beta_acc_0_q0,
        this_16_0_address0 => read_and_gen_2x2_U0_this_16_0_address0,
        this_16_0_ce0 => read_and_gen_2x2_U0_this_16_0_ce0,
        this_16_0_we0 => read_and_gen_2x2_U0_this_16_0_we0,
        this_16_0_d0 => read_and_gen_2x2_U0_this_16_0_d0,
        this_16_0_q0 => this_gamma_acc_0_q0,
        this_17_address0 => read_and_gen_2x2_U0_this_17_address0,
        this_17_ce0 => read_and_gen_2x2_U0_this_17_ce0,
        this_17_we0 => read_and_gen_2x2_U0_this_17_we0,
        this_17_d0 => read_and_gen_2x2_U0_this_17_d0,
        this_17_q0 => this_alpha_sum_q0,
        this_17_address1 => read_and_gen_2x2_U0_this_17_address1,
        this_17_ce1 => read_and_gen_2x2_U0_this_17_ce1,
        this_17_q1 => this_alpha_sum_q1,
        this_18_address0 => read_and_gen_2x2_U0_this_18_address0,
        this_18_ce0 => read_and_gen_2x2_U0_this_18_ce0,
        this_18_we0 => read_and_gen_2x2_U0_this_18_we0,
        this_18_d0 => read_and_gen_2x2_U0_this_18_d0,
        this_18_q0 => this_beta_sum_q0,
        this_18_address1 => read_and_gen_2x2_U0_this_18_address1,
        this_18_ce1 => read_and_gen_2x2_U0_this_18_ce1,
        this_18_q1 => this_beta_sum_q1,
        this_19_address0 => read_and_gen_2x2_U0_this_19_address0,
        this_19_ce0 => read_and_gen_2x2_U0_this_19_ce0,
        this_19_we0 => read_and_gen_2x2_U0_this_19_we0,
        this_19_d0 => read_and_gen_2x2_U0_this_19_d0,
        this_19_q0 => this_gamma_sum_q0,
        this_19_address1 => read_and_gen_2x2_U0_this_19_address1,
        this_19_ce1 => read_and_gen_2x2_U0_this_19_ce1,
        this_19_q1 => this_gamma_sum_q1,
        matA_0_address0 => read_and_gen_2x2_U0_matA_0_address0,
        matA_0_ce0 => read_and_gen_2x2_U0_matA_0_ce0,
        matA_0_q0 => matA_0_q0,
        matA_0_address1 => read_and_gen_2x2_U0_matA_0_address1,
        matA_0_ce1 => read_and_gen_2x2_U0_matA_0_ce1,
        matA_0_q1 => matA_0_q1,
        A_i_0_address0 => read_and_gen_2x2_U0_A_i_0_address0,
        A_i_0_ce0 => read_and_gen_2x2_U0_A_i_0_ce0,
        A_i_0_we0 => read_and_gen_2x2_U0_A_i_0_we0,
        A_i_0_d0 => read_and_gen_2x2_U0_A_i_0_d0,
        A_j_0_address0 => read_and_gen_2x2_U0_A_j_0_address0,
        A_j_0_ce0 => read_and_gen_2x2_U0_A_j_0_ce0,
        A_j_0_we0 => read_and_gen_2x2_U0_A_j_0_we0,
        A_j_0_d0 => read_and_gen_2x2_U0_A_j_0_d0,
        col_i_dout => col_i_c_dout,
        col_i_empty_n => col_i_c_empty_n,
        col_i_read => read_and_gen_2x2_U0_col_i_read,
        col_j_dout => col_j_c_dout,
        col_j_empty_n => col_j_c_empty_n,
        col_j_read => read_and_gen_2x2_U0_col_j_read);

    read_V_2cols_U0 : component LLSSineReconstruction_read_V_2cols
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => read_V_2cols_U0_ap_start,
        ap_done => read_V_2cols_U0_ap_done,
        ap_continue => read_V_2cols_U0_ap_continue,
        ap_idle => read_V_2cols_U0_ap_idle,
        ap_ready => read_V_2cols_U0_ap_ready,
        matV_0_address0 => read_V_2cols_U0_matV_0_address0,
        matV_0_ce0 => read_V_2cols_U0_matV_0_ce0,
        matV_0_q0 => matV_0_q0,
        matV_0_address1 => read_V_2cols_U0_matV_0_address1,
        matV_0_ce1 => read_V_2cols_U0_matV_0_ce1,
        matV_0_q1 => matV_0_q1,
        V_i_0_address0 => read_V_2cols_U0_V_i_0_address0,
        V_i_0_ce0 => read_V_2cols_U0_V_i_0_ce0,
        V_i_0_we0 => read_V_2cols_U0_V_i_0_we0,
        V_i_0_d0 => read_V_2cols_U0_V_i_0_d0,
        V_j_0_address0 => read_V_2cols_U0_V_j_0_address0,
        V_j_0_ce0 => read_V_2cols_U0_V_j_0_ce0,
        V_j_0_we0 => read_V_2cols_U0_V_j_0_we0,
        V_j_0_d0 => read_V_2cols_U0_V_j_0_d0,
        n_dout => n_c_dout,
        n_empty_n => n_c_empty_n,
        n_read => read_V_2cols_U0_n_read,
        col_i_dout => col_i_c9_dout,
        col_i_empty_n => col_i_c9_empty_n,
        col_i_read => read_V_2cols_U0_col_i_read,
        col_j_dout => col_j_c10_dout,
        col_j_empty_n => col_j_c10_empty_n,
        col_j_read => read_V_2cols_U0_col_j_read);

    n_c_U : component LLSSineReconstruction_fifo_w2_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_to_2cols_entry508_U0_n_out_din,
        if_full_n => n_c_full_n,
        if_write => read_to_2cols_entry508_U0_n_out_write,
        if_dout => n_c_dout,
        if_empty_n => n_c_empty_n,
        if_read => read_V_2cols_U0_n_read);

    col_i_c_U : component LLSSineReconstruction_fifo_w2_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_to_2cols_entry508_U0_col_i_out_din,
        if_full_n => col_i_c_full_n,
        if_write => read_to_2cols_entry508_U0_col_i_out_write,
        if_dout => col_i_c_dout,
        if_empty_n => col_i_c_empty_n,
        if_read => read_and_gen_2x2_U0_col_i_read);

    col_i_c9_U : component LLSSineReconstruction_fifo_w2_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_to_2cols_entry508_U0_col_i_out1_din,
        if_full_n => col_i_c9_full_n,
        if_write => read_to_2cols_entry508_U0_col_i_out1_write,
        if_dout => col_i_c9_dout,
        if_empty_n => col_i_c9_empty_n,
        if_read => read_V_2cols_U0_col_i_read);

    col_j_c_U : component LLSSineReconstruction_fifo_w2_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_to_2cols_entry508_U0_col_j_out_din,
        if_full_n => col_j_c_full_n,
        if_write => read_to_2cols_entry508_U0_col_j_out_write,
        if_dout => col_j_c_dout,
        if_empty_n => col_j_c_empty_n,
        if_read => read_and_gen_2x2_U0_col_j_read);

    col_j_c10_U : component LLSSineReconstruction_fifo_w2_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_to_2cols_entry508_U0_col_j_out2_din,
        if_full_n => col_j_c10_full_n,
        if_write => read_to_2cols_entry508_U0_col_j_out2_write,
        if_dout => col_j_c10_dout,
        if_empty_n => col_j_c10_empty_n,
        if_read => read_V_2cols_U0_col_j_read);





    ap_sync_reg_read_V_2cols_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_read_V_2cols_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_read_V_2cols_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_read_V_2cols_U0_ap_ready <= ap_sync_read_V_2cols_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_read_and_gen_2x2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_read_and_gen_2x2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_read_and_gen_2x2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_read_and_gen_2x2_U0_ap_ready <= ap_sync_read_and_gen_2x2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_read_to_2cols_entry508_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_read_to_2cols_entry508_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_read_to_2cols_entry508_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_read_to_2cols_entry508_U0_ap_ready <= ap_sync_read_to_2cols_entry508_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    A_i_0_address0 <= read_and_gen_2x2_U0_A_i_0_address0;
    A_i_0_address1 <= ap_const_lv7_0;
    A_i_0_ce0 <= read_and_gen_2x2_U0_A_i_0_ce0;
    A_i_0_ce1 <= ap_const_logic_0;
    A_i_0_d0 <= read_and_gen_2x2_U0_A_i_0_d0;
    A_i_0_d1 <= ap_const_lv60_0;
    A_i_0_we0 <= read_and_gen_2x2_U0_A_i_0_we0;
    A_i_0_we1 <= ap_const_logic_0;
    A_j_0_address0 <= read_and_gen_2x2_U0_A_j_0_address0;
    A_j_0_address1 <= ap_const_lv7_0;
    A_j_0_ce0 <= read_and_gen_2x2_U0_A_j_0_ce0;
    A_j_0_ce1 <= ap_const_logic_0;
    A_j_0_d0 <= read_and_gen_2x2_U0_A_j_0_d0;
    A_j_0_d1 <= ap_const_lv60_0;
    A_j_0_we0 <= read_and_gen_2x2_U0_A_j_0_we0;
    A_j_0_we1 <= ap_const_logic_0;
    V_i_0_address0 <= read_V_2cols_U0_V_i_0_address0;
    V_i_0_address1 <= ap_const_lv2_0;
    V_i_0_ce0 <= read_V_2cols_U0_V_i_0_ce0;
    V_i_0_ce1 <= ap_const_logic_0;
    V_i_0_d0 <= read_V_2cols_U0_V_i_0_d0;
    V_i_0_d1 <= ap_const_lv60_0;
    V_i_0_we0 <= read_V_2cols_U0_V_i_0_we0;
    V_i_0_we1 <= ap_const_logic_0;
    V_j_0_address0 <= read_V_2cols_U0_V_j_0_address0;
    V_j_0_address1 <= ap_const_lv2_0;
    V_j_0_ce0 <= read_V_2cols_U0_V_j_0_ce0;
    V_j_0_ce1 <= ap_const_logic_0;
    V_j_0_d0 <= read_V_2cols_U0_V_j_0_d0;
    V_j_0_d1 <= ap_const_lv60_0;
    V_j_0_we0 <= read_V_2cols_U0_V_j_0_we0;
    V_j_0_we1 <= ap_const_logic_0;
    ap_done <= ap_sync_done;
    ap_idle <= (read_to_2cols_entry508_U0_ap_idle and read_and_gen_2x2_U0_ap_idle and read_V_2cols_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (read_and_gen_2x2_U0_ap_done and read_V_2cols_U0_ap_done);
    ap_sync_read_V_2cols_U0_ap_ready <= (read_V_2cols_U0_ap_ready or ap_sync_reg_read_V_2cols_U0_ap_ready);
    ap_sync_read_and_gen_2x2_U0_ap_ready <= (read_and_gen_2x2_U0_ap_ready or ap_sync_reg_read_and_gen_2x2_U0_ap_ready);
    ap_sync_read_to_2cols_entry508_U0_ap_ready <= (read_to_2cols_entry508_U0_ap_ready or ap_sync_reg_read_to_2cols_entry508_U0_ap_ready);
    ap_sync_ready <= (ap_sync_read_to_2cols_entry508_U0_ap_ready and ap_sync_read_and_gen_2x2_U0_ap_ready and ap_sync_read_V_2cols_U0_ap_ready);
    matA_0_address0 <= read_and_gen_2x2_U0_matA_0_address0;
    matA_0_address1 <= read_and_gen_2x2_U0_matA_0_address1;
    matA_0_ce0 <= read_and_gen_2x2_U0_matA_0_ce0;
    matA_0_ce1 <= read_and_gen_2x2_U0_matA_0_ce1;
    matA_0_d0 <= ap_const_lv60_0;
    matA_0_d1 <= ap_const_lv60_0;
    matA_0_we0 <= ap_const_logic_0;
    matA_0_we1 <= ap_const_logic_0;
    matV_0_address0 <= read_V_2cols_U0_matV_0_address0;
    matV_0_address1 <= read_V_2cols_U0_matV_0_address1;
    matV_0_ce0 <= read_V_2cols_U0_matV_0_ce0;
    matV_0_ce1 <= read_V_2cols_U0_matV_0_ce1;
    matV_0_d0 <= ap_const_lv60_0;
    matV_0_d1 <= ap_const_lv60_0;
    matV_0_we0 <= ap_const_logic_0;
    matV_0_we1 <= ap_const_logic_0;
    read_V_2cols_U0_ap_continue <= ap_sync_continue;
    read_V_2cols_U0_ap_start <= ((ap_sync_reg_read_V_2cols_U0_ap_ready xor ap_const_logic_1) and ap_start);
    read_V_2cols_U0_start_full_n <= ap_const_logic_1;
    read_V_2cols_U0_start_write <= ap_const_logic_0;
    read_and_gen_2x2_U0_ap_continue <= ap_sync_continue;
    read_and_gen_2x2_U0_ap_start <= ((ap_sync_reg_read_and_gen_2x2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    read_and_gen_2x2_U0_start_full_n <= ap_const_logic_1;
    read_and_gen_2x2_U0_start_write <= ap_const_logic_0;
    read_to_2cols_entry508_U0_ap_continue <= ap_const_logic_1;
    read_to_2cols_entry508_U0_ap_start <= ((ap_sync_reg_read_to_2cols_entry508_U0_ap_ready xor ap_const_logic_1) and ap_start);
    read_to_2cols_entry508_U0_start_full_n <= ap_const_logic_1;
    read_to_2cols_entry508_U0_start_write <= ap_const_logic_0;
    sine_reconstructor_16_1075_din <= read_and_gen_2x2_U0_sine_reconstructor_16_1075_din;
    sine_reconstructor_16_1075_write <= read_and_gen_2x2_U0_sine_reconstructor_16_1075_write;
    sine_reconstructor_16_873_din <= read_and_gen_2x2_U0_sine_reconstructor_16_873_din;
    sine_reconstructor_16_873_write <= read_and_gen_2x2_U0_sine_reconstructor_16_873_write;
    sine_reconstructor_16_974_din <= read_and_gen_2x2_U0_sine_reconstructor_16_974_din;
    sine_reconstructor_16_974_write <= read_and_gen_2x2_U0_sine_reconstructor_16_974_write;
    this_alpha_acc_0_address0 <= read_and_gen_2x2_U0_this_14_0_address0;
    this_alpha_acc_0_address1 <= ap_const_lv4_0;
    this_alpha_acc_0_ce0 <= read_and_gen_2x2_U0_this_14_0_ce0;
    this_alpha_acc_0_ce1 <= ap_const_logic_0;
    this_alpha_acc_0_d0 <= read_and_gen_2x2_U0_this_14_0_d0;
    this_alpha_acc_0_d1 <= ap_const_lv60_0;
    this_alpha_acc_0_we0 <= read_and_gen_2x2_U0_this_14_0_we0;
    this_alpha_acc_0_we1 <= ap_const_logic_0;
    this_alpha_sum_address0 <= read_and_gen_2x2_U0_this_17_address0;
    this_alpha_sum_address1 <= read_and_gen_2x2_U0_this_17_address1;
    this_alpha_sum_ce0 <= read_and_gen_2x2_U0_this_17_ce0;
    this_alpha_sum_ce1 <= read_and_gen_2x2_U0_this_17_ce1;
    this_alpha_sum_d0 <= read_and_gen_2x2_U0_this_17_d0;
    this_alpha_sum_d1 <= ap_const_lv60_0;
    this_alpha_sum_we0 <= read_and_gen_2x2_U0_this_17_we0;
    this_alpha_sum_we1 <= ap_const_logic_0;
    this_beta_acc_0_address0 <= read_and_gen_2x2_U0_this_15_0_address0;
    this_beta_acc_0_address1 <= ap_const_lv4_0;
    this_beta_acc_0_ce0 <= read_and_gen_2x2_U0_this_15_0_ce0;
    this_beta_acc_0_ce1 <= ap_const_logic_0;
    this_beta_acc_0_d0 <= read_and_gen_2x2_U0_this_15_0_d0;
    this_beta_acc_0_d1 <= ap_const_lv60_0;
    this_beta_acc_0_we0 <= read_and_gen_2x2_U0_this_15_0_we0;
    this_beta_acc_0_we1 <= ap_const_logic_0;
    this_beta_sum_address0 <= read_and_gen_2x2_U0_this_18_address0;
    this_beta_sum_address1 <= read_and_gen_2x2_U0_this_18_address1;
    this_beta_sum_ce0 <= read_and_gen_2x2_U0_this_18_ce0;
    this_beta_sum_ce1 <= read_and_gen_2x2_U0_this_18_ce1;
    this_beta_sum_d0 <= read_and_gen_2x2_U0_this_18_d0;
    this_beta_sum_d1 <= ap_const_lv60_0;
    this_beta_sum_we0 <= read_and_gen_2x2_U0_this_18_we0;
    this_beta_sum_we1 <= ap_const_logic_0;
    this_gamma_acc_0_address0 <= read_and_gen_2x2_U0_this_16_0_address0;
    this_gamma_acc_0_address1 <= ap_const_lv4_0;
    this_gamma_acc_0_ce0 <= read_and_gen_2x2_U0_this_16_0_ce0;
    this_gamma_acc_0_ce1 <= ap_const_logic_0;
    this_gamma_acc_0_d0 <= read_and_gen_2x2_U0_this_16_0_d0;
    this_gamma_acc_0_d1 <= ap_const_lv60_0;
    this_gamma_acc_0_we0 <= read_and_gen_2x2_U0_this_16_0_we0;
    this_gamma_acc_0_we1 <= ap_const_logic_0;
    this_gamma_sum_address0 <= read_and_gen_2x2_U0_this_19_address0;
    this_gamma_sum_address1 <= read_and_gen_2x2_U0_this_19_address1;
    this_gamma_sum_ce0 <= read_and_gen_2x2_U0_this_19_ce0;
    this_gamma_sum_ce1 <= read_and_gen_2x2_U0_this_19_ce1;
    this_gamma_sum_d0 <= read_and_gen_2x2_U0_this_19_d0;
    this_gamma_sum_d1 <= ap_const_lv60_0;
    this_gamma_sum_we0 <= read_and_gen_2x2_U0_this_19_we0;
    this_gamma_sum_we1 <= ap_const_logic_0;
end behav;
