-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LLSSineReconstruction_loadSlidingWindow is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buffer_in_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_0_ce0 : OUT STD_LOGIC;
    buffer_in_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_1_ce0 : OUT STD_LOGIC;
    buffer_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_2_ce0 : OUT STD_LOGIC;
    buffer_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_3_ce0 : OUT STD_LOGIC;
    buffer_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_4_ce0 : OUT STD_LOGIC;
    buffer_in_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_5_ce0 : OUT STD_LOGIC;
    buffer_in_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_6_ce0 : OUT STD_LOGIC;
    buffer_in_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_7_ce0 : OUT STD_LOGIC;
    buffer_in_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_8_ce0 : OUT STD_LOGIC;
    buffer_in_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_9_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_9_ce0 : OUT STD_LOGIC;
    buffer_in_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_10_ce0 : OUT STD_LOGIC;
    buffer_in_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    buffer_in_11_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buffer_in_11_ce0 : OUT STD_LOGIC;
    buffer_in_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sliding_window_front_ptr_s_i : IN STD_LOGIC_VECTOR (5 downto 0);
    sliding_window_front_ptr_s_o : OUT STD_LOGIC_VECTOR (5 downto 0);
    sliding_window_front_ptr_s_o_ap_vld : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_0_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_0_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_0_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_0_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_0_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_1_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_1_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_1_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_1_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_1_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_2_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_2_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_2_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_2_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_2_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_3_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_3_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_3_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_3_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_3_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_4_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_4_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_4_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_4_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_4_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_5_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_5_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_5_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_5_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_5_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_5_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_6_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_6_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_6_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_6_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_6_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_6_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_sample_V_7_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_0_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_1_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_2_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_3_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_4_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_5_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_6_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_7_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_8_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_9_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_10_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_sample_V_7_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_sample_V_7_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_sample_V_7_11_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_0_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_0_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_0_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_1_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_1_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_1_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_2_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_2_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_2_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_3_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_3_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_3_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_4_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_4_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_4_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_5_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_5_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_5_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_6_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_6_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_6_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_7_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_7_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_7_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_8_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_8_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_8_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_9_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_9_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_9_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_10_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_10_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_10_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sliding_window_buffer_samples_timestamp_V_7_11_ce0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_11_we0 : OUT STD_LOGIC;
    sliding_window_buffer_samples_timestamp_V_7_11_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    sliding_window_back_ptr_s_i : IN STD_LOGIC_VECTOR (5 downto 0);
    sliding_window_back_ptr_s_o : OUT STD_LOGIC_VECTOR (5 downto 0);
    sliding_window_back_ptr_s_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of LLSSineReconstruction_loadSlidingWindow is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (27 downto 0) := "0000000100000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (27 downto 0) := "0000001000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (27 downto 0) := "0000010000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (27 downto 0) := "0000100000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (27 downto 0) := "0001000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (27 downto 0) := "0010000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (27 downto 0) := "0100000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sliding_window_size_s : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_reg_7314 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln84_fu_7337_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln84_reg_8113 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln84_fu_7343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_reg_8118 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln19_fu_7589_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln19_reg_8182 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln19_fu_7595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_reg_8187 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln19_fu_7623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sample_period_samples_0_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_sample_V_load_reg_8578 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal sample_period_samples_1_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_1_sample_V_load_reg_8583 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_reg_8588 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_reg_8593 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_reg_8598 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_reg_8603 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_reg_8608 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_reg_8613 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_reg_8618 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_reg_8623 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_reg_8628 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_reg_8633 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_timestamp_V_load_reg_8638 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_reg_8643 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_reg_8648 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_reg_8653 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_reg_8658 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_reg_8663 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_reg_8668 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_reg_8673 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_reg_8678 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_reg_8683 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_reg_8688 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_reg_8693 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_sample_V_load_1_reg_8698 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_1_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_1_sample_V_load_1_reg_8703 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_1_reg_8708 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_1_reg_8713 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_1_reg_8718 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_1_reg_8723 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_1_reg_8728 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_1_reg_8733 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_1_reg_8738 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_1_reg_8743 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_1_reg_8748 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_1_reg_8753 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_timestamp_V_load_1_reg_8758 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_1_reg_8763 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_1_reg_8768 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_1_reg_8773 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_1_reg_8778 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_1_reg_8783 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_1_reg_8788 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_1_reg_8793 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_1_reg_8798 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_1_reg_8803 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_1_reg_8808 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_1_reg_8813 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_load_2_reg_9058 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal sample_period_samples_1_sample_V_load_2_reg_9063 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_2_reg_9068 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_2_reg_9073 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_2_reg_9078 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_2_reg_9083 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_2_reg_9088 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_2_reg_9093 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_2_reg_9098 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_2_reg_9103 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_2_reg_9108 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_2_reg_9113 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_load_2_reg_9118 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_2_reg_9123 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_2_reg_9128 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_2_reg_9133 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_2_reg_9138 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_2_reg_9143 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_2_reg_9148 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_2_reg_9153 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_2_reg_9158 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_2_reg_9163 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_2_reg_9168 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_2_reg_9173 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_load_3_reg_9178 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_1_sample_V_load_3_reg_9183 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_3_reg_9188 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_3_reg_9193 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_3_reg_9198 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_3_reg_9203 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_3_reg_9208 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_3_reg_9213 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_3_reg_9218 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_3_reg_9223 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_3_reg_9228 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_3_reg_9233 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_load_3_reg_9238 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_3_reg_9243 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_3_reg_9248 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_3_reg_9253 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_3_reg_9258 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_3_reg_9263 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_3_reg_9268 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_3_reg_9273 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_3_reg_9278 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_3_reg_9283 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_3_reg_9288 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_3_reg_9293 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_load_4_reg_9538 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sample_period_samples_1_sample_V_load_4_reg_9543 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_4_reg_9548 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_4_reg_9553 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_4_reg_9558 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_4_reg_9563 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_4_reg_9568 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_4_reg_9573 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_4_reg_9578 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_4_reg_9583 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_4_reg_9588 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_4_reg_9593 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_load_4_reg_9598 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_4_reg_9603 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_4_reg_9608 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_4_reg_9613 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_4_reg_9618 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_4_reg_9623 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_4_reg_9628 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_4_reg_9633 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_4_reg_9638 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_4_reg_9643 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_4_reg_9648 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_4_reg_9653 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_load_5_reg_9658 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_1_sample_V_load_5_reg_9663 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_5_reg_9668 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_5_reg_9673 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_5_reg_9678 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_5_reg_9683 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_5_reg_9688 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_5_reg_9693 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_5_reg_9698 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_5_reg_9703 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_5_reg_9708 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_5_reg_9713 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_load_5_reg_9718 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_5_reg_9723 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_5_reg_9728 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_5_reg_9733 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_5_reg_9738 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_5_reg_9743 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_5_reg_9748 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_5_reg_9753 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_5_reg_9758 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_5_reg_9763 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_5_reg_9768 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_5_reg_9773 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_load_6_reg_10018 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal sample_period_samples_1_sample_V_load_6_reg_10023 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_6_reg_10028 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_6_reg_10033 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_6_reg_10038 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_6_reg_10043 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_6_reg_10048 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_6_reg_10053 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_6_reg_10058 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_6_reg_10063 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_6_reg_10068 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_6_reg_10073 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_load_6_reg_10078 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_6_reg_10083 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_6_reg_10088 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_6_reg_10093 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_6_reg_10098 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_6_reg_10103 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_6_reg_10108 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_6_reg_10113 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_6_reg_10118 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_6_reg_10123 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_6_reg_10128 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_6_reg_10133 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_load_7_reg_10138 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_1_sample_V_load_7_reg_10143 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_2_sample_V_load_7_reg_10148 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_3_sample_V_load_7_reg_10153 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_4_sample_V_load_7_reg_10158 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_5_sample_V_load_7_reg_10163 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_6_sample_V_load_7_reg_10168 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_7_sample_V_load_7_reg_10173 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_8_sample_V_load_7_reg_10178 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_9_sample_V_load_7_reg_10183 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_10_sample_V_load_7_reg_10188 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_11_sample_V_load_7_reg_10193 : STD_LOGIC_VECTOR (11 downto 0);
    signal sample_period_samples_0_timestamp_V_load_7_reg_10198 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_1_timestamp_V_load_7_reg_10203 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_2_timestamp_V_load_7_reg_10208 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_3_timestamp_V_load_7_reg_10213 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_4_timestamp_V_load_7_reg_10218 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_5_timestamp_V_load_7_reg_10223 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_6_timestamp_V_load_7_reg_10228 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_7_timestamp_V_load_7_reg_10233 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_8_timestamp_V_load_7_reg_10238 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_9_timestamp_V_load_7_reg_10243 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_10_timestamp_V_load_7_reg_10248 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_11_timestamp_V_load_7_reg_10253 : STD_LOGIC_VECTOR (19 downto 0);
    signal sliding_window_size_load_reg_10258 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_fu_7633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_10264 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_7653_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal new_front_ptr_reg_10273 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln61_fu_7861_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln61_reg_10278 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln63_fu_7869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_10283 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal samples_0_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_0_sample_V_ce0 : STD_LOGIC;
    signal samples_0_sample_V_we0 : STD_LOGIC;
    signal samples_0_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_0_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_1_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_1_sample_V_ce0 : STD_LOGIC;
    signal samples_1_sample_V_we0 : STD_LOGIC;
    signal samples_1_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_1_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_2_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_2_sample_V_ce0 : STD_LOGIC;
    signal samples_2_sample_V_we0 : STD_LOGIC;
    signal samples_2_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_2_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_3_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_3_sample_V_ce0 : STD_LOGIC;
    signal samples_3_sample_V_we0 : STD_LOGIC;
    signal samples_3_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_3_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_4_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_4_sample_V_ce0 : STD_LOGIC;
    signal samples_4_sample_V_we0 : STD_LOGIC;
    signal samples_4_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_4_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_5_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_5_sample_V_ce0 : STD_LOGIC;
    signal samples_5_sample_V_we0 : STD_LOGIC;
    signal samples_5_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_5_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_6_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_6_sample_V_ce0 : STD_LOGIC;
    signal samples_6_sample_V_we0 : STD_LOGIC;
    signal samples_6_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_6_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_7_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_7_sample_V_ce0 : STD_LOGIC;
    signal samples_7_sample_V_we0 : STD_LOGIC;
    signal samples_7_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_7_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_8_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_8_sample_V_ce0 : STD_LOGIC;
    signal samples_8_sample_V_we0 : STD_LOGIC;
    signal samples_8_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_8_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_9_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_9_sample_V_ce0 : STD_LOGIC;
    signal samples_9_sample_V_we0 : STD_LOGIC;
    signal samples_9_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_9_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_10_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_10_sample_V_ce0 : STD_LOGIC;
    signal samples_10_sample_V_we0 : STD_LOGIC;
    signal samples_10_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_10_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_11_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_11_sample_V_ce0 : STD_LOGIC;
    signal samples_11_sample_V_we0 : STD_LOGIC;
    signal samples_11_sample_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_11_sample_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal samples_0_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_0_timestamp_V_ce0 : STD_LOGIC;
    signal samples_0_timestamp_V_we0 : STD_LOGIC;
    signal samples_0_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_0_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_1_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_1_timestamp_V_ce0 : STD_LOGIC;
    signal samples_1_timestamp_V_we0 : STD_LOGIC;
    signal samples_1_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_1_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_2_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_2_timestamp_V_ce0 : STD_LOGIC;
    signal samples_2_timestamp_V_we0 : STD_LOGIC;
    signal samples_2_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_2_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_3_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_3_timestamp_V_ce0 : STD_LOGIC;
    signal samples_3_timestamp_V_we0 : STD_LOGIC;
    signal samples_3_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_3_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_4_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_4_timestamp_V_ce0 : STD_LOGIC;
    signal samples_4_timestamp_V_we0 : STD_LOGIC;
    signal samples_4_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_4_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_5_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_5_timestamp_V_ce0 : STD_LOGIC;
    signal samples_5_timestamp_V_we0 : STD_LOGIC;
    signal samples_5_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_5_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_6_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_6_timestamp_V_ce0 : STD_LOGIC;
    signal samples_6_timestamp_V_we0 : STD_LOGIC;
    signal samples_6_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_6_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_7_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_7_timestamp_V_ce0 : STD_LOGIC;
    signal samples_7_timestamp_V_we0 : STD_LOGIC;
    signal samples_7_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_7_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_8_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_8_timestamp_V_ce0 : STD_LOGIC;
    signal samples_8_timestamp_V_we0 : STD_LOGIC;
    signal samples_8_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_8_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_9_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_9_timestamp_V_ce0 : STD_LOGIC;
    signal samples_9_timestamp_V_we0 : STD_LOGIC;
    signal samples_9_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_9_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_10_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_10_timestamp_V_ce0 : STD_LOGIC;
    signal samples_10_timestamp_V_we0 : STD_LOGIC;
    signal samples_10_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_10_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_11_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal samples_11_timestamp_V_ce0 : STD_LOGIC;
    signal samples_11_timestamp_V_we0 : STD_LOGIC;
    signal samples_11_timestamp_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal samples_11_timestamp_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sample_period_samples_0_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_0_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_0_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_0_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_0_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_1_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_1_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_1_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_1_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_1_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_2_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_2_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_2_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_2_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_2_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_3_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_3_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_3_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_3_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_3_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_4_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_4_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_4_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_4_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_4_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_5_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_5_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_5_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_5_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_5_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_6_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_6_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_6_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_6_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_6_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_7_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_7_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_7_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_7_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_7_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_8_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_8_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_8_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_8_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_8_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_9_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_9_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_9_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_9_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_9_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_10_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_10_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_10_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_10_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_10_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_11_sample_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_11_sample_V_ce0 : STD_LOGIC;
    signal sample_period_samples_11_sample_V_we0 : STD_LOGIC;
    signal sample_period_samples_11_sample_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_11_sample_V_ce1 : STD_LOGIC;
    signal sample_period_samples_0_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_0_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_0_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_0_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_0_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_1_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_1_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_1_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_1_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_1_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_2_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_2_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_2_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_2_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_2_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_3_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_3_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_3_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_3_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_3_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_4_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_4_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_4_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_4_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_4_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_5_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_5_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_5_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_5_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_5_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_6_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_6_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_6_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_6_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_6_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_7_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_7_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_7_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_7_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_7_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_8_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_8_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_8_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_8_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_8_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_9_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_9_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_9_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_9_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_9_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_10_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_10_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_10_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_10_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_10_timestamp_V_ce1 : STD_LOGIC;
    signal sample_period_samples_11_timestamp_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_11_timestamp_V_ce0 : STD_LOGIC;
    signal sample_period_samples_11_timestamp_V_we0 : STD_LOGIC;
    signal sample_period_samples_11_timestamp_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sample_period_samples_11_timestamp_V_ce1 : STD_LOGIC;
    signal ap_phi_mux_i_phi_fu_7318_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_1_reg_7326 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln87_fu_7353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_cast_fu_7369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln54_fu_7659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_7912_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal add_ln71_fu_7898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln69_fu_7893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_7881_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln87_fu_7349_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln52_fu_7643_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln52_fu_7643_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_7653_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_7653_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln54_fu_7659_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_7881_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln75_fu_7909_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_7653_ap_start : STD_LOGIC;
    signal grp_fu_7653_ap_done : STD_LOGIC;
    signal grp_fu_7881_ap_start : STD_LOGIC;
    signal grp_fu_7881_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component LLSSineReconstruction_srem_7ns_6ns_6_11_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component LLSSineReconstruction_srem_6ns_6ns_6_10_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (19 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (19 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    samples_0_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_0_sample_V_address0,
        ce0 => samples_0_sample_V_ce0,
        we0 => samples_0_sample_V_we0,
        d0 => samples_0_sample_V_d0,
        q0 => samples_0_sample_V_q0);

    samples_1_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_1_sample_V_address0,
        ce0 => samples_1_sample_V_ce0,
        we0 => samples_1_sample_V_we0,
        d0 => samples_1_sample_V_d0,
        q0 => samples_1_sample_V_q0);

    samples_2_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_2_sample_V_address0,
        ce0 => samples_2_sample_V_ce0,
        we0 => samples_2_sample_V_we0,
        d0 => samples_2_sample_V_d0,
        q0 => samples_2_sample_V_q0);

    samples_3_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_3_sample_V_address0,
        ce0 => samples_3_sample_V_ce0,
        we0 => samples_3_sample_V_we0,
        d0 => samples_3_sample_V_d0,
        q0 => samples_3_sample_V_q0);

    samples_4_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_4_sample_V_address0,
        ce0 => samples_4_sample_V_ce0,
        we0 => samples_4_sample_V_we0,
        d0 => samples_4_sample_V_d0,
        q0 => samples_4_sample_V_q0);

    samples_5_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_5_sample_V_address0,
        ce0 => samples_5_sample_V_ce0,
        we0 => samples_5_sample_V_we0,
        d0 => samples_5_sample_V_d0,
        q0 => samples_5_sample_V_q0);

    samples_6_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_6_sample_V_address0,
        ce0 => samples_6_sample_V_ce0,
        we0 => samples_6_sample_V_we0,
        d0 => samples_6_sample_V_d0,
        q0 => samples_6_sample_V_q0);

    samples_7_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_7_sample_V_address0,
        ce0 => samples_7_sample_V_ce0,
        we0 => samples_7_sample_V_we0,
        d0 => samples_7_sample_V_d0,
        q0 => samples_7_sample_V_q0);

    samples_8_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_8_sample_V_address0,
        ce0 => samples_8_sample_V_ce0,
        we0 => samples_8_sample_V_we0,
        d0 => samples_8_sample_V_d0,
        q0 => samples_8_sample_V_q0);

    samples_9_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_9_sample_V_address0,
        ce0 => samples_9_sample_V_ce0,
        we0 => samples_9_sample_V_we0,
        d0 => samples_9_sample_V_d0,
        q0 => samples_9_sample_V_q0);

    samples_10_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_10_sample_V_address0,
        ce0 => samples_10_sample_V_ce0,
        we0 => samples_10_sample_V_we0,
        d0 => samples_10_sample_V_d0,
        q0 => samples_10_sample_V_q0);

    samples_11_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_11_sample_V_address0,
        ce0 => samples_11_sample_V_ce0,
        we0 => samples_11_sample_V_we0,
        d0 => samples_11_sample_V_d0,
        q0 => samples_11_sample_V_q0);

    samples_0_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_0_timestamp_V_address0,
        ce0 => samples_0_timestamp_V_ce0,
        we0 => samples_0_timestamp_V_we0,
        d0 => samples_0_timestamp_V_d0,
        q0 => samples_0_timestamp_V_q0);

    samples_1_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_1_timestamp_V_address0,
        ce0 => samples_1_timestamp_V_ce0,
        we0 => samples_1_timestamp_V_we0,
        d0 => samples_1_timestamp_V_d0,
        q0 => samples_1_timestamp_V_q0);

    samples_2_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_2_timestamp_V_address0,
        ce0 => samples_2_timestamp_V_ce0,
        we0 => samples_2_timestamp_V_we0,
        d0 => samples_2_timestamp_V_d0,
        q0 => samples_2_timestamp_V_q0);

    samples_3_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_3_timestamp_V_address0,
        ce0 => samples_3_timestamp_V_ce0,
        we0 => samples_3_timestamp_V_we0,
        d0 => samples_3_timestamp_V_d0,
        q0 => samples_3_timestamp_V_q0);

    samples_4_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_4_timestamp_V_address0,
        ce0 => samples_4_timestamp_V_ce0,
        we0 => samples_4_timestamp_V_we0,
        d0 => samples_4_timestamp_V_d0,
        q0 => samples_4_timestamp_V_q0);

    samples_5_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_5_timestamp_V_address0,
        ce0 => samples_5_timestamp_V_ce0,
        we0 => samples_5_timestamp_V_we0,
        d0 => samples_5_timestamp_V_d0,
        q0 => samples_5_timestamp_V_q0);

    samples_6_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_6_timestamp_V_address0,
        ce0 => samples_6_timestamp_V_ce0,
        we0 => samples_6_timestamp_V_we0,
        d0 => samples_6_timestamp_V_d0,
        q0 => samples_6_timestamp_V_q0);

    samples_7_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_7_timestamp_V_address0,
        ce0 => samples_7_timestamp_V_ce0,
        we0 => samples_7_timestamp_V_we0,
        d0 => samples_7_timestamp_V_d0,
        q0 => samples_7_timestamp_V_q0);

    samples_8_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_8_timestamp_V_address0,
        ce0 => samples_8_timestamp_V_ce0,
        we0 => samples_8_timestamp_V_we0,
        d0 => samples_8_timestamp_V_d0,
        q0 => samples_8_timestamp_V_q0);

    samples_9_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_9_timestamp_V_address0,
        ce0 => samples_9_timestamp_V_ce0,
        we0 => samples_9_timestamp_V_we0,
        d0 => samples_9_timestamp_V_d0,
        q0 => samples_9_timestamp_V_q0);

    samples_10_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_10_timestamp_V_address0,
        ce0 => samples_10_timestamp_V_ce0,
        we0 => samples_10_timestamp_V_we0,
        d0 => samples_10_timestamp_V_d0,
        q0 => samples_10_timestamp_V_q0);

    samples_11_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => samples_11_timestamp_V_address0,
        ce0 => samples_11_timestamp_V_ce0,
        we0 => samples_11_timestamp_V_we0,
        d0 => samples_11_timestamp_V_d0,
        q0 => samples_11_timestamp_V_q0);

    sample_period_samples_0_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_0_sample_V_address0,
        ce0 => sample_period_samples_0_sample_V_ce0,
        we0 => sample_period_samples_0_sample_V_we0,
        d0 => samples_0_sample_V_q0,
        q0 => sample_period_samples_0_sample_V_q0,
        address1 => sample_period_samples_0_sample_V_address1,
        ce1 => sample_period_samples_0_sample_V_ce1,
        q1 => sample_period_samples_0_sample_V_q1);

    sample_period_samples_1_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_1_sample_V_address0,
        ce0 => sample_period_samples_1_sample_V_ce0,
        we0 => sample_period_samples_1_sample_V_we0,
        d0 => samples_1_sample_V_q0,
        q0 => sample_period_samples_1_sample_V_q0,
        address1 => sample_period_samples_1_sample_V_address1,
        ce1 => sample_period_samples_1_sample_V_ce1,
        q1 => sample_period_samples_1_sample_V_q1);

    sample_period_samples_2_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_2_sample_V_address0,
        ce0 => sample_period_samples_2_sample_V_ce0,
        we0 => sample_period_samples_2_sample_V_we0,
        d0 => samples_2_sample_V_q0,
        q0 => sample_period_samples_2_sample_V_q0,
        address1 => sample_period_samples_2_sample_V_address1,
        ce1 => sample_period_samples_2_sample_V_ce1,
        q1 => sample_period_samples_2_sample_V_q1);

    sample_period_samples_3_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_3_sample_V_address0,
        ce0 => sample_period_samples_3_sample_V_ce0,
        we0 => sample_period_samples_3_sample_V_we0,
        d0 => samples_3_sample_V_q0,
        q0 => sample_period_samples_3_sample_V_q0,
        address1 => sample_period_samples_3_sample_V_address1,
        ce1 => sample_period_samples_3_sample_V_ce1,
        q1 => sample_period_samples_3_sample_V_q1);

    sample_period_samples_4_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_4_sample_V_address0,
        ce0 => sample_period_samples_4_sample_V_ce0,
        we0 => sample_period_samples_4_sample_V_we0,
        d0 => samples_4_sample_V_q0,
        q0 => sample_period_samples_4_sample_V_q0,
        address1 => sample_period_samples_4_sample_V_address1,
        ce1 => sample_period_samples_4_sample_V_ce1,
        q1 => sample_period_samples_4_sample_V_q1);

    sample_period_samples_5_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_5_sample_V_address0,
        ce0 => sample_period_samples_5_sample_V_ce0,
        we0 => sample_period_samples_5_sample_V_we0,
        d0 => samples_5_sample_V_q0,
        q0 => sample_period_samples_5_sample_V_q0,
        address1 => sample_period_samples_5_sample_V_address1,
        ce1 => sample_period_samples_5_sample_V_ce1,
        q1 => sample_period_samples_5_sample_V_q1);

    sample_period_samples_6_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_6_sample_V_address0,
        ce0 => sample_period_samples_6_sample_V_ce0,
        we0 => sample_period_samples_6_sample_V_we0,
        d0 => samples_6_sample_V_q0,
        q0 => sample_period_samples_6_sample_V_q0,
        address1 => sample_period_samples_6_sample_V_address1,
        ce1 => sample_period_samples_6_sample_V_ce1,
        q1 => sample_period_samples_6_sample_V_q1);

    sample_period_samples_7_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_7_sample_V_address0,
        ce0 => sample_period_samples_7_sample_V_ce0,
        we0 => sample_period_samples_7_sample_V_we0,
        d0 => samples_7_sample_V_q0,
        q0 => sample_period_samples_7_sample_V_q0,
        address1 => sample_period_samples_7_sample_V_address1,
        ce1 => sample_period_samples_7_sample_V_ce1,
        q1 => sample_period_samples_7_sample_V_q1);

    sample_period_samples_8_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_8_sample_V_address0,
        ce0 => sample_period_samples_8_sample_V_ce0,
        we0 => sample_period_samples_8_sample_V_we0,
        d0 => samples_8_sample_V_q0,
        q0 => sample_period_samples_8_sample_V_q0,
        address1 => sample_period_samples_8_sample_V_address1,
        ce1 => sample_period_samples_8_sample_V_ce1,
        q1 => sample_period_samples_8_sample_V_q1);

    sample_period_samples_9_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_9_sample_V_address0,
        ce0 => sample_period_samples_9_sample_V_ce0,
        we0 => sample_period_samples_9_sample_V_we0,
        d0 => samples_9_sample_V_q0,
        q0 => sample_period_samples_9_sample_V_q0,
        address1 => sample_period_samples_9_sample_V_address1,
        ce1 => sample_period_samples_9_sample_V_ce1,
        q1 => sample_period_samples_9_sample_V_q1);

    sample_period_samples_10_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_10_sample_V_address0,
        ce0 => sample_period_samples_10_sample_V_ce0,
        we0 => sample_period_samples_10_sample_V_we0,
        d0 => samples_10_sample_V_q0,
        q0 => sample_period_samples_10_sample_V_q0,
        address1 => sample_period_samples_10_sample_V_address1,
        ce1 => sample_period_samples_10_sample_V_ce1,
        q1 => sample_period_samples_10_sample_V_q1);

    sample_period_samples_11_sample_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_11_sample_V_address0,
        ce0 => sample_period_samples_11_sample_V_ce0,
        we0 => sample_period_samples_11_sample_V_we0,
        d0 => samples_11_sample_V_q0,
        q0 => sample_period_samples_11_sample_V_q0,
        address1 => sample_period_samples_11_sample_V_address1,
        ce1 => sample_period_samples_11_sample_V_ce1,
        q1 => sample_period_samples_11_sample_V_q1);

    sample_period_samples_0_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_0_timestamp_V_address0,
        ce0 => sample_period_samples_0_timestamp_V_ce0,
        we0 => sample_period_samples_0_timestamp_V_we0,
        d0 => samples_0_timestamp_V_q0,
        q0 => sample_period_samples_0_timestamp_V_q0,
        address1 => sample_period_samples_0_timestamp_V_address1,
        ce1 => sample_period_samples_0_timestamp_V_ce1,
        q1 => sample_period_samples_0_timestamp_V_q1);

    sample_period_samples_1_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_1_timestamp_V_address0,
        ce0 => sample_period_samples_1_timestamp_V_ce0,
        we0 => sample_period_samples_1_timestamp_V_we0,
        d0 => samples_1_timestamp_V_q0,
        q0 => sample_period_samples_1_timestamp_V_q0,
        address1 => sample_period_samples_1_timestamp_V_address1,
        ce1 => sample_period_samples_1_timestamp_V_ce1,
        q1 => sample_period_samples_1_timestamp_V_q1);

    sample_period_samples_2_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_2_timestamp_V_address0,
        ce0 => sample_period_samples_2_timestamp_V_ce0,
        we0 => sample_period_samples_2_timestamp_V_we0,
        d0 => samples_2_timestamp_V_q0,
        q0 => sample_period_samples_2_timestamp_V_q0,
        address1 => sample_period_samples_2_timestamp_V_address1,
        ce1 => sample_period_samples_2_timestamp_V_ce1,
        q1 => sample_period_samples_2_timestamp_V_q1);

    sample_period_samples_3_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_3_timestamp_V_address0,
        ce0 => sample_period_samples_3_timestamp_V_ce0,
        we0 => sample_period_samples_3_timestamp_V_we0,
        d0 => samples_3_timestamp_V_q0,
        q0 => sample_period_samples_3_timestamp_V_q0,
        address1 => sample_period_samples_3_timestamp_V_address1,
        ce1 => sample_period_samples_3_timestamp_V_ce1,
        q1 => sample_period_samples_3_timestamp_V_q1);

    sample_period_samples_4_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_4_timestamp_V_address0,
        ce0 => sample_period_samples_4_timestamp_V_ce0,
        we0 => sample_period_samples_4_timestamp_V_we0,
        d0 => samples_4_timestamp_V_q0,
        q0 => sample_period_samples_4_timestamp_V_q0,
        address1 => sample_period_samples_4_timestamp_V_address1,
        ce1 => sample_period_samples_4_timestamp_V_ce1,
        q1 => sample_period_samples_4_timestamp_V_q1);

    sample_period_samples_5_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_5_timestamp_V_address0,
        ce0 => sample_period_samples_5_timestamp_V_ce0,
        we0 => sample_period_samples_5_timestamp_V_we0,
        d0 => samples_5_timestamp_V_q0,
        q0 => sample_period_samples_5_timestamp_V_q0,
        address1 => sample_period_samples_5_timestamp_V_address1,
        ce1 => sample_period_samples_5_timestamp_V_ce1,
        q1 => sample_period_samples_5_timestamp_V_q1);

    sample_period_samples_6_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_6_timestamp_V_address0,
        ce0 => sample_period_samples_6_timestamp_V_ce0,
        we0 => sample_period_samples_6_timestamp_V_we0,
        d0 => samples_6_timestamp_V_q0,
        q0 => sample_period_samples_6_timestamp_V_q0,
        address1 => sample_period_samples_6_timestamp_V_address1,
        ce1 => sample_period_samples_6_timestamp_V_ce1,
        q1 => sample_period_samples_6_timestamp_V_q1);

    sample_period_samples_7_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_7_timestamp_V_address0,
        ce0 => sample_period_samples_7_timestamp_V_ce0,
        we0 => sample_period_samples_7_timestamp_V_we0,
        d0 => samples_7_timestamp_V_q0,
        q0 => sample_period_samples_7_timestamp_V_q0,
        address1 => sample_period_samples_7_timestamp_V_address1,
        ce1 => sample_period_samples_7_timestamp_V_ce1,
        q1 => sample_period_samples_7_timestamp_V_q1);

    sample_period_samples_8_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_8_timestamp_V_address0,
        ce0 => sample_period_samples_8_timestamp_V_ce0,
        we0 => sample_period_samples_8_timestamp_V_we0,
        d0 => samples_8_timestamp_V_q0,
        q0 => sample_period_samples_8_timestamp_V_q0,
        address1 => sample_period_samples_8_timestamp_V_address1,
        ce1 => sample_period_samples_8_timestamp_V_ce1,
        q1 => sample_period_samples_8_timestamp_V_q1);

    sample_period_samples_9_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_9_timestamp_V_address0,
        ce0 => sample_period_samples_9_timestamp_V_ce0,
        we0 => sample_period_samples_9_timestamp_V_we0,
        d0 => samples_9_timestamp_V_q0,
        q0 => sample_period_samples_9_timestamp_V_q0,
        address1 => sample_period_samples_9_timestamp_V_address1,
        ce1 => sample_period_samples_9_timestamp_V_ce1,
        q1 => sample_period_samples_9_timestamp_V_q1);

    sample_period_samples_10_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_10_timestamp_V_address0,
        ce0 => sample_period_samples_10_timestamp_V_ce0,
        we0 => sample_period_samples_10_timestamp_V_we0,
        d0 => samples_10_timestamp_V_q0,
        q0 => sample_period_samples_10_timestamp_V_q0,
        address1 => sample_period_samples_10_timestamp_V_address1,
        ce1 => sample_period_samples_10_timestamp_V_ce1,
        q1 => sample_period_samples_10_timestamp_V_q1);

    sample_period_samples_11_timestamp_V_U : component LLSSineReconstruction_loadSlidingWindow_sample_period_samples_0_timestamp_V
    generic map (
        DataWidth => 20,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sample_period_samples_11_timestamp_V_address0,
        ce0 => sample_period_samples_11_timestamp_V_ce0,
        we0 => sample_period_samples_11_timestamp_V_we0,
        d0 => samples_11_timestamp_V_q0,
        q0 => sample_period_samples_11_timestamp_V_q0,
        address1 => sample_period_samples_11_timestamp_V_address1,
        ce1 => sample_period_samples_11_timestamp_V_ce1,
        q1 => sample_period_samples_11_timestamp_V_q1);

    srem_7ns_6ns_6_11_seq_1_U1 : component LLSSineReconstruction_srem_7ns_6ns_6_11_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 6,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_7653_ap_start,
        done => grp_fu_7653_ap_done,
        din0 => grp_fu_7653_p0,
        din1 => grp_fu_7653_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_7653_p2);

    srem_6ns_6ns_6_10_seq_1_U2 : component LLSSineReconstruction_srem_6ns_6ns_6_10_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_7881_ap_start,
        done => grp_fu_7881_ap_done,
        din0 => grp_fu_7881_p0,
        din1 => ap_const_lv6_14,
        ce => ap_const_logic_1,
        dout => grp_fu_7881_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_7326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_1_reg_7326 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_1_reg_7326 <= add_ln19_reg_8182;
            end if; 
        end if;
    end process;

    i_reg_7314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_7314 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_7314 <= add_ln84_reg_8113;
            end if; 
        end if;
    end process;

    sliding_window_size_s_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                sliding_window_size_s <= ap_const_lv32_1;
            elsif (((icmp_ln69_fu_7893_p2 = ap_const_lv1_1) and (icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                sliding_window_size_s <= add_ln71_fu_7898_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln19_reg_8182 <= add_ln19_fu_7589_p2;
                    zext_ln19_reg_8187(3 downto 0) <= zext_ln19_fu_7595_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln84_reg_8113 <= add_ln84_fu_7337_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln52_reg_10264 <= icmp_ln52_fu_7633_p2;
                sample_period_samples_0_sample_V_load_6_reg_10018 <= sample_period_samples_0_sample_V_q0;
                sample_period_samples_0_sample_V_load_7_reg_10138 <= sample_period_samples_0_sample_V_q1;
                sample_period_samples_0_timestamp_V_load_6_reg_10078 <= sample_period_samples_0_timestamp_V_q0;
                sample_period_samples_0_timestamp_V_load_7_reg_10198 <= sample_period_samples_0_timestamp_V_q1;
                sample_period_samples_10_sample_V_load_6_reg_10068 <= sample_period_samples_10_sample_V_q0;
                sample_period_samples_10_sample_V_load_7_reg_10188 <= sample_period_samples_10_sample_V_q1;
                sample_period_samples_10_timestamp_V_load_6_reg_10128 <= sample_period_samples_10_timestamp_V_q0;
                sample_period_samples_10_timestamp_V_load_7_reg_10248 <= sample_period_samples_10_timestamp_V_q1;
                sample_period_samples_11_sample_V_load_6_reg_10073 <= sample_period_samples_11_sample_V_q0;
                sample_period_samples_11_sample_V_load_7_reg_10193 <= sample_period_samples_11_sample_V_q1;
                sample_period_samples_11_timestamp_V_load_6_reg_10133 <= sample_period_samples_11_timestamp_V_q0;
                sample_period_samples_11_timestamp_V_load_7_reg_10253 <= sample_period_samples_11_timestamp_V_q1;
                sample_period_samples_1_sample_V_load_6_reg_10023 <= sample_period_samples_1_sample_V_q0;
                sample_period_samples_1_sample_V_load_7_reg_10143 <= sample_period_samples_1_sample_V_q1;
                sample_period_samples_1_timestamp_V_load_6_reg_10083 <= sample_period_samples_1_timestamp_V_q0;
                sample_period_samples_1_timestamp_V_load_7_reg_10203 <= sample_period_samples_1_timestamp_V_q1;
                sample_period_samples_2_sample_V_load_6_reg_10028 <= sample_period_samples_2_sample_V_q0;
                sample_period_samples_2_sample_V_load_7_reg_10148 <= sample_period_samples_2_sample_V_q1;
                sample_period_samples_2_timestamp_V_load_6_reg_10088 <= sample_period_samples_2_timestamp_V_q0;
                sample_period_samples_2_timestamp_V_load_7_reg_10208 <= sample_period_samples_2_timestamp_V_q1;
                sample_period_samples_3_sample_V_load_6_reg_10033 <= sample_period_samples_3_sample_V_q0;
                sample_period_samples_3_sample_V_load_7_reg_10153 <= sample_period_samples_3_sample_V_q1;
                sample_period_samples_3_timestamp_V_load_6_reg_10093 <= sample_period_samples_3_timestamp_V_q0;
                sample_period_samples_3_timestamp_V_load_7_reg_10213 <= sample_period_samples_3_timestamp_V_q1;
                sample_period_samples_4_sample_V_load_6_reg_10038 <= sample_period_samples_4_sample_V_q0;
                sample_period_samples_4_sample_V_load_7_reg_10158 <= sample_period_samples_4_sample_V_q1;
                sample_period_samples_4_timestamp_V_load_6_reg_10098 <= sample_period_samples_4_timestamp_V_q0;
                sample_period_samples_4_timestamp_V_load_7_reg_10218 <= sample_period_samples_4_timestamp_V_q1;
                sample_period_samples_5_sample_V_load_6_reg_10043 <= sample_period_samples_5_sample_V_q0;
                sample_period_samples_5_sample_V_load_7_reg_10163 <= sample_period_samples_5_sample_V_q1;
                sample_period_samples_5_timestamp_V_load_6_reg_10103 <= sample_period_samples_5_timestamp_V_q0;
                sample_period_samples_5_timestamp_V_load_7_reg_10223 <= sample_period_samples_5_timestamp_V_q1;
                sample_period_samples_6_sample_V_load_6_reg_10048 <= sample_period_samples_6_sample_V_q0;
                sample_period_samples_6_sample_V_load_7_reg_10168 <= sample_period_samples_6_sample_V_q1;
                sample_period_samples_6_timestamp_V_load_6_reg_10108 <= sample_period_samples_6_timestamp_V_q0;
                sample_period_samples_6_timestamp_V_load_7_reg_10228 <= sample_period_samples_6_timestamp_V_q1;
                sample_period_samples_7_sample_V_load_6_reg_10053 <= sample_period_samples_7_sample_V_q0;
                sample_period_samples_7_sample_V_load_7_reg_10173 <= sample_period_samples_7_sample_V_q1;
                sample_period_samples_7_timestamp_V_load_6_reg_10113 <= sample_period_samples_7_timestamp_V_q0;
                sample_period_samples_7_timestamp_V_load_7_reg_10233 <= sample_period_samples_7_timestamp_V_q1;
                sample_period_samples_8_sample_V_load_6_reg_10058 <= sample_period_samples_8_sample_V_q0;
                sample_period_samples_8_sample_V_load_7_reg_10178 <= sample_period_samples_8_sample_V_q1;
                sample_period_samples_8_timestamp_V_load_6_reg_10118 <= sample_period_samples_8_timestamp_V_q0;
                sample_period_samples_8_timestamp_V_load_7_reg_10238 <= sample_period_samples_8_timestamp_V_q1;
                sample_period_samples_9_sample_V_load_6_reg_10063 <= sample_period_samples_9_sample_V_q0;
                sample_period_samples_9_sample_V_load_7_reg_10183 <= sample_period_samples_9_sample_V_q1;
                sample_period_samples_9_timestamp_V_load_6_reg_10123 <= sample_period_samples_9_timestamp_V_q0;
                sample_period_samples_9_timestamp_V_load_7_reg_10243 <= sample_period_samples_9_timestamp_V_q1;
                sliding_window_size_load_reg_10258 <= sliding_window_size_s;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                icmp_ln63_reg_10283 <= icmp_ln63_fu_7869_p2;
                new_front_ptr_reg_10273 <= grp_fu_7653_p2;
                trunc_ln61_reg_10278 <= trunc_ln61_fu_7861_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln84_reg_8118 <= icmp_ln84_fu_7343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                sample_period_samples_0_sample_V_load_1_reg_8698 <= sample_period_samples_0_sample_V_q0;
                sample_period_samples_0_sample_V_load_reg_8578 <= sample_period_samples_0_sample_V_q1;
                sample_period_samples_0_timestamp_V_load_1_reg_8758 <= sample_period_samples_0_timestamp_V_q0;
                sample_period_samples_0_timestamp_V_load_reg_8638 <= sample_period_samples_0_timestamp_V_q1;
                sample_period_samples_10_sample_V_load_1_reg_8748 <= sample_period_samples_10_sample_V_q0;
                sample_period_samples_10_sample_V_load_reg_8628 <= sample_period_samples_10_sample_V_q1;
                sample_period_samples_10_timestamp_V_load_1_reg_8808 <= sample_period_samples_10_timestamp_V_q0;
                sample_period_samples_10_timestamp_V_load_reg_8688 <= sample_period_samples_10_timestamp_V_q1;
                sample_period_samples_11_sample_V_load_1_reg_8753 <= sample_period_samples_11_sample_V_q0;
                sample_period_samples_11_sample_V_load_reg_8633 <= sample_period_samples_11_sample_V_q1;
                sample_period_samples_11_timestamp_V_load_1_reg_8813 <= sample_period_samples_11_timestamp_V_q0;
                sample_period_samples_11_timestamp_V_load_reg_8693 <= sample_period_samples_11_timestamp_V_q1;
                sample_period_samples_1_sample_V_load_1_reg_8703 <= sample_period_samples_1_sample_V_q0;
                sample_period_samples_1_sample_V_load_reg_8583 <= sample_period_samples_1_sample_V_q1;
                sample_period_samples_1_timestamp_V_load_1_reg_8763 <= sample_period_samples_1_timestamp_V_q0;
                sample_period_samples_1_timestamp_V_load_reg_8643 <= sample_period_samples_1_timestamp_V_q1;
                sample_period_samples_2_sample_V_load_1_reg_8708 <= sample_period_samples_2_sample_V_q0;
                sample_period_samples_2_sample_V_load_reg_8588 <= sample_period_samples_2_sample_V_q1;
                sample_period_samples_2_timestamp_V_load_1_reg_8768 <= sample_period_samples_2_timestamp_V_q0;
                sample_period_samples_2_timestamp_V_load_reg_8648 <= sample_period_samples_2_timestamp_V_q1;
                sample_period_samples_3_sample_V_load_1_reg_8713 <= sample_period_samples_3_sample_V_q0;
                sample_period_samples_3_sample_V_load_reg_8593 <= sample_period_samples_3_sample_V_q1;
                sample_period_samples_3_timestamp_V_load_1_reg_8773 <= sample_period_samples_3_timestamp_V_q0;
                sample_period_samples_3_timestamp_V_load_reg_8653 <= sample_period_samples_3_timestamp_V_q1;
                sample_period_samples_4_sample_V_load_1_reg_8718 <= sample_period_samples_4_sample_V_q0;
                sample_period_samples_4_sample_V_load_reg_8598 <= sample_period_samples_4_sample_V_q1;
                sample_period_samples_4_timestamp_V_load_1_reg_8778 <= sample_period_samples_4_timestamp_V_q0;
                sample_period_samples_4_timestamp_V_load_reg_8658 <= sample_period_samples_4_timestamp_V_q1;
                sample_period_samples_5_sample_V_load_1_reg_8723 <= sample_period_samples_5_sample_V_q0;
                sample_period_samples_5_sample_V_load_reg_8603 <= sample_period_samples_5_sample_V_q1;
                sample_period_samples_5_timestamp_V_load_1_reg_8783 <= sample_period_samples_5_timestamp_V_q0;
                sample_period_samples_5_timestamp_V_load_reg_8663 <= sample_period_samples_5_timestamp_V_q1;
                sample_period_samples_6_sample_V_load_1_reg_8728 <= sample_period_samples_6_sample_V_q0;
                sample_period_samples_6_sample_V_load_reg_8608 <= sample_period_samples_6_sample_V_q1;
                sample_period_samples_6_timestamp_V_load_1_reg_8788 <= sample_period_samples_6_timestamp_V_q0;
                sample_period_samples_6_timestamp_V_load_reg_8668 <= sample_period_samples_6_timestamp_V_q1;
                sample_period_samples_7_sample_V_load_1_reg_8733 <= sample_period_samples_7_sample_V_q0;
                sample_period_samples_7_sample_V_load_reg_8613 <= sample_period_samples_7_sample_V_q1;
                sample_period_samples_7_timestamp_V_load_1_reg_8793 <= sample_period_samples_7_timestamp_V_q0;
                sample_period_samples_7_timestamp_V_load_reg_8673 <= sample_period_samples_7_timestamp_V_q1;
                sample_period_samples_8_sample_V_load_1_reg_8738 <= sample_period_samples_8_sample_V_q0;
                sample_period_samples_8_sample_V_load_reg_8618 <= sample_period_samples_8_sample_V_q1;
                sample_period_samples_8_timestamp_V_load_1_reg_8798 <= sample_period_samples_8_timestamp_V_q0;
                sample_period_samples_8_timestamp_V_load_reg_8678 <= sample_period_samples_8_timestamp_V_q1;
                sample_period_samples_9_sample_V_load_1_reg_8743 <= sample_period_samples_9_sample_V_q0;
                sample_period_samples_9_sample_V_load_reg_8623 <= sample_period_samples_9_sample_V_q1;
                sample_period_samples_9_timestamp_V_load_1_reg_8803 <= sample_period_samples_9_timestamp_V_q0;
                sample_period_samples_9_timestamp_V_load_reg_8683 <= sample_period_samples_9_timestamp_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                sample_period_samples_0_sample_V_load_2_reg_9058 <= sample_period_samples_0_sample_V_q0;
                sample_period_samples_0_sample_V_load_3_reg_9178 <= sample_period_samples_0_sample_V_q1;
                sample_period_samples_0_timestamp_V_load_2_reg_9118 <= sample_period_samples_0_timestamp_V_q0;
                sample_period_samples_0_timestamp_V_load_3_reg_9238 <= sample_period_samples_0_timestamp_V_q1;
                sample_period_samples_10_sample_V_load_2_reg_9108 <= sample_period_samples_10_sample_V_q0;
                sample_period_samples_10_sample_V_load_3_reg_9228 <= sample_period_samples_10_sample_V_q1;
                sample_period_samples_10_timestamp_V_load_2_reg_9168 <= sample_period_samples_10_timestamp_V_q0;
                sample_period_samples_10_timestamp_V_load_3_reg_9288 <= sample_period_samples_10_timestamp_V_q1;
                sample_period_samples_11_sample_V_load_2_reg_9113 <= sample_period_samples_11_sample_V_q0;
                sample_period_samples_11_sample_V_load_3_reg_9233 <= sample_period_samples_11_sample_V_q1;
                sample_period_samples_11_timestamp_V_load_2_reg_9173 <= sample_period_samples_11_timestamp_V_q0;
                sample_period_samples_11_timestamp_V_load_3_reg_9293 <= sample_period_samples_11_timestamp_V_q1;
                sample_period_samples_1_sample_V_load_2_reg_9063 <= sample_period_samples_1_sample_V_q0;
                sample_period_samples_1_sample_V_load_3_reg_9183 <= sample_period_samples_1_sample_V_q1;
                sample_period_samples_1_timestamp_V_load_2_reg_9123 <= sample_period_samples_1_timestamp_V_q0;
                sample_period_samples_1_timestamp_V_load_3_reg_9243 <= sample_period_samples_1_timestamp_V_q1;
                sample_period_samples_2_sample_V_load_2_reg_9068 <= sample_period_samples_2_sample_V_q0;
                sample_period_samples_2_sample_V_load_3_reg_9188 <= sample_period_samples_2_sample_V_q1;
                sample_period_samples_2_timestamp_V_load_2_reg_9128 <= sample_period_samples_2_timestamp_V_q0;
                sample_period_samples_2_timestamp_V_load_3_reg_9248 <= sample_period_samples_2_timestamp_V_q1;
                sample_period_samples_3_sample_V_load_2_reg_9073 <= sample_period_samples_3_sample_V_q0;
                sample_period_samples_3_sample_V_load_3_reg_9193 <= sample_period_samples_3_sample_V_q1;
                sample_period_samples_3_timestamp_V_load_2_reg_9133 <= sample_period_samples_3_timestamp_V_q0;
                sample_period_samples_3_timestamp_V_load_3_reg_9253 <= sample_period_samples_3_timestamp_V_q1;
                sample_period_samples_4_sample_V_load_2_reg_9078 <= sample_period_samples_4_sample_V_q0;
                sample_period_samples_4_sample_V_load_3_reg_9198 <= sample_period_samples_4_sample_V_q1;
                sample_period_samples_4_timestamp_V_load_2_reg_9138 <= sample_period_samples_4_timestamp_V_q0;
                sample_period_samples_4_timestamp_V_load_3_reg_9258 <= sample_period_samples_4_timestamp_V_q1;
                sample_period_samples_5_sample_V_load_2_reg_9083 <= sample_period_samples_5_sample_V_q0;
                sample_period_samples_5_sample_V_load_3_reg_9203 <= sample_period_samples_5_sample_V_q1;
                sample_period_samples_5_timestamp_V_load_2_reg_9143 <= sample_period_samples_5_timestamp_V_q0;
                sample_period_samples_5_timestamp_V_load_3_reg_9263 <= sample_period_samples_5_timestamp_V_q1;
                sample_period_samples_6_sample_V_load_2_reg_9088 <= sample_period_samples_6_sample_V_q0;
                sample_period_samples_6_sample_V_load_3_reg_9208 <= sample_period_samples_6_sample_V_q1;
                sample_period_samples_6_timestamp_V_load_2_reg_9148 <= sample_period_samples_6_timestamp_V_q0;
                sample_period_samples_6_timestamp_V_load_3_reg_9268 <= sample_period_samples_6_timestamp_V_q1;
                sample_period_samples_7_sample_V_load_2_reg_9093 <= sample_period_samples_7_sample_V_q0;
                sample_period_samples_7_sample_V_load_3_reg_9213 <= sample_period_samples_7_sample_V_q1;
                sample_period_samples_7_timestamp_V_load_2_reg_9153 <= sample_period_samples_7_timestamp_V_q0;
                sample_period_samples_7_timestamp_V_load_3_reg_9273 <= sample_period_samples_7_timestamp_V_q1;
                sample_period_samples_8_sample_V_load_2_reg_9098 <= sample_period_samples_8_sample_V_q0;
                sample_period_samples_8_sample_V_load_3_reg_9218 <= sample_period_samples_8_sample_V_q1;
                sample_period_samples_8_timestamp_V_load_2_reg_9158 <= sample_period_samples_8_timestamp_V_q0;
                sample_period_samples_8_timestamp_V_load_3_reg_9278 <= sample_period_samples_8_timestamp_V_q1;
                sample_period_samples_9_sample_V_load_2_reg_9103 <= sample_period_samples_9_sample_V_q0;
                sample_period_samples_9_sample_V_load_3_reg_9223 <= sample_period_samples_9_sample_V_q1;
                sample_period_samples_9_timestamp_V_load_2_reg_9163 <= sample_period_samples_9_timestamp_V_q0;
                sample_period_samples_9_timestamp_V_load_3_reg_9283 <= sample_period_samples_9_timestamp_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                sample_period_samples_0_sample_V_load_4_reg_9538 <= sample_period_samples_0_sample_V_q0;
                sample_period_samples_0_sample_V_load_5_reg_9658 <= sample_period_samples_0_sample_V_q1;
                sample_period_samples_0_timestamp_V_load_4_reg_9598 <= sample_period_samples_0_timestamp_V_q0;
                sample_period_samples_0_timestamp_V_load_5_reg_9718 <= sample_period_samples_0_timestamp_V_q1;
                sample_period_samples_10_sample_V_load_4_reg_9588 <= sample_period_samples_10_sample_V_q0;
                sample_period_samples_10_sample_V_load_5_reg_9708 <= sample_period_samples_10_sample_V_q1;
                sample_period_samples_10_timestamp_V_load_4_reg_9648 <= sample_period_samples_10_timestamp_V_q0;
                sample_period_samples_10_timestamp_V_load_5_reg_9768 <= sample_period_samples_10_timestamp_V_q1;
                sample_period_samples_11_sample_V_load_4_reg_9593 <= sample_period_samples_11_sample_V_q0;
                sample_period_samples_11_sample_V_load_5_reg_9713 <= sample_period_samples_11_sample_V_q1;
                sample_period_samples_11_timestamp_V_load_4_reg_9653 <= sample_period_samples_11_timestamp_V_q0;
                sample_period_samples_11_timestamp_V_load_5_reg_9773 <= sample_period_samples_11_timestamp_V_q1;
                sample_period_samples_1_sample_V_load_4_reg_9543 <= sample_period_samples_1_sample_V_q0;
                sample_period_samples_1_sample_V_load_5_reg_9663 <= sample_period_samples_1_sample_V_q1;
                sample_period_samples_1_timestamp_V_load_4_reg_9603 <= sample_period_samples_1_timestamp_V_q0;
                sample_period_samples_1_timestamp_V_load_5_reg_9723 <= sample_period_samples_1_timestamp_V_q1;
                sample_period_samples_2_sample_V_load_4_reg_9548 <= sample_period_samples_2_sample_V_q0;
                sample_period_samples_2_sample_V_load_5_reg_9668 <= sample_period_samples_2_sample_V_q1;
                sample_period_samples_2_timestamp_V_load_4_reg_9608 <= sample_period_samples_2_timestamp_V_q0;
                sample_period_samples_2_timestamp_V_load_5_reg_9728 <= sample_period_samples_2_timestamp_V_q1;
                sample_period_samples_3_sample_V_load_4_reg_9553 <= sample_period_samples_3_sample_V_q0;
                sample_period_samples_3_sample_V_load_5_reg_9673 <= sample_period_samples_3_sample_V_q1;
                sample_period_samples_3_timestamp_V_load_4_reg_9613 <= sample_period_samples_3_timestamp_V_q0;
                sample_period_samples_3_timestamp_V_load_5_reg_9733 <= sample_period_samples_3_timestamp_V_q1;
                sample_period_samples_4_sample_V_load_4_reg_9558 <= sample_period_samples_4_sample_V_q0;
                sample_period_samples_4_sample_V_load_5_reg_9678 <= sample_period_samples_4_sample_V_q1;
                sample_period_samples_4_timestamp_V_load_4_reg_9618 <= sample_period_samples_4_timestamp_V_q0;
                sample_period_samples_4_timestamp_V_load_5_reg_9738 <= sample_period_samples_4_timestamp_V_q1;
                sample_period_samples_5_sample_V_load_4_reg_9563 <= sample_period_samples_5_sample_V_q0;
                sample_period_samples_5_sample_V_load_5_reg_9683 <= sample_period_samples_5_sample_V_q1;
                sample_period_samples_5_timestamp_V_load_4_reg_9623 <= sample_period_samples_5_timestamp_V_q0;
                sample_period_samples_5_timestamp_V_load_5_reg_9743 <= sample_period_samples_5_timestamp_V_q1;
                sample_period_samples_6_sample_V_load_4_reg_9568 <= sample_period_samples_6_sample_V_q0;
                sample_period_samples_6_sample_V_load_5_reg_9688 <= sample_period_samples_6_sample_V_q1;
                sample_period_samples_6_timestamp_V_load_4_reg_9628 <= sample_period_samples_6_timestamp_V_q0;
                sample_period_samples_6_timestamp_V_load_5_reg_9748 <= sample_period_samples_6_timestamp_V_q1;
                sample_period_samples_7_sample_V_load_4_reg_9573 <= sample_period_samples_7_sample_V_q0;
                sample_period_samples_7_sample_V_load_5_reg_9693 <= sample_period_samples_7_sample_V_q1;
                sample_period_samples_7_timestamp_V_load_4_reg_9633 <= sample_period_samples_7_timestamp_V_q0;
                sample_period_samples_7_timestamp_V_load_5_reg_9753 <= sample_period_samples_7_timestamp_V_q1;
                sample_period_samples_8_sample_V_load_4_reg_9578 <= sample_period_samples_8_sample_V_q0;
                sample_period_samples_8_sample_V_load_5_reg_9698 <= sample_period_samples_8_sample_V_q1;
                sample_period_samples_8_timestamp_V_load_4_reg_9638 <= sample_period_samples_8_timestamp_V_q0;
                sample_period_samples_8_timestamp_V_load_5_reg_9758 <= sample_period_samples_8_timestamp_V_q1;
                sample_period_samples_9_sample_V_load_4_reg_9583 <= sample_period_samples_9_sample_V_q0;
                sample_period_samples_9_sample_V_load_5_reg_9703 <= sample_period_samples_9_sample_V_q1;
                sample_period_samples_9_timestamp_V_load_4_reg_9643 <= sample_period_samples_9_timestamp_V_q0;
                sample_period_samples_9_timestamp_V_load_5_reg_9763 <= sample_period_samples_9_timestamp_V_q1;
            end if;
        end if;
    end process;
    zext_ln19_reg_8187(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln84_fu_7343_p2, ap_CS_fsm_state5, icmp_ln19_fu_7623_p2, ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, ap_CS_fsm_state20, icmp_ln63_fu_7869_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln84_fu_7343_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln84_fu_7343_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln19_fu_7623_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln63_fu_7869_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln19_fu_7589_p2 <= std_logic_vector(unsigned(i_1_reg_7326) + unsigned(ap_const_lv4_1));
    add_ln71_fu_7898_p2 <= std_logic_vector(unsigned(sliding_window_size_load_reg_10258) + unsigned(ap_const_lv32_1));
    add_ln84_fu_7337_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_7318_p4) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
    ap_CS_fsm_state29 <= ap_CS_fsm(27);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln84_fu_7343_p2)
    begin
        if ((icmp_ln84_fu_7343_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_7318_p4_assign_proc : process(i_reg_7314, add_ln84_reg_8113, ap_CS_fsm_pp0_stage0, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_7318_p4 <= add_ln84_reg_8113;
        else 
            ap_phi_mux_i_phi_fu_7318_p4 <= i_reg_7314;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_0_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_0_ce0 <= ap_const_logic_1;
        else 
            buffer_in_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_10_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_10_ce0 <= ap_const_logic_1;
        else 
            buffer_in_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_11_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_11_ce0 <= ap_const_logic_1;
        else 
            buffer_in_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_1_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_1_ce0 <= ap_const_logic_1;
        else 
            buffer_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_2_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_2_ce0 <= ap_const_logic_1;
        else 
            buffer_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_3_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_3_ce0 <= ap_const_logic_1;
        else 
            buffer_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_4_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_4_ce0 <= ap_const_logic_1;
        else 
            buffer_in_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_5_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_5_ce0 <= ap_const_logic_1;
        else 
            buffer_in_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_6_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_6_ce0 <= ap_const_logic_1;
        else 
            buffer_in_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_7_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_7_ce0 <= ap_const_logic_1;
        else 
            buffer_in_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_8_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_8_ce0 <= ap_const_logic_1;
        else 
            buffer_in_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_in_9_address0 <= zext_ln87_fu_7353_p1(3 - 1 downto 0);

    buffer_in_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buffer_in_9_ce0 <= ap_const_logic_1;
        else 
            buffer_in_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_7653_ap_start_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2)
    begin
        if (((icmp_ln52_fu_7633_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fu_7653_ap_start <= ap_const_logic_1;
        else 
            grp_fu_7653_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_7653_p0 <= std_logic_vector(signed(sext_ln52_fu_7643_p1) + signed(ap_const_lv7_1));
    grp_fu_7653_p1 <= ap_const_lv7_14(6 - 1 downto 0);

    grp_fu_7881_ap_start_assign_proc : process(ap_CS_fsm_state20, icmp_ln63_fu_7869_p2)
    begin
        if (((icmp_ln63_fu_7869_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_fu_7881_ap_start <= ap_const_logic_1;
        else 
            grp_fu_7881_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_7881_p0 <= std_logic_vector(unsigned(trunc_ln61_fu_7861_p1) + unsigned(ap_const_lv6_1));
    i_cast_fu_7369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_7314),64));
    icmp_ln19_fu_7623_p2 <= "1" when (i_1_reg_7326 = ap_const_lv4_8) else "0";
    icmp_ln52_fu_7633_p2 <= "1" when (sliding_window_size_s = ap_const_lv32_0) else "0";
    icmp_ln63_fu_7869_p2 <= "1" when (trunc_ln61_fu_7861_p1 = sliding_window_back_ptr_s_i) else "0";
    icmp_ln69_fu_7893_p2 <= "1" when (signed(sliding_window_size_load_reg_10258) < signed(ap_const_lv32_14)) else "0";
    icmp_ln84_fu_7343_p2 <= "1" when (ap_phi_mux_i_phi_fu_7318_p4 = ap_const_lv4_8) else "0";

    sample_period_samples_0_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_0_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_0_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_0_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_0_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_0_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_0_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_0_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_0_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_0_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_0_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_0_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_0_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_0_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_0_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_0_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_0_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_0_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_0_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_0_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_0_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_0_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_0_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_0_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_0_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_0_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_0_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_0_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_0_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_0_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_0_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_0_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_0_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_0_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_0_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_0_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_0_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_0_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_0_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_0_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_0_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_0_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_0_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_0_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_10_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_10_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_10_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_10_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_10_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_10_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_10_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_10_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_10_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_10_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_10_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_10_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_10_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_10_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_10_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_10_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_10_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_10_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_10_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_10_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_10_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_10_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_10_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_10_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_10_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_10_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_10_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_10_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_10_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_10_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_10_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_10_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_10_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_10_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_10_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_10_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_10_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_10_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_10_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_10_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_10_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_10_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_10_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_10_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_11_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_11_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_11_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_11_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_11_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_11_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_11_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_11_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_11_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_11_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_11_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_11_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_11_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_11_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_11_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_11_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_11_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_11_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_11_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_11_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_11_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_11_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_11_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_11_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_11_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_11_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_11_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_11_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_11_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_11_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_11_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_11_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_11_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_11_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_11_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_11_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_11_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_11_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_11_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_11_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_11_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_11_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_11_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_11_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_1_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_1_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_1_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_1_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_1_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_1_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_1_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_1_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_1_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_1_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_1_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_1_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_1_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_1_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_1_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_1_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_1_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_1_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_1_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_1_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_1_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_1_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_1_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_1_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_1_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_1_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_1_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_1_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_1_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_1_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_1_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_1_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_1_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_1_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_1_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_1_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_1_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_1_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_1_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_1_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_1_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_1_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_1_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_1_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_2_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_2_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_2_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_2_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_2_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_2_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_2_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_2_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_2_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_2_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_2_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_2_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_2_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_2_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_2_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_2_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_2_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_2_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_2_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_2_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_2_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_2_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_2_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_2_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_2_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_2_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_2_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_2_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_2_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_2_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_2_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_2_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_2_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_2_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_2_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_2_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_2_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_2_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_2_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_2_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_2_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_2_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_2_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_2_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_3_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_3_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_3_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_3_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_3_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_3_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_3_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_3_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_3_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_3_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_3_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_3_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_3_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_3_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_3_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_3_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_3_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_3_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_3_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_3_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_3_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_3_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_3_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_3_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_3_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_3_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_3_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_3_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_3_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_3_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_3_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_3_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_3_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_3_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_3_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_3_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_3_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_3_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_3_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_3_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_3_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_3_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_3_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_3_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_4_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_4_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_4_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_4_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_4_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_4_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_4_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_4_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_4_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_4_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_4_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_4_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_4_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_4_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_4_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_4_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_4_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_4_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_4_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_4_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_4_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_4_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_4_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_4_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_4_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_4_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_4_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_4_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_4_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_4_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_4_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_4_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_4_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_4_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_4_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_4_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_4_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_4_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_4_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_4_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_4_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_4_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_4_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_4_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_5_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_5_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_5_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_5_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_5_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_5_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_5_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_5_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_5_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_5_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_5_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_5_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_5_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_5_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_5_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_5_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_5_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_5_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_5_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_5_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_5_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_5_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_5_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_5_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_5_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_5_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_5_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_5_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_5_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_5_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_5_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_5_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_5_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_5_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_5_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_5_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_5_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_5_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_5_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_5_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_5_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_5_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_5_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_5_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_6_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_6_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_6_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_6_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_6_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_6_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_6_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_6_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_6_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_6_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_6_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_6_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_6_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_6_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_6_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_6_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_6_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_6_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_6_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_6_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_6_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_6_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_6_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_6_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_6_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_6_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_6_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_6_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_6_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_6_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_6_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_6_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_6_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_6_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_6_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_6_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_6_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_6_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_6_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_6_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_6_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_6_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_6_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_6_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_7_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_7_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_7_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_7_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_7_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_7_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_7_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_7_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_7_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_7_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_7_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_7_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_7_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_7_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_7_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_7_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_7_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_7_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_7_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_7_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_7_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_7_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_7_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_7_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_7_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_7_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_7_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_7_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_7_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_7_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_7_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_7_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_7_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_7_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_7_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_7_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_7_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_7_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_7_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_7_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_7_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_7_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_7_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_7_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_8_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_8_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_8_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_8_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_8_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_8_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_8_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_8_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_8_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_8_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_8_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_8_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_8_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_8_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_8_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_8_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_8_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_8_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_8_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_8_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_8_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_8_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_8_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_8_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_8_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_8_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_8_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_8_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_8_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_8_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_8_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_8_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_8_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_8_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_8_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_8_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_8_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_8_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_8_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_8_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_8_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_8_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_8_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_8_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_9_sample_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_9_sample_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_9_sample_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_9_sample_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_9_sample_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_9_sample_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_9_sample_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_9_sample_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_9_sample_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_9_sample_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_9_sample_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_9_sample_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_9_sample_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_9_sample_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_9_sample_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_9_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_9_sample_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_9_sample_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_9_sample_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_9_sample_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_9_sample_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_9_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_9_timestamp_V_address0_assign_proc : process(ap_CS_fsm_state5, zext_ln19_reg_8187, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_9_timestamp_V_address0 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_9_timestamp_V_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_9_timestamp_V_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_9_timestamp_V_address0 <= zext_ln19_reg_8187(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_9_timestamp_V_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            sample_period_samples_9_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    sample_period_samples_9_timestamp_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sample_period_samples_9_timestamp_V_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sample_period_samples_9_timestamp_V_address1 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sample_period_samples_9_timestamp_V_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sample_period_samples_9_timestamp_V_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            sample_period_samples_9_timestamp_V_address1 <= "XXX";
        end if; 
    end process;


    sample_period_samples_9_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_9_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            sample_period_samples_9_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_9_timestamp_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            sample_period_samples_9_timestamp_V_ce1 <= ap_const_logic_1;
        else 
            sample_period_samples_9_timestamp_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sample_period_samples_9_timestamp_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sample_period_samples_9_timestamp_V_we0 <= ap_const_logic_1;
        else 
            sample_period_samples_9_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_0_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_0_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_0_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_0_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_0_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_0_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_0_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_0_sample_V_d0 <= buffer_in_0_q0(12 - 1 downto 0);

    samples_0_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_0_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_0_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_0_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_0_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_0_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_0_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_0_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_0_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_0_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_0_timestamp_V_d0 <= buffer_in_0_q0(31 downto 12);

    samples_0_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_0_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_0_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_10_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_10_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_10_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_10_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_10_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_10_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_10_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_10_sample_V_d0 <= buffer_in_10_q0(12 - 1 downto 0);

    samples_10_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_10_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_10_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_10_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_10_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_10_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_10_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_10_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_10_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_10_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_10_timestamp_V_d0 <= buffer_in_10_q0(31 downto 12);

    samples_10_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_10_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_10_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_11_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_11_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_11_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_11_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_11_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_11_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_11_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_11_sample_V_d0 <= buffer_in_11_q0(12 - 1 downto 0);

    samples_11_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_11_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_11_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_11_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_11_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_11_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_11_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_11_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_11_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_11_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_11_timestamp_V_d0 <= buffer_in_11_q0(31 downto 12);

    samples_11_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_11_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_11_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_1_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_1_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_1_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_1_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_1_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_1_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_1_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_1_sample_V_d0 <= buffer_in_1_q0(12 - 1 downto 0);

    samples_1_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_1_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_1_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_1_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_1_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_1_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_1_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_1_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_1_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_1_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_1_timestamp_V_d0 <= buffer_in_1_q0(31 downto 12);

    samples_1_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_1_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_1_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_2_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_2_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_2_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_2_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_2_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_2_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_2_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_2_sample_V_d0 <= buffer_in_2_q0(12 - 1 downto 0);

    samples_2_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_2_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_2_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_2_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_2_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_2_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_2_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_2_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_2_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_2_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_2_timestamp_V_d0 <= buffer_in_2_q0(31 downto 12);

    samples_2_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_2_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_2_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_3_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_3_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_3_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_3_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_3_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_3_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_3_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_3_sample_V_d0 <= buffer_in_3_q0(12 - 1 downto 0);

    samples_3_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_3_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_3_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_3_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_3_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_3_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_3_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_3_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_3_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_3_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_3_timestamp_V_d0 <= buffer_in_3_q0(31 downto 12);

    samples_3_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_3_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_3_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_4_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_4_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_4_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_4_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_4_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_4_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_4_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_4_sample_V_d0 <= buffer_in_4_q0(12 - 1 downto 0);

    samples_4_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_4_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_4_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_4_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_4_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_4_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_4_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_4_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_4_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_4_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_4_timestamp_V_d0 <= buffer_in_4_q0(31 downto 12);

    samples_4_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_4_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_4_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_5_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_5_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_5_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_5_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_5_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_5_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_5_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_5_sample_V_d0 <= buffer_in_5_q0(12 - 1 downto 0);

    samples_5_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_5_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_5_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_5_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_5_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_5_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_5_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_5_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_5_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_5_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_5_timestamp_V_d0 <= buffer_in_5_q0(31 downto 12);

    samples_5_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_5_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_5_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_6_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_6_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_6_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_6_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_6_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_6_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_6_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_6_sample_V_d0 <= buffer_in_6_q0(12 - 1 downto 0);

    samples_6_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_6_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_6_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_6_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_6_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_6_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_6_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_6_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_6_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_6_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_6_timestamp_V_d0 <= buffer_in_6_q0(31 downto 12);

    samples_6_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_6_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_6_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_7_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_7_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_7_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_7_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_7_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_7_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_7_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_7_sample_V_d0 <= buffer_in_7_q0(12 - 1 downto 0);

    samples_7_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_7_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_7_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_7_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_7_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_7_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_7_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_7_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_7_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_7_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_7_timestamp_V_d0 <= buffer_in_7_q0(31 downto 12);

    samples_7_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_7_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_7_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_8_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_8_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_8_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_8_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_8_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_8_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_8_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_8_sample_V_d0 <= buffer_in_8_q0(12 - 1 downto 0);

    samples_8_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_8_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_8_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_8_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_8_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_8_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_8_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_8_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_8_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_8_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_8_timestamp_V_d0 <= buffer_in_8_q0(31 downto 12);

    samples_8_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_8_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_8_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_9_sample_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_9_sample_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_9_sample_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_9_sample_V_address0 <= "XXX";
        end if; 
    end process;


    samples_9_sample_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_9_sample_V_ce0 <= ap_const_logic_1;
        else 
            samples_9_sample_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_9_sample_V_d0 <= buffer_in_9_q0(12 - 1 downto 0);

    samples_9_sample_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_9_sample_V_we0 <= ap_const_logic_1;
        else 
            samples_9_sample_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    samples_9_timestamp_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state5, zext_ln19_fu_7595_p1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_cast_fu_7369_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            samples_9_timestamp_V_address0 <= zext_ln19_fu_7595_p1(3 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            samples_9_timestamp_V_address0 <= i_cast_fu_7369_p1(3 - 1 downto 0);
        else 
            samples_9_timestamp_V_address0 <= "XXX";
        end if; 
    end process;


    samples_9_timestamp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state5, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            samples_9_timestamp_V_ce0 <= ap_const_logic_1;
        else 
            samples_9_timestamp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    samples_9_timestamp_V_d0 <= buffer_in_9_q0(31 downto 12);

    samples_9_timestamp_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln84_reg_8118, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln84_reg_8118 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            samples_9_timestamp_V_we0 <= ap_const_logic_1;
        else 
            samples_9_timestamp_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sext_ln52_fu_7643_p0 <= sliding_window_front_ptr_s_i;
        sext_ln52_fu_7643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln52_fu_7643_p0),7));


    sliding_window_back_ptr_s_o_assign_proc : process(sliding_window_back_ptr_s_i, icmp_ln52_reg_10264, icmp_ln63_reg_10283, ap_CS_fsm_state29, grp_fu_7881_p2)
    begin
        if (((icmp_ln63_reg_10283 = ap_const_lv1_1) and (icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            sliding_window_back_ptr_s_o <= grp_fu_7881_p2;
        else 
            sliding_window_back_ptr_s_o <= sliding_window_back_ptr_s_i;
        end if; 
    end process;


    sliding_window_back_ptr_s_o_ap_vld_assign_proc : process(icmp_ln52_reg_10264, icmp_ln63_reg_10283, ap_CS_fsm_state29)
    begin
        if (((icmp_ln63_reg_10283 = ap_const_lv1_1) and (icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            sliding_window_back_ptr_s_o_ap_vld <= ap_const_logic_1;
        else 
            sliding_window_back_ptr_s_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_0_d0 <= sample_period_samples_0_sample_V_load_reg_8578;

    sliding_window_buffer_samples_sample_V_0_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_10_d0 <= sample_period_samples_10_sample_V_load_reg_8628;

    sliding_window_buffer_samples_sample_V_0_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_11_d0 <= sample_period_samples_11_sample_V_load_reg_8633;

    sliding_window_buffer_samples_sample_V_0_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_1_d0 <= sample_period_samples_1_sample_V_load_reg_8583;

    sliding_window_buffer_samples_sample_V_0_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_2_d0 <= sample_period_samples_2_sample_V_load_reg_8588;

    sliding_window_buffer_samples_sample_V_0_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_3_d0 <= sample_period_samples_3_sample_V_load_reg_8593;

    sliding_window_buffer_samples_sample_V_0_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_4_d0 <= sample_period_samples_4_sample_V_load_reg_8598;

    sliding_window_buffer_samples_sample_V_0_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_5_d0 <= sample_period_samples_5_sample_V_load_reg_8603;

    sliding_window_buffer_samples_sample_V_0_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_6_d0 <= sample_period_samples_6_sample_V_load_reg_8608;

    sliding_window_buffer_samples_sample_V_0_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_7_d0 <= sample_period_samples_7_sample_V_load_reg_8613;

    sliding_window_buffer_samples_sample_V_0_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_8_d0 <= sample_period_samples_8_sample_V_load_reg_8618;

    sliding_window_buffer_samples_sample_V_0_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_0_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_0_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_0_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_0_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_0_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_0_9_d0 <= sample_period_samples_9_sample_V_load_reg_8623;

    sliding_window_buffer_samples_sample_V_0_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_0_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_0_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_0_d0 <= sample_period_samples_0_sample_V_load_1_reg_8698;

    sliding_window_buffer_samples_sample_V_1_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_10_d0 <= sample_period_samples_10_sample_V_load_1_reg_8748;

    sliding_window_buffer_samples_sample_V_1_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_11_d0 <= sample_period_samples_11_sample_V_load_1_reg_8753;

    sliding_window_buffer_samples_sample_V_1_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_1_d0 <= sample_period_samples_1_sample_V_load_1_reg_8703;

    sliding_window_buffer_samples_sample_V_1_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_2_d0 <= sample_period_samples_2_sample_V_load_1_reg_8708;

    sliding_window_buffer_samples_sample_V_1_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_3_d0 <= sample_period_samples_3_sample_V_load_1_reg_8713;

    sliding_window_buffer_samples_sample_V_1_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_4_d0 <= sample_period_samples_4_sample_V_load_1_reg_8718;

    sliding_window_buffer_samples_sample_V_1_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_5_d0 <= sample_period_samples_5_sample_V_load_1_reg_8723;

    sliding_window_buffer_samples_sample_V_1_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_6_d0 <= sample_period_samples_6_sample_V_load_1_reg_8728;

    sliding_window_buffer_samples_sample_V_1_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_7_d0 <= sample_period_samples_7_sample_V_load_1_reg_8733;

    sliding_window_buffer_samples_sample_V_1_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_8_d0 <= sample_period_samples_8_sample_V_load_1_reg_8738;

    sliding_window_buffer_samples_sample_V_1_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_1_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_1_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_1_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_1_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_1_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_1_9_d0 <= sample_period_samples_9_sample_V_load_1_reg_8743;

    sliding_window_buffer_samples_sample_V_1_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_1_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_1_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_0_d0 <= sample_period_samples_0_sample_V_load_2_reg_9058;

    sliding_window_buffer_samples_sample_V_2_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_10_d0 <= sample_period_samples_10_sample_V_load_2_reg_9108;

    sliding_window_buffer_samples_sample_V_2_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_11_d0 <= sample_period_samples_11_sample_V_load_2_reg_9113;

    sliding_window_buffer_samples_sample_V_2_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_1_d0 <= sample_period_samples_1_sample_V_load_2_reg_9063;

    sliding_window_buffer_samples_sample_V_2_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_2_d0 <= sample_period_samples_2_sample_V_load_2_reg_9068;

    sliding_window_buffer_samples_sample_V_2_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_3_d0 <= sample_period_samples_3_sample_V_load_2_reg_9073;

    sliding_window_buffer_samples_sample_V_2_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_4_d0 <= sample_period_samples_4_sample_V_load_2_reg_9078;

    sliding_window_buffer_samples_sample_V_2_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_5_d0 <= sample_period_samples_5_sample_V_load_2_reg_9083;

    sliding_window_buffer_samples_sample_V_2_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_6_d0 <= sample_period_samples_6_sample_V_load_2_reg_9088;

    sliding_window_buffer_samples_sample_V_2_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_7_d0 <= sample_period_samples_7_sample_V_load_2_reg_9093;

    sliding_window_buffer_samples_sample_V_2_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_8_d0 <= sample_period_samples_8_sample_V_load_2_reg_9098;

    sliding_window_buffer_samples_sample_V_2_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_2_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_2_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_2_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_2_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_2_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_2_9_d0 <= sample_period_samples_9_sample_V_load_2_reg_9103;

    sliding_window_buffer_samples_sample_V_2_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_2_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_2_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_0_d0 <= sample_period_samples_0_sample_V_load_3_reg_9178;

    sliding_window_buffer_samples_sample_V_3_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_10_d0 <= sample_period_samples_10_sample_V_load_3_reg_9228;

    sliding_window_buffer_samples_sample_V_3_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_11_d0 <= sample_period_samples_11_sample_V_load_3_reg_9233;

    sliding_window_buffer_samples_sample_V_3_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_1_d0 <= sample_period_samples_1_sample_V_load_3_reg_9183;

    sliding_window_buffer_samples_sample_V_3_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_2_d0 <= sample_period_samples_2_sample_V_load_3_reg_9188;

    sliding_window_buffer_samples_sample_V_3_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_3_d0 <= sample_period_samples_3_sample_V_load_3_reg_9193;

    sliding_window_buffer_samples_sample_V_3_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_4_d0 <= sample_period_samples_4_sample_V_load_3_reg_9198;

    sliding_window_buffer_samples_sample_V_3_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_5_d0 <= sample_period_samples_5_sample_V_load_3_reg_9203;

    sliding_window_buffer_samples_sample_V_3_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_6_d0 <= sample_period_samples_6_sample_V_load_3_reg_9208;

    sliding_window_buffer_samples_sample_V_3_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_7_d0 <= sample_period_samples_7_sample_V_load_3_reg_9213;

    sliding_window_buffer_samples_sample_V_3_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_8_d0 <= sample_period_samples_8_sample_V_load_3_reg_9218;

    sliding_window_buffer_samples_sample_V_3_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_3_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_3_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_3_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_3_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_3_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_3_9_d0 <= sample_period_samples_9_sample_V_load_3_reg_9223;

    sliding_window_buffer_samples_sample_V_3_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_3_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_3_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_0_d0 <= sample_period_samples_0_sample_V_load_4_reg_9538;

    sliding_window_buffer_samples_sample_V_4_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_10_d0 <= sample_period_samples_10_sample_V_load_4_reg_9588;

    sliding_window_buffer_samples_sample_V_4_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_11_d0 <= sample_period_samples_11_sample_V_load_4_reg_9593;

    sliding_window_buffer_samples_sample_V_4_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_1_d0 <= sample_period_samples_1_sample_V_load_4_reg_9543;

    sliding_window_buffer_samples_sample_V_4_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_2_d0 <= sample_period_samples_2_sample_V_load_4_reg_9548;

    sliding_window_buffer_samples_sample_V_4_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_3_d0 <= sample_period_samples_3_sample_V_load_4_reg_9553;

    sliding_window_buffer_samples_sample_V_4_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_4_d0 <= sample_period_samples_4_sample_V_load_4_reg_9558;

    sliding_window_buffer_samples_sample_V_4_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_5_d0 <= sample_period_samples_5_sample_V_load_4_reg_9563;

    sliding_window_buffer_samples_sample_V_4_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_6_d0 <= sample_period_samples_6_sample_V_load_4_reg_9568;

    sliding_window_buffer_samples_sample_V_4_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_7_d0 <= sample_period_samples_7_sample_V_load_4_reg_9573;

    sliding_window_buffer_samples_sample_V_4_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_8_d0 <= sample_period_samples_8_sample_V_load_4_reg_9578;

    sliding_window_buffer_samples_sample_V_4_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_4_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_4_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_4_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_4_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_4_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_4_9_d0 <= sample_period_samples_9_sample_V_load_4_reg_9583;

    sliding_window_buffer_samples_sample_V_4_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_4_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_4_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_0_d0 <= sample_period_samples_0_sample_V_load_5_reg_9658;

    sliding_window_buffer_samples_sample_V_5_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_10_d0 <= sample_period_samples_10_sample_V_load_5_reg_9708;

    sliding_window_buffer_samples_sample_V_5_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_11_d0 <= sample_period_samples_11_sample_V_load_5_reg_9713;

    sliding_window_buffer_samples_sample_V_5_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_1_d0 <= sample_period_samples_1_sample_V_load_5_reg_9663;

    sliding_window_buffer_samples_sample_V_5_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_2_d0 <= sample_period_samples_2_sample_V_load_5_reg_9668;

    sliding_window_buffer_samples_sample_V_5_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_3_d0 <= sample_period_samples_3_sample_V_load_5_reg_9673;

    sliding_window_buffer_samples_sample_V_5_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_4_d0 <= sample_period_samples_4_sample_V_load_5_reg_9678;

    sliding_window_buffer_samples_sample_V_5_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_5_d0 <= sample_period_samples_5_sample_V_load_5_reg_9683;

    sliding_window_buffer_samples_sample_V_5_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_6_d0 <= sample_period_samples_6_sample_V_load_5_reg_9688;

    sliding_window_buffer_samples_sample_V_5_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_7_d0 <= sample_period_samples_7_sample_V_load_5_reg_9693;

    sliding_window_buffer_samples_sample_V_5_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_8_d0 <= sample_period_samples_8_sample_V_load_5_reg_9698;

    sliding_window_buffer_samples_sample_V_5_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_5_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_5_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_5_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_5_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_5_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_sample_V_5_9_d0 <= sample_period_samples_9_sample_V_load_5_reg_9703;

    sliding_window_buffer_samples_sample_V_5_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_5_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_5_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_0_d0_assign_proc : process(sample_period_samples_0_sample_V_q0, sample_period_samples_0_sample_V_load_6_reg_10018, ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_0_d0 <= sample_period_samples_0_sample_V_load_6_reg_10018;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_0_d0 <= sample_period_samples_0_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_0_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_10_d0_assign_proc : process(sample_period_samples_10_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_10_sample_V_load_6_reg_10068, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_10_d0 <= sample_period_samples_10_sample_V_load_6_reg_10068;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_10_d0 <= sample_period_samples_10_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_10_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_11_d0_assign_proc : process(sample_period_samples_11_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_11_sample_V_load_6_reg_10073, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_11_d0 <= sample_period_samples_11_sample_V_load_6_reg_10073;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_11_d0 <= sample_period_samples_11_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_11_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_1_d0_assign_proc : process(sample_period_samples_1_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_1_sample_V_load_6_reg_10023, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_1_d0 <= sample_period_samples_1_sample_V_load_6_reg_10023;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_1_d0 <= sample_period_samples_1_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_1_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_2_d0_assign_proc : process(sample_period_samples_2_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_2_sample_V_load_6_reg_10028, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_2_d0 <= sample_period_samples_2_sample_V_load_6_reg_10028;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_2_d0 <= sample_period_samples_2_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_2_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_3_d0_assign_proc : process(sample_period_samples_3_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_3_sample_V_load_6_reg_10033, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_3_d0 <= sample_period_samples_3_sample_V_load_6_reg_10033;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_3_d0 <= sample_period_samples_3_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_3_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_4_d0_assign_proc : process(sample_period_samples_4_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_4_sample_V_load_6_reg_10038, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_4_d0 <= sample_period_samples_4_sample_V_load_6_reg_10038;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_4_d0 <= sample_period_samples_4_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_4_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_5_d0_assign_proc : process(sample_period_samples_5_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_5_sample_V_load_6_reg_10043, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_5_d0 <= sample_period_samples_5_sample_V_load_6_reg_10043;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_5_d0 <= sample_period_samples_5_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_5_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_6_d0_assign_proc : process(sample_period_samples_6_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_6_sample_V_load_6_reg_10048, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_6_d0 <= sample_period_samples_6_sample_V_load_6_reg_10048;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_6_d0 <= sample_period_samples_6_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_6_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_7_d0_assign_proc : process(sample_period_samples_7_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_7_sample_V_load_6_reg_10053, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_7_d0 <= sample_period_samples_7_sample_V_load_6_reg_10053;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_7_d0 <= sample_period_samples_7_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_7_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_8_d0_assign_proc : process(sample_period_samples_8_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_8_sample_V_load_6_reg_10058, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_8_d0 <= sample_period_samples_8_sample_V_load_6_reg_10058;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_8_d0 <= sample_period_samples_8_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_8_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_6_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_6_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_9_d0_assign_proc : process(sample_period_samples_9_sample_V_q0, ap_CS_fsm_state10, sample_period_samples_9_sample_V_load_6_reg_10063, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_6_9_d0 <= sample_period_samples_9_sample_V_load_6_reg_10063;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_6_9_d0 <= sample_period_samples_9_sample_V_q0;
        else 
            sliding_window_buffer_samples_sample_V_6_9_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_6_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_6_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_6_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_0_d0_assign_proc : process(sample_period_samples_0_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_0_sample_V_load_7_reg_10138, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_0_d0 <= sample_period_samples_0_sample_V_load_7_reg_10138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_0_d0 <= sample_period_samples_0_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_0_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_10_d0_assign_proc : process(sample_period_samples_10_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_10_sample_V_load_7_reg_10188, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_10_d0 <= sample_period_samples_10_sample_V_load_7_reg_10188;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_10_d0 <= sample_period_samples_10_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_10_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_11_d0_assign_proc : process(sample_period_samples_11_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_11_sample_V_load_7_reg_10193, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_11_d0 <= sample_period_samples_11_sample_V_load_7_reg_10193;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_11_d0 <= sample_period_samples_11_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_11_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_1_d0_assign_proc : process(sample_period_samples_1_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_1_sample_V_load_7_reg_10143, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_1_d0 <= sample_period_samples_1_sample_V_load_7_reg_10143;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_1_d0 <= sample_period_samples_1_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_1_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_2_d0_assign_proc : process(sample_period_samples_2_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_2_sample_V_load_7_reg_10148, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_2_d0 <= sample_period_samples_2_sample_V_load_7_reg_10148;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_2_d0 <= sample_period_samples_2_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_2_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_3_d0_assign_proc : process(sample_period_samples_3_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_3_sample_V_load_7_reg_10153, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_3_d0 <= sample_period_samples_3_sample_V_load_7_reg_10153;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_3_d0 <= sample_period_samples_3_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_3_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_4_d0_assign_proc : process(sample_period_samples_4_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_4_sample_V_load_7_reg_10158, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_4_d0 <= sample_period_samples_4_sample_V_load_7_reg_10158;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_4_d0 <= sample_period_samples_4_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_4_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_5_d0_assign_proc : process(sample_period_samples_5_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_5_sample_V_load_7_reg_10163, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_5_d0 <= sample_period_samples_5_sample_V_load_7_reg_10163;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_5_d0 <= sample_period_samples_5_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_5_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_6_d0_assign_proc : process(sample_period_samples_6_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_6_sample_V_load_7_reg_10168, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_6_d0 <= sample_period_samples_6_sample_V_load_7_reg_10168;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_6_d0 <= sample_period_samples_6_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_6_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_7_d0_assign_proc : process(sample_period_samples_7_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_7_sample_V_load_7_reg_10173, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_7_d0 <= sample_period_samples_7_sample_V_load_7_reg_10173;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_7_d0 <= sample_period_samples_7_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_7_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_8_d0_assign_proc : process(sample_period_samples_8_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_8_sample_V_load_7_reg_10178, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_8_d0 <= sample_period_samples_8_sample_V_load_7_reg_10178;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_8_d0 <= sample_period_samples_8_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_8_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_sample_V_7_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_sample_V_7_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_9_d0_assign_proc : process(sample_period_samples_9_sample_V_q1, ap_CS_fsm_state10, sample_period_samples_9_sample_V_load_7_reg_10183, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_sample_V_7_9_d0 <= sample_period_samples_9_sample_V_load_7_reg_10183;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_sample_V_7_9_d0 <= sample_period_samples_9_sample_V_q1;
        else 
            sliding_window_buffer_samples_sample_V_7_9_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_sample_V_7_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_sample_V_7_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_sample_V_7_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_0_d0 <= sample_period_samples_0_timestamp_V_load_reg_8638;

    sliding_window_buffer_samples_timestamp_V_0_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_10_d0 <= sample_period_samples_10_timestamp_V_load_reg_8688;

    sliding_window_buffer_samples_timestamp_V_0_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_11_d0 <= sample_period_samples_11_timestamp_V_load_reg_8693;

    sliding_window_buffer_samples_timestamp_V_0_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_1_d0 <= sample_period_samples_1_timestamp_V_load_reg_8643;

    sliding_window_buffer_samples_timestamp_V_0_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_2_d0 <= sample_period_samples_2_timestamp_V_load_reg_8648;

    sliding_window_buffer_samples_timestamp_V_0_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_3_d0 <= sample_period_samples_3_timestamp_V_load_reg_8653;

    sliding_window_buffer_samples_timestamp_V_0_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_4_d0 <= sample_period_samples_4_timestamp_V_load_reg_8658;

    sliding_window_buffer_samples_timestamp_V_0_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_5_d0 <= sample_period_samples_5_timestamp_V_load_reg_8663;

    sliding_window_buffer_samples_timestamp_V_0_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_6_d0 <= sample_period_samples_6_timestamp_V_load_reg_8668;

    sliding_window_buffer_samples_timestamp_V_0_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_7_d0 <= sample_period_samples_7_timestamp_V_load_reg_8673;

    sliding_window_buffer_samples_timestamp_V_0_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_8_d0 <= sample_period_samples_8_timestamp_V_load_reg_8678;

    sliding_window_buffer_samples_timestamp_V_0_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_0_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_0_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_0_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_0_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_0_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_0_9_d0 <= sample_period_samples_9_timestamp_V_load_reg_8683;

    sliding_window_buffer_samples_timestamp_V_0_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_0_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_0_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_0_d0 <= sample_period_samples_0_timestamp_V_load_1_reg_8758;

    sliding_window_buffer_samples_timestamp_V_1_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_10_d0 <= sample_period_samples_10_timestamp_V_load_1_reg_8808;

    sliding_window_buffer_samples_timestamp_V_1_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_11_d0 <= sample_period_samples_11_timestamp_V_load_1_reg_8813;

    sliding_window_buffer_samples_timestamp_V_1_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_1_d0 <= sample_period_samples_1_timestamp_V_load_1_reg_8763;

    sliding_window_buffer_samples_timestamp_V_1_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_2_d0 <= sample_period_samples_2_timestamp_V_load_1_reg_8768;

    sliding_window_buffer_samples_timestamp_V_1_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_3_d0 <= sample_period_samples_3_timestamp_V_load_1_reg_8773;

    sliding_window_buffer_samples_timestamp_V_1_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_4_d0 <= sample_period_samples_4_timestamp_V_load_1_reg_8778;

    sliding_window_buffer_samples_timestamp_V_1_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_5_d0 <= sample_period_samples_5_timestamp_V_load_1_reg_8783;

    sliding_window_buffer_samples_timestamp_V_1_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_6_d0 <= sample_period_samples_6_timestamp_V_load_1_reg_8788;

    sliding_window_buffer_samples_timestamp_V_1_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_7_d0 <= sample_period_samples_7_timestamp_V_load_1_reg_8793;

    sliding_window_buffer_samples_timestamp_V_1_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_8_d0 <= sample_period_samples_8_timestamp_V_load_1_reg_8798;

    sliding_window_buffer_samples_timestamp_V_1_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_1_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_1_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_1_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_1_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_1_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_1_9_d0 <= sample_period_samples_9_timestamp_V_load_1_reg_8803;

    sliding_window_buffer_samples_timestamp_V_1_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_1_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_1_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_0_d0 <= sample_period_samples_0_timestamp_V_load_2_reg_9118;

    sliding_window_buffer_samples_timestamp_V_2_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_10_d0 <= sample_period_samples_10_timestamp_V_load_2_reg_9168;

    sliding_window_buffer_samples_timestamp_V_2_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_11_d0 <= sample_period_samples_11_timestamp_V_load_2_reg_9173;

    sliding_window_buffer_samples_timestamp_V_2_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_1_d0 <= sample_period_samples_1_timestamp_V_load_2_reg_9123;

    sliding_window_buffer_samples_timestamp_V_2_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_2_d0 <= sample_period_samples_2_timestamp_V_load_2_reg_9128;

    sliding_window_buffer_samples_timestamp_V_2_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_3_d0 <= sample_period_samples_3_timestamp_V_load_2_reg_9133;

    sliding_window_buffer_samples_timestamp_V_2_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_4_d0 <= sample_period_samples_4_timestamp_V_load_2_reg_9138;

    sliding_window_buffer_samples_timestamp_V_2_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_5_d0 <= sample_period_samples_5_timestamp_V_load_2_reg_9143;

    sliding_window_buffer_samples_timestamp_V_2_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_6_d0 <= sample_period_samples_6_timestamp_V_load_2_reg_9148;

    sliding_window_buffer_samples_timestamp_V_2_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_7_d0 <= sample_period_samples_7_timestamp_V_load_2_reg_9153;

    sliding_window_buffer_samples_timestamp_V_2_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_8_d0 <= sample_period_samples_8_timestamp_V_load_2_reg_9158;

    sliding_window_buffer_samples_timestamp_V_2_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_2_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_2_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_2_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_2_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_2_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_2_9_d0 <= sample_period_samples_9_timestamp_V_load_2_reg_9163;

    sliding_window_buffer_samples_timestamp_V_2_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_2_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_2_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_0_d0 <= sample_period_samples_0_timestamp_V_load_3_reg_9238;

    sliding_window_buffer_samples_timestamp_V_3_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_10_d0 <= sample_period_samples_10_timestamp_V_load_3_reg_9288;

    sliding_window_buffer_samples_timestamp_V_3_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_11_d0 <= sample_period_samples_11_timestamp_V_load_3_reg_9293;

    sliding_window_buffer_samples_timestamp_V_3_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_1_d0 <= sample_period_samples_1_timestamp_V_load_3_reg_9243;

    sliding_window_buffer_samples_timestamp_V_3_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_2_d0 <= sample_period_samples_2_timestamp_V_load_3_reg_9248;

    sliding_window_buffer_samples_timestamp_V_3_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_3_d0 <= sample_period_samples_3_timestamp_V_load_3_reg_9253;

    sliding_window_buffer_samples_timestamp_V_3_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_4_d0 <= sample_period_samples_4_timestamp_V_load_3_reg_9258;

    sliding_window_buffer_samples_timestamp_V_3_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_5_d0 <= sample_period_samples_5_timestamp_V_load_3_reg_9263;

    sliding_window_buffer_samples_timestamp_V_3_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_6_d0 <= sample_period_samples_6_timestamp_V_load_3_reg_9268;

    sliding_window_buffer_samples_timestamp_V_3_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_7_d0 <= sample_period_samples_7_timestamp_V_load_3_reg_9273;

    sliding_window_buffer_samples_timestamp_V_3_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_8_d0 <= sample_period_samples_8_timestamp_V_load_3_reg_9278;

    sliding_window_buffer_samples_timestamp_V_3_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_3_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_3_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_3_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_3_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_3_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_3_9_d0 <= sample_period_samples_9_timestamp_V_load_3_reg_9283;

    sliding_window_buffer_samples_timestamp_V_3_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_3_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_3_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_0_d0 <= sample_period_samples_0_timestamp_V_load_4_reg_9598;

    sliding_window_buffer_samples_timestamp_V_4_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_10_d0 <= sample_period_samples_10_timestamp_V_load_4_reg_9648;

    sliding_window_buffer_samples_timestamp_V_4_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_11_d0 <= sample_period_samples_11_timestamp_V_load_4_reg_9653;

    sliding_window_buffer_samples_timestamp_V_4_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_1_d0 <= sample_period_samples_1_timestamp_V_load_4_reg_9603;

    sliding_window_buffer_samples_timestamp_V_4_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_2_d0 <= sample_period_samples_2_timestamp_V_load_4_reg_9608;

    sliding_window_buffer_samples_timestamp_V_4_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_3_d0 <= sample_period_samples_3_timestamp_V_load_4_reg_9613;

    sliding_window_buffer_samples_timestamp_V_4_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_4_d0 <= sample_period_samples_4_timestamp_V_load_4_reg_9618;

    sliding_window_buffer_samples_timestamp_V_4_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_5_d0 <= sample_period_samples_5_timestamp_V_load_4_reg_9623;

    sliding_window_buffer_samples_timestamp_V_4_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_6_d0 <= sample_period_samples_6_timestamp_V_load_4_reg_9628;

    sliding_window_buffer_samples_timestamp_V_4_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_7_d0 <= sample_period_samples_7_timestamp_V_load_4_reg_9633;

    sliding_window_buffer_samples_timestamp_V_4_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_8_d0 <= sample_period_samples_8_timestamp_V_load_4_reg_9638;

    sliding_window_buffer_samples_timestamp_V_4_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_4_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_4_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_4_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_4_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_4_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_4_9_d0 <= sample_period_samples_9_timestamp_V_load_4_reg_9643;

    sliding_window_buffer_samples_timestamp_V_4_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_4_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_4_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_0_d0 <= sample_period_samples_0_timestamp_V_load_5_reg_9718;

    sliding_window_buffer_samples_timestamp_V_5_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_10_d0 <= sample_period_samples_10_timestamp_V_load_5_reg_9768;

    sliding_window_buffer_samples_timestamp_V_5_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_11_d0 <= sample_period_samples_11_timestamp_V_load_5_reg_9773;

    sliding_window_buffer_samples_timestamp_V_5_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_1_d0 <= sample_period_samples_1_timestamp_V_load_5_reg_9723;

    sliding_window_buffer_samples_timestamp_V_5_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_2_d0 <= sample_period_samples_2_timestamp_V_load_5_reg_9728;

    sliding_window_buffer_samples_timestamp_V_5_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_3_d0 <= sample_period_samples_3_timestamp_V_load_5_reg_9733;

    sliding_window_buffer_samples_timestamp_V_5_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_4_d0 <= sample_period_samples_4_timestamp_V_load_5_reg_9738;

    sliding_window_buffer_samples_timestamp_V_5_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_5_d0 <= sample_period_samples_5_timestamp_V_load_5_reg_9743;

    sliding_window_buffer_samples_timestamp_V_5_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_6_d0 <= sample_period_samples_6_timestamp_V_load_5_reg_9748;

    sliding_window_buffer_samples_timestamp_V_5_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_7_d0 <= sample_period_samples_7_timestamp_V_load_5_reg_9753;

    sliding_window_buffer_samples_timestamp_V_5_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_8_d0 <= sample_period_samples_8_timestamp_V_load_5_reg_9758;

    sliding_window_buffer_samples_timestamp_V_5_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_5_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_5_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_5_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_5_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_5_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sliding_window_buffer_samples_timestamp_V_5_9_d0 <= sample_period_samples_9_timestamp_V_load_5_reg_9763;

    sliding_window_buffer_samples_timestamp_V_5_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_5_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_5_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_0_d0_assign_proc : process(sample_period_samples_0_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_0_timestamp_V_load_6_reg_10078, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_0_d0 <= sample_period_samples_0_timestamp_V_load_6_reg_10078;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_0_d0 <= sample_period_samples_0_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_0_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_10_d0_assign_proc : process(sample_period_samples_10_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_10_timestamp_V_load_6_reg_10128, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_10_d0 <= sample_period_samples_10_timestamp_V_load_6_reg_10128;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_10_d0 <= sample_period_samples_10_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_10_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_11_d0_assign_proc : process(sample_period_samples_11_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_11_timestamp_V_load_6_reg_10133, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_11_d0 <= sample_period_samples_11_timestamp_V_load_6_reg_10133;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_11_d0 <= sample_period_samples_11_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_11_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_1_d0_assign_proc : process(sample_period_samples_1_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_1_timestamp_V_load_6_reg_10083, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_1_d0 <= sample_period_samples_1_timestamp_V_load_6_reg_10083;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_1_d0 <= sample_period_samples_1_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_1_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_2_d0_assign_proc : process(sample_period_samples_2_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_2_timestamp_V_load_6_reg_10088, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_2_d0 <= sample_period_samples_2_timestamp_V_load_6_reg_10088;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_2_d0 <= sample_period_samples_2_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_2_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_3_d0_assign_proc : process(sample_period_samples_3_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_3_timestamp_V_load_6_reg_10093, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_3_d0 <= sample_period_samples_3_timestamp_V_load_6_reg_10093;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_3_d0 <= sample_period_samples_3_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_3_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_4_d0_assign_proc : process(sample_period_samples_4_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_4_timestamp_V_load_6_reg_10098, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_4_d0 <= sample_period_samples_4_timestamp_V_load_6_reg_10098;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_4_d0 <= sample_period_samples_4_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_4_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_5_d0_assign_proc : process(sample_period_samples_5_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_5_timestamp_V_load_6_reg_10103, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_5_d0 <= sample_period_samples_5_timestamp_V_load_6_reg_10103;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_5_d0 <= sample_period_samples_5_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_5_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_6_d0_assign_proc : process(sample_period_samples_6_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_6_timestamp_V_load_6_reg_10108, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_6_d0 <= sample_period_samples_6_timestamp_V_load_6_reg_10108;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_6_d0 <= sample_period_samples_6_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_6_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_7_d0_assign_proc : process(sample_period_samples_7_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_7_timestamp_V_load_6_reg_10113, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_7_d0 <= sample_period_samples_7_timestamp_V_load_6_reg_10113;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_7_d0 <= sample_period_samples_7_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_7_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_8_d0_assign_proc : process(sample_period_samples_8_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_8_timestamp_V_load_6_reg_10118, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_8_d0 <= sample_period_samples_8_timestamp_V_load_6_reg_10118;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_8_d0 <= sample_period_samples_8_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_8_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_6_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_6_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_9_d0_assign_proc : process(sample_period_samples_9_timestamp_V_q0, ap_CS_fsm_state10, sample_period_samples_9_timestamp_V_load_6_reg_10123, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_6_9_d0 <= sample_period_samples_9_timestamp_V_load_6_reg_10123;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_6_9_d0 <= sample_period_samples_9_timestamp_V_q0;
        else 
            sliding_window_buffer_samples_timestamp_V_6_9_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_6_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_6_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_6_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_0_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_0_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_0_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_0_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_0_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_0_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_0_d0_assign_proc : process(sample_period_samples_0_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_0_timestamp_V_load_7_reg_10198, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_0_d0 <= sample_period_samples_0_timestamp_V_load_7_reg_10198;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_0_d0 <= sample_period_samples_0_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_0_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_0_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_0_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_10_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_10_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_10_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_10_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_10_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_10_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_10_d0_assign_proc : process(sample_period_samples_10_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_10_timestamp_V_load_7_reg_10248, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_10_d0 <= sample_period_samples_10_timestamp_V_load_7_reg_10248;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_10_d0 <= sample_period_samples_10_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_10_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_10_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_10_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_11_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_11_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_11_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_11_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_11_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_11_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_11_d0_assign_proc : process(sample_period_samples_11_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_11_timestamp_V_load_7_reg_10253, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_11_d0 <= sample_period_samples_11_timestamp_V_load_7_reg_10253;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_11_d0 <= sample_period_samples_11_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_11_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_11_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_11_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_1_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_1_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_1_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_1_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_1_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_1_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_1_d0_assign_proc : process(sample_period_samples_1_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_1_timestamp_V_load_7_reg_10203, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_1_d0 <= sample_period_samples_1_timestamp_V_load_7_reg_10203;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_1_d0 <= sample_period_samples_1_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_1_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_1_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_1_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_2_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_2_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_2_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_2_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_2_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_2_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_2_d0_assign_proc : process(sample_period_samples_2_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_2_timestamp_V_load_7_reg_10208, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_2_d0 <= sample_period_samples_2_timestamp_V_load_7_reg_10208;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_2_d0 <= sample_period_samples_2_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_2_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_2_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_2_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_3_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_3_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_3_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_3_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_3_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_3_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_3_d0_assign_proc : process(sample_period_samples_3_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_3_timestamp_V_load_7_reg_10213, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_3_d0 <= sample_period_samples_3_timestamp_V_load_7_reg_10213;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_3_d0 <= sample_period_samples_3_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_3_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_3_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_3_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_4_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_4_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_4_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_4_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_4_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_4_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_4_d0_assign_proc : process(sample_period_samples_4_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_4_timestamp_V_load_7_reg_10218, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_4_d0 <= sample_period_samples_4_timestamp_V_load_7_reg_10218;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_4_d0 <= sample_period_samples_4_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_4_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_4_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_4_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_5_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_5_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_5_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_5_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_5_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_5_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_5_d0_assign_proc : process(sample_period_samples_5_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_5_timestamp_V_load_7_reg_10223, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_5_d0 <= sample_period_samples_5_timestamp_V_load_7_reg_10223;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_5_d0 <= sample_period_samples_5_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_5_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_5_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_5_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_6_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_6_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_6_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_6_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_6_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_6_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_6_d0_assign_proc : process(sample_period_samples_6_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_6_timestamp_V_load_7_reg_10228, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_6_d0 <= sample_period_samples_6_timestamp_V_load_7_reg_10228;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_6_d0 <= sample_period_samples_6_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_6_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_6_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_6_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_7_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_7_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_7_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_7_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_7_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_7_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_7_d0_assign_proc : process(sample_period_samples_7_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_7_timestamp_V_load_7_reg_10233, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_7_d0 <= sample_period_samples_7_timestamp_V_load_7_reg_10233;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_7_d0 <= sample_period_samples_7_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_7_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_7_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_7_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_8_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_8_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_8_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_8_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_8_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_8_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_8_d0_assign_proc : process(sample_period_samples_8_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_8_timestamp_V_load_7_reg_10238, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_8_d0 <= sample_period_samples_8_timestamp_V_load_7_reg_10238;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_8_d0 <= sample_period_samples_8_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_8_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_8_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_8_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_9_address0_assign_proc : process(ap_CS_fsm_state10, zext_ln54_fu_7659_p1, zext_ln75_fu_7912_p1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_9_address0 <= zext_ln75_fu_7912_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_9_address0 <= zext_ln54_fu_7659_p1(5 - 1 downto 0);
        else 
            sliding_window_buffer_samples_timestamp_V_7_9_address0 <= "XXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_9_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            sliding_window_buffer_samples_timestamp_V_7_9_ce0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_9_d0_assign_proc : process(sample_period_samples_9_timestamp_V_q1, ap_CS_fsm_state10, sample_period_samples_9_timestamp_V_load_7_reg_10243, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            sliding_window_buffer_samples_timestamp_V_7_9_d0 <= sample_period_samples_9_timestamp_V_load_7_reg_10243;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            sliding_window_buffer_samples_timestamp_V_7_9_d0 <= sample_period_samples_9_timestamp_V_q1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_9_d0 <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sliding_window_buffer_samples_timestamp_V_7_9_we0_assign_proc : process(ap_CS_fsm_state10, icmp_ln52_fu_7633_p2, icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if ((((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((icmp_ln52_fu_7633_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            sliding_window_buffer_samples_timestamp_V_7_9_we0 <= ap_const_logic_1;
        else 
            sliding_window_buffer_samples_timestamp_V_7_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sliding_window_front_ptr_s_o_assign_proc : process(sliding_window_front_ptr_s_i, icmp_ln52_reg_10264, trunc_ln61_reg_10278, ap_CS_fsm_state29)
    begin
        if (((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            sliding_window_front_ptr_s_o <= trunc_ln61_reg_10278;
        else 
            sliding_window_front_ptr_s_o <= sliding_window_front_ptr_s_i;
        end if; 
    end process;


    sliding_window_front_ptr_s_o_ap_vld_assign_proc : process(icmp_ln52_reg_10264, ap_CS_fsm_state29)
    begin
        if (((icmp_ln52_reg_10264 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            sliding_window_front_ptr_s_o_ap_vld <= ap_const_logic_1;
        else 
            sliding_window_front_ptr_s_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln61_fu_7861_p1 <= grp_fu_7653_p2(6 - 1 downto 0);
    trunc_ln75_fu_7909_p1 <= new_front_ptr_reg_10273(5 - 1 downto 0);
    trunc_ln87_fu_7349_p1 <= ap_phi_mux_i_phi_fu_7318_p4(3 - 1 downto 0);
    zext_ln19_fu_7595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_7326),64));
    zext_ln54_fu_7659_p0 <= sliding_window_front_ptr_s_i;
    zext_ln54_fu_7659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln54_fu_7659_p0),64));
    zext_ln75_fu_7912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln75_fu_7909_p1),64));
    zext_ln87_fu_7353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln87_fu_7349_p1),64));
end behav;
