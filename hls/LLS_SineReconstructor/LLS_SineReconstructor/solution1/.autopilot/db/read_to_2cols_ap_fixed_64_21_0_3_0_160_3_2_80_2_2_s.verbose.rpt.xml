<profile>

<section name = "Vitis HLS Report for 'read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_s'" level="0">
<item name = "Date">Sun May  8 11:37:36 2022
</item>
<item name = "Version">2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)</item>
<item name = "Project">LLS_SineReconstructor</item>
<item name = "Solution">solution1 (Vivado IP Flow Target)</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu3eg-sbva484-1-i</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 6.902 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">157, 157, 1.570 us, 1.570 us, 157, 157, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_U0">read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s, 156, 156, 1.560 us, 1.560 us, 156, 156, none</column>
<column name="read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_U0">read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_s, 4, 4, 40.000 ns, 40.000 ns, 4, 4, none</column>
<column name="read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57_U0">read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57, 0, 0, 0 ns, 0 ns, 0, 0, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 20, -</column>
<column name="FIFO">-, -, 495, 335, -</column>
<column name="Instance">24, 48, 7715, 3978, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 27, -</column>
<column name="Register">-, -, 3, -, -</column>
<specialColumn name="Available">432, 360, 141120, 70560, 0</specialColumn>
<specialColumn name="Utilization (%)">5, 13, 5, 6, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_U0">read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_s, 0, 0, 19, 159, 0</column>
<column name="read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_U0">read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_s, 24, 48, 7694, 3763, 0</column>
<column name="read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57_U0">read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57, 0, 0, 2, 56, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
<column name="col_i_c9_U">0, 99, 0, -, 2, 2, 4</column>
<column name="col_i_c_U">0, 99, 0, -, 2, 2, 4</column>
<column name="col_j_c10_U">0, 99, 0, -, 2, 2, 4</column>
<column name="col_j_c_U">0, 99, 0, -, 2, 2, 4</column>
<column name="n_c_U">0, 99, 0, -, 2, 2, 4</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_idle">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_continue">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_done">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 2, 1, 1</column>
<column name="read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_sync_reg_read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57_U0_ap_ready">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_sync_reg_read_V_2cols_ap_fixed_64_21_0_3_0_3_2_2_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_read_and_gen_2x2_ap_fixed_64_21_0_3_0_160_3_2_80_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_read_to_2cols_ap_fixed_64_21_0_3_0_160_3_2_80_2_2_entry57_U0_ap_ready">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="alpha_strm1_din">out, 64, ap_fifo, alpha_strm1, pointer</column>
<column name="alpha_strm1_full_n">in, 1, ap_fifo, alpha_strm1, pointer</column>
<column name="alpha_strm1_write">out, 1, ap_fifo, alpha_strm1, pointer</column>
<column name="beta_strm2_din">out, 64, ap_fifo, beta_strm2, pointer</column>
<column name="beta_strm2_full_n">in, 1, ap_fifo, beta_strm2, pointer</column>
<column name="beta_strm2_write">out, 1, ap_fifo, beta_strm2, pointer</column>
<column name="gamma_strm3_din">out, 64, ap_fifo, gamma_strm3, pointer</column>
<column name="gamma_strm3_full_n">in, 1, ap_fifo, gamma_strm3, pointer</column>
<column name="gamma_strm3_write">out, 1, ap_fifo, gamma_strm3, pointer</column>
<column name="n">in, 2, ap_none, n, scalar</column>
<column name="n_ap_vld">in, 1, ap_none, n, scalar</column>
<column name="col_i">in, 2, ap_none, col_i, scalar</column>
<column name="col_i_ap_vld">in, 1, ap_none, col_i, scalar</column>
<column name="col_j">in, 2, ap_none, col_j, scalar</column>
<column name="col_j_ap_vld">in, 1, ap_none, col_j, scalar</column>
<column name="A_i_V_0_address0">out, 7, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_ce0">out, 1, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_d0">out, 64, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_q0">in, 64, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_we0">out, 1, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_address1">out, 7, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_ce1">out, 1, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_d1">out, 64, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_q1">in, 64, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_0_we1">out, 1, ap_memory, A_i_V_0, array</column>
<column name="A_i_V_1_address0">out, 7, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_ce0">out, 1, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_d0">out, 64, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_q0">in, 64, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_we0">out, 1, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_address1">out, 7, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_ce1">out, 1, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_d1">out, 64, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_q1">in, 64, ap_memory, A_i_V_1, array</column>
<column name="A_i_V_1_we1">out, 1, ap_memory, A_i_V_1, array</column>
<column name="A_j_V_0_address0">out, 7, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_ce0">out, 1, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_d0">out, 64, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_q0">in, 64, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_we0">out, 1, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_address1">out, 7, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_ce1">out, 1, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_d1">out, 64, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_q1">in, 64, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_0_we1">out, 1, ap_memory, A_j_V_0, array</column>
<column name="A_j_V_1_address0">out, 7, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_ce0">out, 1, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_d0">out, 64, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_q0">in, 64, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_we0">out, 1, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_address1">out, 7, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_ce1">out, 1, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_d1">out, 64, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_q1">in, 64, ap_memory, A_j_V_1, array</column>
<column name="A_j_V_1_we1">out, 1, ap_memory, A_j_V_1, array</column>
<column name="matA_V_0_address0">out, 8, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_ce0">out, 1, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_d0">out, 64, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_q0">in, 64, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_we0">out, 1, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_address1">out, 8, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_ce1">out, 1, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_d1">out, 64, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_q1">in, 64, ap_memory, matA_V_0, array</column>
<column name="matA_V_0_we1">out, 1, ap_memory, matA_V_0, array</column>
<column name="matA_V_1_address0">out, 8, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_ce0">out, 1, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_d0">out, 64, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_q0">in, 64, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_we0">out, 1, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_address1">out, 8, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_ce1">out, 1, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_d1">out, 64, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_q1">in, 64, ap_memory, matA_V_1, array</column>
<column name="matA_V_1_we1">out, 1, ap_memory, matA_V_1, array</column>
<column name="V_i_V_0_address0">out, 1, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_ce0">out, 1, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_d0">out, 64, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_q0">in, 64, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_we0">out, 1, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_address1">out, 1, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_ce1">out, 1, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_d1">out, 64, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_q1">in, 64, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_0_we1">out, 1, ap_memory, V_i_V_0, array</column>
<column name="V_i_V_1_address0">out, 1, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_ce0">out, 1, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_d0">out, 64, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_q0">in, 64, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_we0">out, 1, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_address1">out, 1, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_ce1">out, 1, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_d1">out, 64, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_q1">in, 64, ap_memory, V_i_V_1, array</column>
<column name="V_i_V_1_we1">out, 1, ap_memory, V_i_V_1, array</column>
<column name="V_j_V_0_address0">out, 1, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_ce0">out, 1, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_d0">out, 64, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_q0">in, 64, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_we0">out, 1, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_address1">out, 1, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_ce1">out, 1, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_d1">out, 64, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_q1">in, 64, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_0_we1">out, 1, ap_memory, V_j_V_0, array</column>
<column name="V_j_V_1_address0">out, 1, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_ce0">out, 1, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_d0">out, 64, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_q0">in, 64, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_we0">out, 1, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_address1">out, 1, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_ce1">out, 1, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_d1">out, 64, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_q1">in, 64, ap_memory, V_j_V_1, array</column>
<column name="V_j_V_1_we1">out, 1, ap_memory, V_j_V_1, array</column>
<column name="matV_V_0_address0">out, 3, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_ce0">out, 1, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_d0">out, 64, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_q0">in, 64, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_we0">out, 1, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_address1">out, 3, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_ce1">out, 1, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_d1">out, 64, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_q1">in, 64, ap_memory, matV_V_0, array</column>
<column name="matV_V_0_we1">out, 1, ap_memory, matV_V_0, array</column>
<column name="matV_V_1_address0">out, 3, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_ce0">out, 1, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_d0">out, 64, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_q0">in, 64, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_we0">out, 1, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_address1">out, 3, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_ce1">out, 1, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_d1">out, 64, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_q1">in, 64, ap_memory, matV_V_1, array</column>
<column name="matV_V_1_we1">out, 1, ap_memory, matV_V_1, array</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, read_to_2cols&lt;ap_fixed&lt;64, 21, 0, 3, 0&gt;, 160, 3, 2, 80, 2, 2&gt;, return value</column>
</table>
</item>
</section>
</profile>
