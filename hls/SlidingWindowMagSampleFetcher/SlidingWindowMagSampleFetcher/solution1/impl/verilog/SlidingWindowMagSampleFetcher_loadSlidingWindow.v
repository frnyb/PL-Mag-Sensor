// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SlidingWindowMagSampleFetcher_loadSlidingWindow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buffer_in_0_address0,
        buffer_in_0_ce0,
        buffer_in_0_q0,
        buffer_in_1_address0,
        buffer_in_1_ce0,
        buffer_in_1_q0,
        buffer_in_2_address0,
        buffer_in_2_ce0,
        buffer_in_2_q0,
        buffer_in_3_address0,
        buffer_in_3_ce0,
        buffer_in_3_q0,
        buffer_in_4_address0,
        buffer_in_4_ce0,
        buffer_in_4_q0,
        buffer_in_5_address0,
        buffer_in_5_ce0,
        buffer_in_5_q0,
        buffer_in_6_address0,
        buffer_in_6_ce0,
        buffer_in_6_q0,
        buffer_in_7_address0,
        buffer_in_7_ce0,
        buffer_in_7_q0,
        buffer_in_8_address0,
        buffer_in_8_ce0,
        buffer_in_8_q0,
        buffer_in_9_address0,
        buffer_in_9_ce0,
        buffer_in_9_q0,
        buffer_in_10_address0,
        buffer_in_10_ce0,
        buffer_in_10_q0,
        buffer_in_11_address0,
        buffer_in_11_ce0,
        buffer_in_11_q0,
        sliding_window_buffer_1_address0,
        sliding_window_buffer_1_ce0,
        sliding_window_buffer_1_we0,
        sliding_window_buffer_1_d0,
        n_samples
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_pp0_stage0 = 25'd2;
parameter    ap_ST_fsm_state4 = 25'd4;
parameter    ap_ST_fsm_pp1_stage0 = 25'd8;
parameter    ap_ST_fsm_pp1_stage1 = 25'd16;
parameter    ap_ST_fsm_pp1_stage2 = 25'd32;
parameter    ap_ST_fsm_pp1_stage3 = 25'd64;
parameter    ap_ST_fsm_pp1_stage4 = 25'd128;
parameter    ap_ST_fsm_pp1_stage5 = 25'd256;
parameter    ap_ST_fsm_pp1_stage6 = 25'd512;
parameter    ap_ST_fsm_pp1_stage7 = 25'd1024;
parameter    ap_ST_fsm_pp1_stage8 = 25'd2048;
parameter    ap_ST_fsm_pp1_stage9 = 25'd4096;
parameter    ap_ST_fsm_pp1_stage10 = 25'd8192;
parameter    ap_ST_fsm_pp1_stage11 = 25'd16384;
parameter    ap_ST_fsm_pp1_stage12 = 25'd32768;
parameter    ap_ST_fsm_pp1_stage13 = 25'd65536;
parameter    ap_ST_fsm_pp1_stage14 = 25'd131072;
parameter    ap_ST_fsm_pp1_stage15 = 25'd262144;
parameter    ap_ST_fsm_pp1_stage16 = 25'd524288;
parameter    ap_ST_fsm_pp1_stage17 = 25'd1048576;
parameter    ap_ST_fsm_pp1_stage18 = 25'd2097152;
parameter    ap_ST_fsm_pp1_stage19 = 25'd4194304;
parameter    ap_ST_fsm_pp1_stage20 = 25'd8388608;
parameter    ap_ST_fsm_state27 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] buffer_in_0_address0;
output   buffer_in_0_ce0;
input  [31:0] buffer_in_0_q0;
output  [3:0] buffer_in_1_address0;
output   buffer_in_1_ce0;
input  [31:0] buffer_in_1_q0;
output  [3:0] buffer_in_2_address0;
output   buffer_in_2_ce0;
input  [31:0] buffer_in_2_q0;
output  [3:0] buffer_in_3_address0;
output   buffer_in_3_ce0;
input  [31:0] buffer_in_3_q0;
output  [3:0] buffer_in_4_address0;
output   buffer_in_4_ce0;
input  [31:0] buffer_in_4_q0;
output  [3:0] buffer_in_5_address0;
output   buffer_in_5_ce0;
input  [31:0] buffer_in_5_q0;
output  [3:0] buffer_in_6_address0;
output   buffer_in_6_ce0;
input  [31:0] buffer_in_6_q0;
output  [3:0] buffer_in_7_address0;
output   buffer_in_7_ce0;
input  [31:0] buffer_in_7_q0;
output  [3:0] buffer_in_8_address0;
output   buffer_in_8_ce0;
input  [31:0] buffer_in_8_q0;
output  [3:0] buffer_in_9_address0;
output   buffer_in_9_ce0;
input  [31:0] buffer_in_9_q0;
output  [3:0] buffer_in_10_address0;
output   buffer_in_10_ce0;
input  [31:0] buffer_in_10_q0;
output  [3:0] buffer_in_11_address0;
output   buffer_in_11_ce0;
input  [31:0] buffer_in_11_q0;
output  [4:0] sliding_window_buffer_1_address0;
output   sliding_window_buffer_1_ce0;
output   sliding_window_buffer_1_we0;
output  [5:0] sliding_window_buffer_1_d0;
input  [5:0] n_samples;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg buffer_in_0_ce0;
reg buffer_in_1_ce0;
reg buffer_in_2_ce0;
reg buffer_in_3_ce0;
reg buffer_in_4_ce0;
reg buffer_in_5_ce0;
reg buffer_in_6_ce0;
reg buffer_in_7_ce0;
reg buffer_in_8_ce0;
reg buffer_in_9_ce0;
reg buffer_in_10_ce0;
reg buffer_in_11_ce0;
reg sliding_window_buffer_1_ce0;
reg sliding_window_buffer_1_we0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] i_reg_1021;
reg   [3:0] i_1_reg_1032;
wire   [0:0] icmp_ln119_fu_1044_p2;
wire   [3:0] add_ln119_fu_1050_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln119_1_fu_1060_p2;
reg   [0:0] icmp_ln119_1_reg_1925;
wire   [63:0] i_cast3_fu_1065_p1;
reg   [63:0] i_cast3_reg_1929;
wire   [3:0] add_ln18_fu_1273_p2;
reg   [3:0] add_ln18_reg_2017;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state26_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln18_fu_1283_p2;
reg   [0:0] icmp_ln18_reg_2022;
wire   [11:0] samples_4_sample_V_q0;
reg   [11:0] samples_4_sample_V_load_reg_2146;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state6_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [11:0] samples_5_sample_V_q0;
reg   [11:0] samples_5_sample_V_load_reg_2151;
wire   [11:0] samples_6_sample_V_q0;
reg   [11:0] samples_6_sample_V_load_reg_2156;
wire   [11:0] samples_7_sample_V_q0;
reg   [11:0] samples_7_sample_V_load_reg_2161;
wire   [11:0] samples_8_sample_V_q0;
reg   [11:0] samples_8_sample_V_load_reg_2166;
wire   [11:0] samples_9_sample_V_q0;
reg   [11:0] samples_9_sample_V_load_reg_2171;
wire   [11:0] samples_10_sample_V_q0;
reg   [11:0] samples_10_sample_V_load_reg_2176;
wire   [11:0] samples_11_sample_V_q0;
reg   [11:0] samples_11_sample_V_load_reg_2181;
wire   [19:0] samples_0_timestamp_V_q0;
reg   [19:0] samples_0_timestamp_V_load_reg_2186;
wire   [19:0] samples_1_timestamp_V_q0;
reg   [19:0] samples_1_timestamp_V_load_reg_2191;
wire   [19:0] samples_2_timestamp_V_q0;
reg   [19:0] samples_2_timestamp_V_load_reg_2196;
wire   [19:0] samples_3_timestamp_V_q0;
reg   [19:0] samples_3_timestamp_V_load_reg_2201;
wire   [19:0] samples_4_timestamp_V_q0;
reg   [19:0] samples_4_timestamp_V_load_reg_2206;
wire   [19:0] samples_5_timestamp_V_q0;
reg   [19:0] samples_5_timestamp_V_load_reg_2211;
wire   [19:0] samples_6_timestamp_V_q0;
reg   [19:0] samples_6_timestamp_V_load_reg_2216;
wire   [19:0] samples_7_timestamp_V_q0;
reg   [19:0] samples_7_timestamp_V_load_reg_2221;
wire   [19:0] samples_8_timestamp_V_q0;
reg   [19:0] samples_8_timestamp_V_load_reg_2226;
wire   [19:0] samples_9_timestamp_V_q0;
reg   [19:0] samples_9_timestamp_V_load_reg_2231;
wire   [19:0] samples_10_timestamp_V_q0;
reg   [19:0] samples_10_timestamp_V_load_reg_2236;
wire   [19:0] samples_11_timestamp_V_q0;
reg   [19:0] samples_11_timestamp_V_load_reg_2241;
wire   [9:0] add_ln20_20_fu_1336_p2;
reg   [9:0] add_ln20_20_reg_2246;
reg   [7:0] lshr_ln20_19_reg_2270;
wire    ap_CS_fsm_pp1_stage20;
wire    ap_block_state25_pp1_stage20_iter0;
wire    ap_block_pp1_stage20_11001;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage20_subdone;
reg   [7:0] sample_period_address0;
reg    sample_period_ce0;
reg   [3:0] sample_period_we0;
reg   [31:0] sample_period_d0;
reg   [7:0] sample_period_address1;
reg    sample_period_ce1;
reg   [3:0] sample_period_we1;
reg   [31:0] sample_period_d1;
reg   [3:0] samples_0_sample_V_address0;
reg    samples_0_sample_V_ce0;
reg    samples_0_sample_V_we0;
wire   [11:0] samples_0_sample_V_d0;
wire   [11:0] samples_0_sample_V_q0;
reg   [3:0] samples_1_sample_V_address0;
reg    samples_1_sample_V_ce0;
reg    samples_1_sample_V_we0;
wire   [11:0] samples_1_sample_V_d0;
wire   [11:0] samples_1_sample_V_q0;
reg   [3:0] samples_2_sample_V_address0;
reg    samples_2_sample_V_ce0;
reg    samples_2_sample_V_we0;
wire   [11:0] samples_2_sample_V_d0;
wire   [11:0] samples_2_sample_V_q0;
reg   [3:0] samples_3_sample_V_address0;
reg    samples_3_sample_V_ce0;
reg    samples_3_sample_V_we0;
wire   [11:0] samples_3_sample_V_d0;
wire   [11:0] samples_3_sample_V_q0;
reg   [3:0] samples_4_sample_V_address0;
reg    samples_4_sample_V_ce0;
reg    samples_4_sample_V_we0;
wire   [11:0] samples_4_sample_V_d0;
reg   [3:0] samples_5_sample_V_address0;
reg    samples_5_sample_V_ce0;
reg    samples_5_sample_V_we0;
wire   [11:0] samples_5_sample_V_d0;
reg   [3:0] samples_6_sample_V_address0;
reg    samples_6_sample_V_ce0;
reg    samples_6_sample_V_we0;
wire   [11:0] samples_6_sample_V_d0;
reg   [3:0] samples_7_sample_V_address0;
reg    samples_7_sample_V_ce0;
reg    samples_7_sample_V_we0;
wire   [11:0] samples_7_sample_V_d0;
reg   [3:0] samples_8_sample_V_address0;
reg    samples_8_sample_V_ce0;
reg    samples_8_sample_V_we0;
wire   [11:0] samples_8_sample_V_d0;
reg   [3:0] samples_9_sample_V_address0;
reg    samples_9_sample_V_ce0;
reg    samples_9_sample_V_we0;
wire   [11:0] samples_9_sample_V_d0;
reg   [3:0] samples_10_sample_V_address0;
reg    samples_10_sample_V_ce0;
reg    samples_10_sample_V_we0;
wire   [11:0] samples_10_sample_V_d0;
reg   [3:0] samples_11_sample_V_address0;
reg    samples_11_sample_V_ce0;
reg    samples_11_sample_V_we0;
wire   [11:0] samples_11_sample_V_d0;
reg   [3:0] samples_0_timestamp_V_address0;
reg    samples_0_timestamp_V_ce0;
reg    samples_0_timestamp_V_we0;
wire   [19:0] samples_0_timestamp_V_d0;
reg   [3:0] samples_1_timestamp_V_address0;
reg    samples_1_timestamp_V_ce0;
reg    samples_1_timestamp_V_we0;
wire   [19:0] samples_1_timestamp_V_d0;
reg   [3:0] samples_2_timestamp_V_address0;
reg    samples_2_timestamp_V_ce0;
reg    samples_2_timestamp_V_we0;
wire   [19:0] samples_2_timestamp_V_d0;
reg   [3:0] samples_3_timestamp_V_address0;
reg    samples_3_timestamp_V_ce0;
reg    samples_3_timestamp_V_we0;
wire   [19:0] samples_3_timestamp_V_d0;
reg   [3:0] samples_4_timestamp_V_address0;
reg    samples_4_timestamp_V_ce0;
reg    samples_4_timestamp_V_we0;
wire   [19:0] samples_4_timestamp_V_d0;
reg   [3:0] samples_5_timestamp_V_address0;
reg    samples_5_timestamp_V_ce0;
reg    samples_5_timestamp_V_we0;
wire   [19:0] samples_5_timestamp_V_d0;
reg   [3:0] samples_6_timestamp_V_address0;
reg    samples_6_timestamp_V_ce0;
reg    samples_6_timestamp_V_we0;
wire   [19:0] samples_6_timestamp_V_d0;
reg   [3:0] samples_7_timestamp_V_address0;
reg    samples_7_timestamp_V_ce0;
reg    samples_7_timestamp_V_we0;
wire   [19:0] samples_7_timestamp_V_d0;
reg   [3:0] samples_8_timestamp_V_address0;
reg    samples_8_timestamp_V_ce0;
reg    samples_8_timestamp_V_we0;
wire   [19:0] samples_8_timestamp_V_d0;
reg   [3:0] samples_9_timestamp_V_address0;
reg    samples_9_timestamp_V_ce0;
reg    samples_9_timestamp_V_we0;
wire   [19:0] samples_9_timestamp_V_d0;
reg   [3:0] samples_10_timestamp_V_address0;
reg    samples_10_timestamp_V_ce0;
reg    samples_10_timestamp_V_we0;
wire   [19:0] samples_10_timestamp_V_d0;
reg   [3:0] samples_11_timestamp_V_address0;
reg    samples_11_timestamp_V_ce0;
reg    samples_11_timestamp_V_we0;
wire   [19:0] samples_11_timestamp_V_d0;
reg   [3:0] ap_phi_mux_i_1_phi_fu_1036_p4;
wire    ap_block_pp1_stage0;
wire    ap_block_pp0_stage0;
wire   [63:0] i_1_cast4_fu_1288_p1;
wire   [63:0] zext_ln20_2_fu_1352_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln20_5_fu_1378_p1;
wire   [63:0] zext_ln20_7_fu_1417_p1;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln20_11_fu_1449_p1;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
wire   [63:0] zext_ln20_24_fu_1473_p1;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
wire   [63:0] zext_ln20_26_fu_1505_p1;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
wire   [63:0] zext_ln20_27_fu_1529_p1;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
wire   [63:0] zext_ln20_29_fu_1561_p1;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
wire   [63:0] zext_ln20_30_fu_1585_p1;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_pp1_stage8;
wire   [63:0] zext_ln20_32_fu_1617_p1;
wire    ap_CS_fsm_pp1_stage9;
wire    ap_block_pp1_stage9;
wire   [63:0] zext_ln20_33_fu_1641_p1;
wire    ap_CS_fsm_pp1_stage10;
wire    ap_block_pp1_stage10;
wire   [63:0] zext_ln20_34_fu_1665_p1;
wire    ap_CS_fsm_pp1_stage11;
wire    ap_block_pp1_stage11;
wire   [63:0] zext_ln20_35_fu_1689_p1;
wire    ap_CS_fsm_pp1_stage12;
wire    ap_block_pp1_stage12;
wire   [63:0] zext_ln20_36_fu_1713_p1;
wire    ap_CS_fsm_pp1_stage13;
wire    ap_block_pp1_stage13;
wire   [63:0] zext_ln20_37_fu_1737_p1;
wire    ap_CS_fsm_pp1_stage14;
wire    ap_block_pp1_stage14;
wire   [63:0] zext_ln20_38_fu_1761_p1;
wire    ap_CS_fsm_pp1_stage15;
wire    ap_block_pp1_stage15;
wire   [63:0] zext_ln20_39_fu_1785_p1;
wire    ap_CS_fsm_pp1_stage16;
wire    ap_block_pp1_stage16;
wire   [63:0] zext_ln20_40_fu_1809_p1;
wire    ap_CS_fsm_pp1_stage17;
wire    ap_block_pp1_stage17;
wire   [63:0] zext_ln20_41_fu_1833_p1;
wire    ap_CS_fsm_pp1_stage18;
wire    ap_block_pp1_stage18;
wire   [63:0] zext_ln20_42_fu_1857_p1;
wire    ap_CS_fsm_pp1_stage19;
wire    ap_block_pp1_stage19;
wire   [63:0] zext_ln20_43_fu_1881_p1;
wire    ap_block_pp1_stage20;
wire   [63:0] zext_ln20_44_fu_1905_p1;
wire    ap_CS_fsm_state27;
wire   [31:0] zext_ln20_1_fu_1367_p1;
wire   [31:0] zext_ln20_3_fu_1393_p1;
wire    ap_block_state7_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [31:0] zext_ln20_4_fu_1403_p1;
wire    ap_block_state8_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_11001;
wire   [31:0] zext_ln20_9_fu_1434_p1;
wire    ap_block_state9_pp1_stage4_iter0;
wire    ap_block_pp1_stage4_11001;
wire   [31:0] zext_ln20_6_fu_1459_p1;
wire    ap_block_state10_pp1_stage5_iter0;
wire    ap_block_pp1_stage5_11001;
wire   [31:0] zext_ln20_25_fu_1490_p1;
wire    ap_block_state11_pp1_stage6_iter0;
wire    ap_block_pp1_stage6_11001;
wire   [31:0] zext_ln20_8_fu_1515_p1;
wire    ap_block_state12_pp1_stage7_iter0;
wire    ap_block_pp1_stage7_11001;
wire   [31:0] zext_ln20_28_fu_1546_p1;
wire    ap_block_state13_pp1_stage8_iter0;
wire    ap_block_pp1_stage8_11001;
wire   [31:0] zext_ln20_10_fu_1571_p1;
wire    ap_block_state14_pp1_stage9_iter0;
wire    ap_block_pp1_stage9_11001;
wire   [31:0] zext_ln20_31_fu_1602_p1;
wire    ap_block_state15_pp1_stage10_iter0;
wire    ap_block_pp1_stage10_11001;
wire   [31:0] zext_ln20_12_fu_1627_p1;
wire    ap_block_state16_pp1_stage11_iter0;
wire    ap_block_pp1_stage11_11001;
wire   [31:0] zext_ln20_13_fu_1651_p1;
wire    ap_block_state17_pp1_stage12_iter0;
wire    ap_block_pp1_stage12_11001;
wire   [31:0] zext_ln20_14_fu_1675_p1;
wire    ap_block_state18_pp1_stage13_iter0;
wire    ap_block_pp1_stage13_11001;
wire   [31:0] zext_ln20_15_fu_1699_p1;
wire    ap_block_state19_pp1_stage14_iter0;
wire    ap_block_pp1_stage14_11001;
wire   [31:0] zext_ln20_16_fu_1723_p1;
wire    ap_block_state20_pp1_stage15_iter0;
wire    ap_block_pp1_stage15_11001;
wire   [31:0] zext_ln20_17_fu_1747_p1;
wire    ap_block_state21_pp1_stage16_iter0;
wire    ap_block_pp1_stage16_11001;
wire   [31:0] zext_ln20_18_fu_1771_p1;
wire    ap_block_state22_pp1_stage17_iter0;
wire    ap_block_pp1_stage17_11001;
wire   [31:0] zext_ln20_19_fu_1795_p1;
wire    ap_block_state23_pp1_stage18_iter0;
wire    ap_block_pp1_stage18_11001;
wire   [31:0] zext_ln20_20_fu_1819_p1;
wire    ap_block_state24_pp1_stage19_iter0;
wire    ap_block_pp1_stage19_11001;
wire   [31:0] zext_ln20_21_fu_1843_p1;
wire   [31:0] zext_ln20_22_fu_1867_p1;
wire   [31:0] zext_ln20_23_fu_1901_p1;
wire   [5:0] i_cast_fu_1056_p1;
wire   [5:0] i_1_cast133_fu_1279_p1;
wire   [6:0] shl_ln20_7_fu_1324_p3;
wire   [9:0] shl_ln20_6_fu_1316_p3;
wire   [9:0] zext_ln20_fu_1332_p1;
wire   [7:0] lshr_ln_fu_1342_p4;
wire   [27:0] tmp_s_fu_1357_p4;
wire   [7:0] or_ln20_fu_1372_p2;
wire   [27:0] tmp_1_fu_1383_p4;
wire   [9:0] add_ln20_fu_1398_p2;
wire   [7:0] lshr_ln20_1_fu_1407_p4;
wire   [27:0] shl_ln20_2_fu_1427_p3;
wire   [9:0] add_ln20_1_fu_1422_p2;
wire   [7:0] lshr_ln20_2_fu_1439_p4;
wire   [9:0] add_ln20_2_fu_1454_p2;
wire   [7:0] lshr_ln20_3_fu_1463_p4;
wire   [27:0] shl_ln20_3_fu_1483_p3;
wire   [9:0] add_ln20_3_fu_1478_p2;
wire   [7:0] lshr_ln20_4_fu_1495_p4;
wire   [9:0] add_ln20_4_fu_1510_p2;
wire   [7:0] lshr_ln20_5_fu_1519_p4;
wire   [27:0] shl_ln20_4_fu_1539_p3;
wire   [9:0] add_ln20_5_fu_1534_p2;
wire   [7:0] lshr_ln20_6_fu_1551_p4;
wire   [9:0] add_ln20_6_fu_1566_p2;
wire   [7:0] lshr_ln20_7_fu_1575_p4;
wire   [27:0] shl_ln20_5_fu_1595_p3;
wire   [9:0] add_ln20_7_fu_1590_p2;
wire   [7:0] lshr_ln20_8_fu_1607_p4;
wire   [9:0] add_ln20_8_fu_1622_p2;
wire   [7:0] lshr_ln20_9_fu_1631_p4;
wire   [9:0] add_ln20_9_fu_1646_p2;
wire   [7:0] lshr_ln20_s_fu_1655_p4;
wire   [9:0] add_ln20_10_fu_1670_p2;
wire   [7:0] lshr_ln20_10_fu_1679_p4;
wire   [9:0] add_ln20_11_fu_1694_p2;
wire   [7:0] lshr_ln20_11_fu_1703_p4;
wire   [9:0] add_ln20_12_fu_1718_p2;
wire   [7:0] lshr_ln20_12_fu_1727_p4;
wire   [9:0] add_ln20_13_fu_1742_p2;
wire   [7:0] lshr_ln20_13_fu_1751_p4;
wire   [9:0] add_ln20_14_fu_1766_p2;
wire   [7:0] lshr_ln20_14_fu_1775_p4;
wire   [9:0] add_ln20_15_fu_1790_p2;
wire   [7:0] lshr_ln20_15_fu_1799_p4;
wire   [9:0] add_ln20_16_fu_1814_p2;
wire   [7:0] lshr_ln20_16_fu_1823_p4;
wire   [9:0] add_ln20_17_fu_1838_p2;
wire   [7:0] lshr_ln20_17_fu_1847_p4;
wire   [9:0] add_ln20_18_fu_1862_p2;
wire   [7:0] lshr_ln20_18_fu_1871_p4;
wire   [9:0] add_ln20_19_fu_1886_p2;
reg   [24:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp1_stage4_subdone;
wire    ap_block_pp1_stage5_subdone;
wire    ap_block_pp1_stage6_subdone;
wire    ap_block_pp1_stage7_subdone;
wire    ap_block_pp1_stage8_subdone;
wire    ap_block_pp1_stage9_subdone;
wire    ap_block_pp1_stage10_subdone;
wire    ap_block_pp1_stage11_subdone;
wire    ap_block_pp1_stage12_subdone;
wire    ap_block_pp1_stage13_subdone;
wire    ap_block_pp1_stage14_subdone;
wire    ap_block_pp1_stage15_subdone;
wire    ap_block_pp1_stage16_subdone;
wire    ap_block_pp1_stage17_subdone;
wire    ap_block_pp1_stage18_subdone;
wire    ap_block_pp1_stage19_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

SlidingWindowMagSampleFetcher_loadSlidingWindow_sample_period #(
    .DataWidth( 32 ),
    .AddressRange( 181 ),
    .AddressWidth( 8 ))
sample_period_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sample_period_address0),
    .ce0(sample_period_ce0),
    .we0(sample_period_we0),
    .d0(sample_period_d0),
    .address1(sample_period_address1),
    .ce1(sample_period_ce1),
    .we1(sample_period_we1),
    .d1(sample_period_d1)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_0_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_0_sample_V_address0),
    .ce0(samples_0_sample_V_ce0),
    .we0(samples_0_sample_V_we0),
    .d0(samples_0_sample_V_d0),
    .q0(samples_0_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_1_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_1_sample_V_address0),
    .ce0(samples_1_sample_V_ce0),
    .we0(samples_1_sample_V_we0),
    .d0(samples_1_sample_V_d0),
    .q0(samples_1_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_2_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_2_sample_V_address0),
    .ce0(samples_2_sample_V_ce0),
    .we0(samples_2_sample_V_we0),
    .d0(samples_2_sample_V_d0),
    .q0(samples_2_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_3_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_3_sample_V_address0),
    .ce0(samples_3_sample_V_ce0),
    .we0(samples_3_sample_V_we0),
    .d0(samples_3_sample_V_d0),
    .q0(samples_3_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_4_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_4_sample_V_address0),
    .ce0(samples_4_sample_V_ce0),
    .we0(samples_4_sample_V_we0),
    .d0(samples_4_sample_V_d0),
    .q0(samples_4_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_5_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_5_sample_V_address0),
    .ce0(samples_5_sample_V_ce0),
    .we0(samples_5_sample_V_we0),
    .d0(samples_5_sample_V_d0),
    .q0(samples_5_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_6_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_6_sample_V_address0),
    .ce0(samples_6_sample_V_ce0),
    .we0(samples_6_sample_V_we0),
    .d0(samples_6_sample_V_d0),
    .q0(samples_6_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_7_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_7_sample_V_address0),
    .ce0(samples_7_sample_V_ce0),
    .we0(samples_7_sample_V_we0),
    .d0(samples_7_sample_V_d0),
    .q0(samples_7_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_8_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_8_sample_V_address0),
    .ce0(samples_8_sample_V_ce0),
    .we0(samples_8_sample_V_we0),
    .d0(samples_8_sample_V_d0),
    .q0(samples_8_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_9_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_9_sample_V_address0),
    .ce0(samples_9_sample_V_ce0),
    .we0(samples_9_sample_V_we0),
    .d0(samples_9_sample_V_d0),
    .q0(samples_9_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_10_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_10_sample_V_address0),
    .ce0(samples_10_sample_V_ce0),
    .we0(samples_10_sample_V_we0),
    .d0(samples_10_sample_V_d0),
    .q0(samples_10_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_sample_V #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_11_sample_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_11_sample_V_address0),
    .ce0(samples_11_sample_V_ce0),
    .we0(samples_11_sample_V_we0),
    .d0(samples_11_sample_V_d0),
    .q0(samples_11_sample_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_0_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_0_timestamp_V_address0),
    .ce0(samples_0_timestamp_V_ce0),
    .we0(samples_0_timestamp_V_we0),
    .d0(samples_0_timestamp_V_d0),
    .q0(samples_0_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_1_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_1_timestamp_V_address0),
    .ce0(samples_1_timestamp_V_ce0),
    .we0(samples_1_timestamp_V_we0),
    .d0(samples_1_timestamp_V_d0),
    .q0(samples_1_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_2_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_2_timestamp_V_address0),
    .ce0(samples_2_timestamp_V_ce0),
    .we0(samples_2_timestamp_V_we0),
    .d0(samples_2_timestamp_V_d0),
    .q0(samples_2_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_3_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_3_timestamp_V_address0),
    .ce0(samples_3_timestamp_V_ce0),
    .we0(samples_3_timestamp_V_we0),
    .d0(samples_3_timestamp_V_d0),
    .q0(samples_3_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_4_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_4_timestamp_V_address0),
    .ce0(samples_4_timestamp_V_ce0),
    .we0(samples_4_timestamp_V_we0),
    .d0(samples_4_timestamp_V_d0),
    .q0(samples_4_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_5_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_5_timestamp_V_address0),
    .ce0(samples_5_timestamp_V_ce0),
    .we0(samples_5_timestamp_V_we0),
    .d0(samples_5_timestamp_V_d0),
    .q0(samples_5_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_6_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_6_timestamp_V_address0),
    .ce0(samples_6_timestamp_V_ce0),
    .we0(samples_6_timestamp_V_we0),
    .d0(samples_6_timestamp_V_d0),
    .q0(samples_6_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_7_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_7_timestamp_V_address0),
    .ce0(samples_7_timestamp_V_ce0),
    .we0(samples_7_timestamp_V_we0),
    .d0(samples_7_timestamp_V_d0),
    .q0(samples_7_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_8_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_8_timestamp_V_address0),
    .ce0(samples_8_timestamp_V_ce0),
    .we0(samples_8_timestamp_V_we0),
    .d0(samples_8_timestamp_V_d0),
    .q0(samples_8_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_9_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_9_timestamp_V_address0),
    .ce0(samples_9_timestamp_V_ce0),
    .we0(samples_9_timestamp_V_we0),
    .d0(samples_9_timestamp_V_d0),
    .q0(samples_9_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_10_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_10_timestamp_V_address0),
    .ce0(samples_10_timestamp_V_ce0),
    .we0(samples_10_timestamp_V_we0),
    .d0(samples_10_timestamp_V_d0),
    .q0(samples_10_timestamp_V_q0)
);

SlidingWindowMagSampleFetcher_loadSlidingWindow_samples_0_timestamp_V #(
    .DataWidth( 20 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
samples_11_timestamp_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(samples_11_timestamp_V_address0),
    .ce0(samples_11_timestamp_V_ce0),
    .we0(samples_11_timestamp_V_we0),
    .d0(samples_11_timestamp_V_d0),
    .q0(samples_11_timestamp_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln119_fu_1044_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln119_fu_1044_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage20) & (1'b0 == ap_block_pp1_stage20_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_1032 <= 4'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln18_reg_2022 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_reg_1032 <= add_ln18_reg_2017;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln119_fu_1044_p2 == 1'd0))) begin
        i_reg_1021 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_fu_1060_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_reg_1021 <= add_ln119_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln18_reg_2017 <= add_ln18_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln18_reg_2022 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        add_ln20_20_reg_2246[9 : 3] <= add_ln20_20_fu_1336_p2[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_fu_1060_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_cast3_reg_1929[3 : 0] <= i_cast3_fu_1065_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln119_1_reg_1925 <= icmp_ln119_1_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln18_reg_2022 <= icmp_ln18_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage20) & (icmp_ln18_reg_2022 == 1'd0) & (1'b0 == ap_block_pp1_stage20_11001))) begin
        lshr_ln20_19_reg_2270 <= {{add_ln20_19_fu_1886_p2[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        samples_0_timestamp_V_load_reg_2186 <= samples_0_timestamp_V_q0;
        samples_10_sample_V_load_reg_2176 <= samples_10_sample_V_q0;
        samples_10_timestamp_V_load_reg_2236 <= samples_10_timestamp_V_q0;
        samples_11_sample_V_load_reg_2181 <= samples_11_sample_V_q0;
        samples_11_timestamp_V_load_reg_2241 <= samples_11_timestamp_V_q0;
        samples_1_timestamp_V_load_reg_2191 <= samples_1_timestamp_V_q0;
        samples_2_timestamp_V_load_reg_2196 <= samples_2_timestamp_V_q0;
        samples_3_timestamp_V_load_reg_2201 <= samples_3_timestamp_V_q0;
        samples_4_sample_V_load_reg_2146 <= samples_4_sample_V_q0;
        samples_4_timestamp_V_load_reg_2206 <= samples_4_timestamp_V_q0;
        samples_5_sample_V_load_reg_2151 <= samples_5_sample_V_q0;
        samples_5_timestamp_V_load_reg_2211 <= samples_5_timestamp_V_q0;
        samples_6_sample_V_load_reg_2156 <= samples_6_sample_V_q0;
        samples_6_timestamp_V_load_reg_2216 <= samples_6_timestamp_V_q0;
        samples_7_sample_V_load_reg_2161 <= samples_7_sample_V_q0;
        samples_7_timestamp_V_load_reg_2221 <= samples_7_timestamp_V_q0;
        samples_8_sample_V_load_reg_2166 <= samples_8_sample_V_q0;
        samples_8_timestamp_V_load_reg_2226 <= samples_8_timestamp_V_q0;
        samples_9_sample_V_load_reg_2171 <= samples_9_sample_V_q0;
        samples_9_timestamp_V_load_reg_2231 <= samples_9_timestamp_V_q0;
    end
end

always @ (*) begin
    if ((icmp_ln119_1_fu_1060_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln18_fu_1283_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln18_reg_2022 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_i_1_phi_fu_1036_p4 = add_ln18_reg_2017;
    end else begin
        ap_phi_mux_i_1_phi_fu_1036_p4 = i_1_reg_1032;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_0_ce0 = 1'b1;
    end else begin
        buffer_in_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_10_ce0 = 1'b1;
    end else begin
        buffer_in_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_11_ce0 = 1'b1;
    end else begin
        buffer_in_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_1_ce0 = 1'b1;
    end else begin
        buffer_in_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_2_ce0 = 1'b1;
    end else begin
        buffer_in_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_3_ce0 = 1'b1;
    end else begin
        buffer_in_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_4_ce0 = 1'b1;
    end else begin
        buffer_in_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_5_ce0 = 1'b1;
    end else begin
        buffer_in_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_6_ce0 = 1'b1;
    end else begin
        buffer_in_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_7_ce0 = 1'b1;
    end else begin
        buffer_in_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_8_ce0 = 1'b1;
    end else begin
        buffer_in_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buffer_in_9_ce0 = 1'b1;
    end else begin
        buffer_in_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        sample_period_address0 = zext_ln20_44_fu_1905_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage19) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage19))) begin
        sample_period_address0 = zext_ln20_42_fu_1857_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage17) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage17))) begin
        sample_period_address0 = zext_ln20_40_fu_1809_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage15))) begin
        sample_period_address0 = zext_ln20_38_fu_1761_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage13) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage13))) begin
        sample_period_address0 = zext_ln20_36_fu_1713_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage11) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage11))) begin
        sample_period_address0 = zext_ln20_34_fu_1665_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage9) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage9))) begin
        sample_period_address0 = zext_ln20_32_fu_1617_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7))) begin
        sample_period_address0 = zext_ln20_29_fu_1561_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5))) begin
        sample_period_address0 = zext_ln20_26_fu_1505_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3))) begin
        sample_period_address0 = zext_ln20_11_fu_1449_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        sample_period_address0 = zext_ln20_5_fu_1378_p1;
    end else begin
        sample_period_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage20) & (1'b0 == ap_block_pp1_stage20))) begin
            sample_period_address1 = zext_ln20_43_fu_1881_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage18) & (1'b0 == ap_block_pp1_stage18))) begin
            sample_period_address1 = zext_ln20_41_fu_1833_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage16) & (1'b0 == ap_block_pp1_stage16))) begin
            sample_period_address1 = zext_ln20_39_fu_1785_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14))) begin
            sample_period_address1 = zext_ln20_37_fu_1737_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage12) & (1'b0 == ap_block_pp1_stage12))) begin
            sample_period_address1 = zext_ln20_35_fu_1689_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage10) & (1'b0 == ap_block_pp1_stage10))) begin
            sample_period_address1 = zext_ln20_33_fu_1641_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8))) begin
            sample_period_address1 = zext_ln20_30_fu_1585_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6))) begin
            sample_period_address1 = zext_ln20_27_fu_1529_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4))) begin
            sample_period_address1 = zext_ln20_24_fu_1473_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
            sample_period_address1 = zext_ln20_7_fu_1417_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            sample_period_address1 = zext_ln20_2_fu_1352_p1;
        end else begin
            sample_period_address1 = 'bx;
        end
    end else begin
        sample_period_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage19) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage17) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage13) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage11) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage9) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        sample_period_ce0 = 1'b1;
    end else begin
        sample_period_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage18) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage16) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage12) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage10) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage8) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage20) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        sample_period_ce1 = 1'b1;
    end else begin
        sample_period_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        sample_period_d0 = zext_ln20_23_fu_1901_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage19) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage19))) begin
        sample_period_d0 = zext_ln20_21_fu_1843_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage17) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage17))) begin
        sample_period_d0 = zext_ln20_19_fu_1795_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage15))) begin
        sample_period_d0 = zext_ln20_17_fu_1747_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage13) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage13))) begin
        sample_period_d0 = zext_ln20_15_fu_1699_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage11) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage11))) begin
        sample_period_d0 = zext_ln20_13_fu_1651_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage9) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage9))) begin
        sample_period_d0 = zext_ln20_31_fu_1602_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7))) begin
        sample_period_d0 = zext_ln20_28_fu_1546_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5))) begin
        sample_period_d0 = zext_ln20_25_fu_1490_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3))) begin
        sample_period_d0 = zext_ln20_9_fu_1434_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        sample_period_d0 = zext_ln20_3_fu_1393_p1;
    end else begin
        sample_period_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage20) & (1'b0 == ap_block_pp1_stage20))) begin
            sample_period_d1 = zext_ln20_22_fu_1867_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage18) & (1'b0 == ap_block_pp1_stage18))) begin
            sample_period_d1 = zext_ln20_20_fu_1819_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage16) & (1'b0 == ap_block_pp1_stage16))) begin
            sample_period_d1 = zext_ln20_18_fu_1771_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14))) begin
            sample_period_d1 = zext_ln20_16_fu_1723_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage12) & (1'b0 == ap_block_pp1_stage12))) begin
            sample_period_d1 = zext_ln20_14_fu_1675_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage10) & (1'b0 == ap_block_pp1_stage10))) begin
            sample_period_d1 = zext_ln20_12_fu_1627_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8))) begin
            sample_period_d1 = zext_ln20_10_fu_1571_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6))) begin
            sample_period_d1 = zext_ln20_8_fu_1515_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4))) begin
            sample_period_d1 = zext_ln20_6_fu_1459_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
            sample_period_d1 = zext_ln20_4_fu_1403_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            sample_period_d1 = zext_ln20_1_fu_1367_p1;
        end else begin
            sample_period_d1 = 'bx;
        end
    end else begin
        sample_period_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage19) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage17) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage15) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage13) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage11) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage11_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln18_reg_2022 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        sample_period_we0 = 4'd7;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage9) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001)))) begin
        sample_period_we0 = 4'd12;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        sample_period_we0 = 4'd15;
    end else begin
        sample_period_we0 = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage18) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage16) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage12) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage10) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage20) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage20_11001)))) begin
        sample_period_we1 = 4'd7;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage8) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2_11001)))) begin
        sample_period_we1 = 4'd3;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln18_reg_2022 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        sample_period_we1 = 4'd15;
    end else begin
        sample_period_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_0_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_0_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_0_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_0_sample_V_ce0 = 1'b1;
    end else begin
        samples_0_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_0_sample_V_we0 = 1'b1;
    end else begin
        samples_0_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_0_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_0_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_0_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_0_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_0_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_0_timestamp_V_we0 = 1'b1;
    end else begin
        samples_0_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_10_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_10_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_10_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_10_sample_V_ce0 = 1'b1;
    end else begin
        samples_10_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_10_sample_V_we0 = 1'b1;
    end else begin
        samples_10_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_10_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_10_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_10_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_10_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_10_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_10_timestamp_V_we0 = 1'b1;
    end else begin
        samples_10_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_11_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_11_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_11_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_11_sample_V_ce0 = 1'b1;
    end else begin
        samples_11_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_11_sample_V_we0 = 1'b1;
    end else begin
        samples_11_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_11_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_11_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_11_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_11_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_11_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_11_timestamp_V_we0 = 1'b1;
    end else begin
        samples_11_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_1_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_1_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_1_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_1_sample_V_ce0 = 1'b1;
    end else begin
        samples_1_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_1_sample_V_we0 = 1'b1;
    end else begin
        samples_1_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_1_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_1_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_1_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_1_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_1_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_1_timestamp_V_we0 = 1'b1;
    end else begin
        samples_1_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_2_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_2_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_2_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_2_sample_V_ce0 = 1'b1;
    end else begin
        samples_2_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_2_sample_V_we0 = 1'b1;
    end else begin
        samples_2_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_2_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_2_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_2_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_2_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_2_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_2_timestamp_V_we0 = 1'b1;
    end else begin
        samples_2_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_3_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_3_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_3_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_3_sample_V_ce0 = 1'b1;
    end else begin
        samples_3_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_3_sample_V_we0 = 1'b1;
    end else begin
        samples_3_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_3_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_3_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_3_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_3_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_3_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_3_timestamp_V_we0 = 1'b1;
    end else begin
        samples_3_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_4_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_4_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_4_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_4_sample_V_ce0 = 1'b1;
    end else begin
        samples_4_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_4_sample_V_we0 = 1'b1;
    end else begin
        samples_4_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_4_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_4_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_4_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_4_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_4_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_4_timestamp_V_we0 = 1'b1;
    end else begin
        samples_4_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_5_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_5_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_5_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_5_sample_V_ce0 = 1'b1;
    end else begin
        samples_5_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_5_sample_V_we0 = 1'b1;
    end else begin
        samples_5_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_5_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_5_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_5_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_5_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_5_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_5_timestamp_V_we0 = 1'b1;
    end else begin
        samples_5_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_6_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_6_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_6_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_6_sample_V_ce0 = 1'b1;
    end else begin
        samples_6_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_6_sample_V_we0 = 1'b1;
    end else begin
        samples_6_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_6_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_6_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_6_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_6_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_6_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_6_timestamp_V_we0 = 1'b1;
    end else begin
        samples_6_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_7_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_7_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_7_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_7_sample_V_ce0 = 1'b1;
    end else begin
        samples_7_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_7_sample_V_we0 = 1'b1;
    end else begin
        samples_7_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_7_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_7_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_7_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_7_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_7_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_7_timestamp_V_we0 = 1'b1;
    end else begin
        samples_7_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_8_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_8_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_8_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_8_sample_V_ce0 = 1'b1;
    end else begin
        samples_8_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_8_sample_V_we0 = 1'b1;
    end else begin
        samples_8_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_8_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_8_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_8_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_8_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_8_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_8_timestamp_V_we0 = 1'b1;
    end else begin
        samples_8_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_9_sample_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_9_sample_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_9_sample_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_9_sample_V_ce0 = 1'b1;
    end else begin
        samples_9_sample_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_9_sample_V_we0 = 1'b1;
    end else begin
        samples_9_sample_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        samples_9_timestamp_V_address0 = i_1_cast4_fu_1288_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        samples_9_timestamp_V_address0 = i_cast3_reg_1929;
    end else begin
        samples_9_timestamp_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        samples_9_timestamp_V_ce0 = 1'b1;
    end else begin
        samples_9_timestamp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_1_reg_1925 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        samples_9_timestamp_V_we0 = 1'b1;
    end else begin
        samples_9_timestamp_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        sliding_window_buffer_1_ce0 = 1'b1;
    end else begin
        sliding_window_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        sliding_window_buffer_1_we0 = 1'b1;
    end else begin
        sliding_window_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln119_fu_1044_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln119_fu_1044_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln119_1_fu_1060_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln119_1_fu_1060_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln18_fu_1283_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((icmp_ln18_fu_1283_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((1'b0 == ap_block_pp1_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_pp1_stage9 : begin
            if ((1'b0 == ap_block_pp1_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end
        end
        ap_ST_fsm_pp1_stage10 : begin
            if ((1'b0 == ap_block_pp1_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end
        end
        ap_ST_fsm_pp1_stage11 : begin
            if ((1'b0 == ap_block_pp1_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end
        end
        ap_ST_fsm_pp1_stage12 : begin
            if ((1'b0 == ap_block_pp1_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end
        end
        ap_ST_fsm_pp1_stage13 : begin
            if ((1'b0 == ap_block_pp1_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end
        end
        ap_ST_fsm_pp1_stage14 : begin
            if ((1'b0 == ap_block_pp1_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end
        end
        ap_ST_fsm_pp1_stage15 : begin
            if ((1'b0 == ap_block_pp1_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end
        end
        ap_ST_fsm_pp1_stage16 : begin
            if ((1'b0 == ap_block_pp1_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end
        end
        ap_ST_fsm_pp1_stage17 : begin
            if ((1'b0 == ap_block_pp1_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end
        end
        ap_ST_fsm_pp1_stage18 : begin
            if ((1'b0 == ap_block_pp1_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end
        end
        ap_ST_fsm_pp1_stage19 : begin
            if ((1'b0 == ap_block_pp1_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end
        end
        ap_ST_fsm_pp1_stage20 : begin
            if ((1'b0 == ap_block_pp1_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln119_fu_1050_p2 = (i_reg_1021 + 4'd1);

assign add_ln18_fu_1273_p2 = (ap_phi_mux_i_1_phi_fu_1036_p4 + 4'd1);

assign add_ln20_10_fu_1670_p2 = (add_ln20_20_reg_2246 + 10'd32);

assign add_ln20_11_fu_1694_p2 = (add_ln20_20_reg_2246 + 10'd36);

assign add_ln20_12_fu_1718_p2 = (add_ln20_20_reg_2246 + 10'd40);

assign add_ln20_13_fu_1742_p2 = (add_ln20_20_reg_2246 + 10'd44);

assign add_ln20_14_fu_1766_p2 = (add_ln20_20_reg_2246 + 10'd48);

assign add_ln20_15_fu_1790_p2 = (add_ln20_20_reg_2246 + 10'd52);

assign add_ln20_16_fu_1814_p2 = (add_ln20_20_reg_2246 + 10'd56);

assign add_ln20_17_fu_1838_p2 = (add_ln20_20_reg_2246 + 10'd60);

assign add_ln20_18_fu_1862_p2 = (add_ln20_20_reg_2246 + 10'd64);

assign add_ln20_19_fu_1886_p2 = (add_ln20_20_reg_2246 + 10'd68);

assign add_ln20_1_fu_1422_p2 = (add_ln20_20_reg_2246 + 10'd10);

assign add_ln20_20_fu_1336_p2 = (shl_ln20_6_fu_1316_p3 + zext_ln20_fu_1332_p1);

assign add_ln20_2_fu_1454_p2 = (add_ln20_20_reg_2246 + 10'd12);

assign add_ln20_3_fu_1478_p2 = (add_ln20_20_reg_2246 + 10'd14);

assign add_ln20_4_fu_1510_p2 = (add_ln20_20_reg_2246 + 10'd16);

assign add_ln20_5_fu_1534_p2 = (add_ln20_20_reg_2246 + 10'd18);

assign add_ln20_6_fu_1566_p2 = (add_ln20_20_reg_2246 + 10'd20);

assign add_ln20_7_fu_1590_p2 = (add_ln20_20_reg_2246 + 10'd22);

assign add_ln20_8_fu_1622_p2 = (add_ln20_20_reg_2246 + 10'd24);

assign add_ln20_9_fu_1646_p2 = (add_ln20_20_reg_2246 + 10'd28);

assign add_ln20_fu_1398_p2 = (add_ln20_20_reg_2246 + 10'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage10 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage11 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage12 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage13 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage14 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage15 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage16 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage17 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp1_stage18 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage19 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage20 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage9 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign buffer_in_0_address0 = i_cast3_fu_1065_p1;

assign buffer_in_10_address0 = i_cast3_fu_1065_p1;

assign buffer_in_11_address0 = i_cast3_fu_1065_p1;

assign buffer_in_1_address0 = i_cast3_fu_1065_p1;

assign buffer_in_2_address0 = i_cast3_fu_1065_p1;

assign buffer_in_3_address0 = i_cast3_fu_1065_p1;

assign buffer_in_4_address0 = i_cast3_fu_1065_p1;

assign buffer_in_5_address0 = i_cast3_fu_1065_p1;

assign buffer_in_6_address0 = i_cast3_fu_1065_p1;

assign buffer_in_7_address0 = i_cast3_fu_1065_p1;

assign buffer_in_8_address0 = i_cast3_fu_1065_p1;

assign buffer_in_9_address0 = i_cast3_fu_1065_p1;

assign i_1_cast133_fu_1279_p1 = ap_phi_mux_i_1_phi_fu_1036_p4;

assign i_1_cast4_fu_1288_p1 = ap_phi_mux_i_1_phi_fu_1036_p4;

assign i_cast3_fu_1065_p1 = i_reg_1021;

assign i_cast_fu_1056_p1 = i_reg_1021;

assign icmp_ln119_1_fu_1060_p2 = ((i_cast_fu_1056_p1 == n_samples) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_1044_p2 = ((n_samples == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_1283_p2 = ((i_1_cast133_fu_1279_p1 == n_samples) ? 1'b1 : 1'b0);

assign lshr_ln20_10_fu_1679_p4 = {{add_ln20_10_fu_1670_p2[9:2]}};

assign lshr_ln20_11_fu_1703_p4 = {{add_ln20_11_fu_1694_p2[9:2]}};

assign lshr_ln20_12_fu_1727_p4 = {{add_ln20_12_fu_1718_p2[9:2]}};

assign lshr_ln20_13_fu_1751_p4 = {{add_ln20_13_fu_1742_p2[9:2]}};

assign lshr_ln20_14_fu_1775_p4 = {{add_ln20_14_fu_1766_p2[9:2]}};

assign lshr_ln20_15_fu_1799_p4 = {{add_ln20_15_fu_1790_p2[9:2]}};

assign lshr_ln20_16_fu_1823_p4 = {{add_ln20_16_fu_1814_p2[9:2]}};

assign lshr_ln20_17_fu_1847_p4 = {{add_ln20_17_fu_1838_p2[9:2]}};

assign lshr_ln20_18_fu_1871_p4 = {{add_ln20_18_fu_1862_p2[9:2]}};

assign lshr_ln20_1_fu_1407_p4 = {{add_ln20_fu_1398_p2[9:2]}};

assign lshr_ln20_2_fu_1439_p4 = {{add_ln20_1_fu_1422_p2[9:2]}};

assign lshr_ln20_3_fu_1463_p4 = {{add_ln20_2_fu_1454_p2[9:2]}};

assign lshr_ln20_4_fu_1495_p4 = {{add_ln20_3_fu_1478_p2[9:2]}};

assign lshr_ln20_5_fu_1519_p4 = {{add_ln20_4_fu_1510_p2[9:2]}};

assign lshr_ln20_6_fu_1551_p4 = {{add_ln20_5_fu_1534_p2[9:2]}};

assign lshr_ln20_7_fu_1575_p4 = {{add_ln20_6_fu_1566_p2[9:2]}};

assign lshr_ln20_8_fu_1607_p4 = {{add_ln20_7_fu_1590_p2[9:2]}};

assign lshr_ln20_9_fu_1631_p4 = {{add_ln20_8_fu_1622_p2[9:2]}};

assign lshr_ln20_s_fu_1655_p4 = {{add_ln20_9_fu_1646_p2[9:2]}};

assign lshr_ln_fu_1342_p4 = {{add_ln20_20_fu_1336_p2[9:2]}};

assign or_ln20_fu_1372_p2 = (lshr_ln_fu_1342_p4 | 8'd1);

assign samples_0_sample_V_d0 = buffer_in_0_q0[11:0];

assign samples_0_timestamp_V_d0 = {{buffer_in_0_q0[31:12]}};

assign samples_10_sample_V_d0 = buffer_in_10_q0[11:0];

assign samples_10_timestamp_V_d0 = {{buffer_in_10_q0[31:12]}};

assign samples_11_sample_V_d0 = buffer_in_11_q0[11:0];

assign samples_11_timestamp_V_d0 = {{buffer_in_11_q0[31:12]}};

assign samples_1_sample_V_d0 = buffer_in_1_q0[11:0];

assign samples_1_timestamp_V_d0 = {{buffer_in_1_q0[31:12]}};

assign samples_2_sample_V_d0 = buffer_in_2_q0[11:0];

assign samples_2_timestamp_V_d0 = {{buffer_in_2_q0[31:12]}};

assign samples_3_sample_V_d0 = buffer_in_3_q0[11:0];

assign samples_3_timestamp_V_d0 = {{buffer_in_3_q0[31:12]}};

assign samples_4_sample_V_d0 = buffer_in_4_q0[11:0];

assign samples_4_timestamp_V_d0 = {{buffer_in_4_q0[31:12]}};

assign samples_5_sample_V_d0 = buffer_in_5_q0[11:0];

assign samples_5_timestamp_V_d0 = {{buffer_in_5_q0[31:12]}};

assign samples_6_sample_V_d0 = buffer_in_6_q0[11:0];

assign samples_6_timestamp_V_d0 = {{buffer_in_6_q0[31:12]}};

assign samples_7_sample_V_d0 = buffer_in_7_q0[11:0];

assign samples_7_timestamp_V_d0 = {{buffer_in_7_q0[31:12]}};

assign samples_8_sample_V_d0 = buffer_in_8_q0[11:0];

assign samples_8_timestamp_V_d0 = {{buffer_in_8_q0[31:12]}};

assign samples_9_sample_V_d0 = buffer_in_9_q0[11:0];

assign samples_9_timestamp_V_d0 = {{buffer_in_9_q0[31:12]}};

assign shl_ln20_2_fu_1427_p3 = {{samples_5_sample_V_load_reg_2151}, {16'd0}};

assign shl_ln20_3_fu_1483_p3 = {{samples_7_sample_V_load_reg_2161}, {16'd0}};

assign shl_ln20_4_fu_1539_p3 = {{samples_9_sample_V_load_reg_2171}, {16'd0}};

assign shl_ln20_5_fu_1595_p3 = {{samples_11_sample_V_load_reg_2181}, {16'd0}};

assign shl_ln20_6_fu_1316_p3 = {{i_1_reg_1032}, {6'd0}};

assign shl_ln20_7_fu_1324_p3 = {{i_1_reg_1032}, {3'd0}};

assign sliding_window_buffer_1_address0 = 64'd0;

assign sliding_window_buffer_1_d0 = n_samples;

assign tmp_1_fu_1383_p4 = {{{samples_3_sample_V_q0}, {4'd0}}, {samples_2_sample_V_q0}};

assign tmp_s_fu_1357_p4 = {{{samples_1_sample_V_q0}, {4'd0}}, {samples_0_sample_V_q0}};

assign zext_ln20_10_fu_1571_p1 = samples_10_sample_V_load_reg_2176;

assign zext_ln20_11_fu_1449_p1 = lshr_ln20_2_fu_1439_p4;

assign zext_ln20_12_fu_1627_p1 = samples_0_timestamp_V_load_reg_2186;

assign zext_ln20_13_fu_1651_p1 = samples_1_timestamp_V_load_reg_2191;

assign zext_ln20_14_fu_1675_p1 = samples_2_timestamp_V_load_reg_2196;

assign zext_ln20_15_fu_1699_p1 = samples_3_timestamp_V_load_reg_2201;

assign zext_ln20_16_fu_1723_p1 = samples_4_timestamp_V_load_reg_2206;

assign zext_ln20_17_fu_1747_p1 = samples_5_timestamp_V_load_reg_2211;

assign zext_ln20_18_fu_1771_p1 = samples_6_timestamp_V_load_reg_2216;

assign zext_ln20_19_fu_1795_p1 = samples_7_timestamp_V_load_reg_2221;

assign zext_ln20_1_fu_1367_p1 = tmp_s_fu_1357_p4;

assign zext_ln20_20_fu_1819_p1 = samples_8_timestamp_V_load_reg_2226;

assign zext_ln20_21_fu_1843_p1 = samples_9_timestamp_V_load_reg_2231;

assign zext_ln20_22_fu_1867_p1 = samples_10_timestamp_V_load_reg_2236;

assign zext_ln20_23_fu_1901_p1 = samples_11_timestamp_V_load_reg_2241;

assign zext_ln20_24_fu_1473_p1 = lshr_ln20_3_fu_1463_p4;

assign zext_ln20_25_fu_1490_p1 = shl_ln20_3_fu_1483_p3;

assign zext_ln20_26_fu_1505_p1 = lshr_ln20_4_fu_1495_p4;

assign zext_ln20_27_fu_1529_p1 = lshr_ln20_5_fu_1519_p4;

assign zext_ln20_28_fu_1546_p1 = shl_ln20_4_fu_1539_p3;

assign zext_ln20_29_fu_1561_p1 = lshr_ln20_6_fu_1551_p4;

assign zext_ln20_2_fu_1352_p1 = lshr_ln_fu_1342_p4;

assign zext_ln20_30_fu_1585_p1 = lshr_ln20_7_fu_1575_p4;

assign zext_ln20_31_fu_1602_p1 = shl_ln20_5_fu_1595_p3;

assign zext_ln20_32_fu_1617_p1 = lshr_ln20_8_fu_1607_p4;

assign zext_ln20_33_fu_1641_p1 = lshr_ln20_9_fu_1631_p4;

assign zext_ln20_34_fu_1665_p1 = lshr_ln20_s_fu_1655_p4;

assign zext_ln20_35_fu_1689_p1 = lshr_ln20_10_fu_1679_p4;

assign zext_ln20_36_fu_1713_p1 = lshr_ln20_11_fu_1703_p4;

assign zext_ln20_37_fu_1737_p1 = lshr_ln20_12_fu_1727_p4;

assign zext_ln20_38_fu_1761_p1 = lshr_ln20_13_fu_1751_p4;

assign zext_ln20_39_fu_1785_p1 = lshr_ln20_14_fu_1775_p4;

assign zext_ln20_3_fu_1393_p1 = tmp_1_fu_1383_p4;

assign zext_ln20_40_fu_1809_p1 = lshr_ln20_15_fu_1799_p4;

assign zext_ln20_41_fu_1833_p1 = lshr_ln20_16_fu_1823_p4;

assign zext_ln20_42_fu_1857_p1 = lshr_ln20_17_fu_1847_p4;

assign zext_ln20_43_fu_1881_p1 = lshr_ln20_18_fu_1871_p4;

assign zext_ln20_44_fu_1905_p1 = lshr_ln20_19_reg_2270;

assign zext_ln20_4_fu_1403_p1 = samples_4_sample_V_load_reg_2146;

assign zext_ln20_5_fu_1378_p1 = or_ln20_fu_1372_p2;

assign zext_ln20_6_fu_1459_p1 = samples_6_sample_V_load_reg_2156;

assign zext_ln20_7_fu_1417_p1 = lshr_ln20_1_fu_1407_p4;

assign zext_ln20_8_fu_1515_p1 = samples_8_sample_V_load_reg_2166;

assign zext_ln20_9_fu_1434_p1 = shl_ln20_2_fu_1427_p3;

assign zext_ln20_fu_1332_p1 = shl_ln20_7_fu_1324_p3;

always @ (posedge ap_clk) begin
    i_cast3_reg_1929[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    add_ln20_20_reg_2246[2:0] <= 3'b000;
end

endmodule //SlidingWindowMagSampleFetcher_loadSlidingWindow
