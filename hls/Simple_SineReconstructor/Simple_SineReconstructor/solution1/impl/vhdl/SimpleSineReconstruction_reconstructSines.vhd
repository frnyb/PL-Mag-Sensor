-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SimpleSineReconstruction_reconstructSines is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_phases_s_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_phases_s_ce0 : OUT STD_LOGIC;
    this_phases_s_we0 : OUT STD_LOGIC;
    this_phases_s_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_amplitudes_s_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_amplitudes_s_ce0 : OUT STD_LOGIC;
    this_amplitudes_s_we0 : OUT STD_LOGIC;
    this_amplitudes_s_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sine_data_sliding_window_front_ptr_s : IN STD_LOGIC_VECTOR (4 downto 0);
    sine_data_sliding_window_back_ptr_s : IN STD_LOGIC_VECTOR (4 downto 0);
    sine_data_sliding_window_buffer_max_val_times_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_11_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_11_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_10_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_10_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_9_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_9_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_8_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_8_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_7_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_7_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_6_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_6_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_5_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_5_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_4_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_4_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_3_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_3_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_2_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_2_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_1_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_1_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_max_val_times_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_max_val_times_0_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_max_val_times_0_q0 : IN STD_LOGIC_VECTOR (20 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_11_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_11_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_10_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_10_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_9_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_9_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_8_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_8_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_7_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_7_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_6_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_6_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_5_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_5_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_4_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_4_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_3_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_3_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_2_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_2_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_1_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_1_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sine_data_sliding_window_buffer_amplitudes_V_0_ce0 : OUT STD_LOGIC;
    sine_data_sliding_window_buffer_amplitudes_V_0_q0 : IN STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of SimpleSineReconstruction_reconstructSines is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (49 downto 0) := "00000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (49 downto 0) := "00000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (49 downto 0) := "00000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (49 downto 0) := "00000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (49 downto 0) := "00000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (49 downto 0) := "00000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (49 downto 0) := "00001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (49 downto 0) := "00010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (49 downto 0) := "00100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (49 downto 0) := "01000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (49 downto 0) := "10000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv60_C2F700000000000 : STD_LOGIC_VECTOR (59 downto 0) := "110000101111011100000000000000000000000000000000000000000000";
    constant ap_const_lv199_lc_1 : STD_LOGIC_VECTOR (198 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010110010110000101111001110000101001110100101100110110111110100100010000100001101110101000010011101";
    constant ap_const_lv199_lc_2 : STD_LOGIC_VECTOR (198 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_C6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000110";
    constant ap_const_lv99_0 : STD_LOGIC_VECTOR (98 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv125_1921FB544430000000000 : STD_LOGIC_VECTOR (124 downto 0) := "00000000000000000000000000000000000000000000110010010000111111011010101000100010000110000000000000000000000000000000000000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv49_1921FB54443 : STD_LOGIC_VECTOR (48 downto 0) := "0000000011001001000011111101101010100010001000011";
    constant ap_const_lv49_1FE6DE04ABBBD : STD_LOGIC_VECTOR (48 downto 0) := "1111111100110110111100000010010101011101110111101";
    constant ap_const_lv99_1921FB544430000000000 : STD_LOGIC_VECTOR (98 downto 0) := "000000000000000000110010010000111111011010101000100010000110000000000000000000000000000000000000000";
    constant ap_const_lv99_7FFFE6DE04ABBBD0000000000 : STD_LOGIC_VECTOR (98 downto 0) := "111111111111111111001101101111000000100101010111011101111010000000000000000000000000000000000000000";
    constant ap_const_lv199_lc_3 : STD_LOGIC_VECTOR (198 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101011";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv60_FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (59 downto 0) := "111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv60_1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv60_1921FB54443 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000011001001000011111101101010100010001000011";
    constant ap_const_lv60_FFFFE6DE04ABBBD : STD_LOGIC_VECTOR (59 downto 0) := "111111111111111111100110110111100000010010101011101110111101";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_5_reg_998 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_998_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state19_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_5_reg_998_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal max_amplitude_index_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_amplitude_V_reg_1022 : STD_LOGIC_VECTOR (59 downto 0);
    signal mean_amplitudes_V_q1 : STD_LOGIC_VECTOR (59 downto 0);
    signal reg_1178 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal icmp_ln326_reg_5184 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal mean_phases_V_q1 : STD_LOGIC_VECTOR (59 downto 0);
    signal reg_1182 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_fu_1129_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal reg_1186 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln935_2_fu_2512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal icmp_ln935_2_reg_5414 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln375_1_fu_3156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1160_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal reg_1190 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln935_3_fu_2801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_3_reg_5461 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1194 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal add_ln286_fu_1198_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln26_fu_1220_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln26_reg_4912 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln22_fu_1228_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln22_reg_4917 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_fu_1232_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_reg_4922 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln293_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln34_fu_1292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_reg_4931 : STD_LOGIC_VECTOR (63 downto 0);
    signal cmp33_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp33_reg_4975 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln298_fu_1306_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln298_reg_5079 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln298_fu_1312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln298_reg_5084 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln298_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_amplitudes_V_addr_2_reg_5098 : STD_LOGIC_VECTOR (3 downto 0);
    signal start_val_offset_fu_1352_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal start_val_offset_reg_5108 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_47_reg_5113 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1148_2_fu_1377_p2 : STD_LOGIC_VECTOR (198 downto 0);
    signal mul_ln1148_2_reg_5119 : STD_LOGIC_VECTOR (198 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal phase_V_8_fu_1428_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal phase_V_8_reg_5125 : STD_LOGIC_VECTOR (98 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal phase_V_reg_5130 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_50_reg_5135 : STD_LOGIC_VECTOR (0 downto 0);
    signal phase_V_9_fu_1468_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal phase_V_9_reg_5140 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sext_ln304_1_fu_1475_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal sext_ln304_1_reg_5147 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln1494_1_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1495_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_phases_V_addr_3_reg_5174 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln326_fu_1571_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln326_reg_5179 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln326_fu_1577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_reg_5184_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln326_reg_5184_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_amplitudes_V_addr_1_reg_5188 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_amplitudes_V_addr_1_reg_5188_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_amplitudes_V_addr_1_reg_5188_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_phases_V_addr_2_reg_5194 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_phases_V_addr_2_reg_5194_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_phases_V_addr_2_reg_5194_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_5200 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_5200_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1109_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_5206 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_5206_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1148_fu_1601_p2 : STD_LOGIC_VECTOR (198 downto 0);
    signal mul_ln1148_reg_5212 : STD_LOGIC_VECTOR (198 downto 0);
    signal tmp_41_reg_5217 : STD_LOGIC_VECTOR (56 downto 0);
    signal mul_ln1148_1_fu_1629_p2 : STD_LOGIC_VECTOR (198 downto 0);
    signal mul_ln1148_1_reg_5222 : STD_LOGIC_VECTOR (198 downto 0);
    signal tmp_44_reg_5227 : STD_LOGIC_VECTOR (56 downto 0);
    signal max_amplitude_V_1_fu_1690_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal max_amplitude_index_1_fu_1702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln338_fu_1749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln338_reg_5242 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_Repl2_5_reg_5258 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_1761_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Val2_16_reg_5263 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln944_fu_1799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_5269 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_fu_1897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_reg_5275 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_fu_1917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_reg_5280 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_1925_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_5285 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln935_1_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_1_reg_5290 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_61_reg_5295 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_16_fu_1941_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_16_reg_5300 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln944_1_fu_1979_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_1_reg_5306 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_1_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_1_reg_5312 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_2_fu_2097_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_2_reg_5317 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_1_fu_2105_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_1_reg_5322 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_fu_2243_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_reg_5327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tobool_i_i701_fu_2376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool_i_i701_reg_5333 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_79_fu_2382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_79_reg_5338 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool_i_i295_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool_i_i295_reg_5343 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_85_fu_2402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_85_reg_5348 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_20_fu_2416_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_20_reg_5353 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_21_fu_2424_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_21_reg_5362 : STD_LOGIC_VECTOR (59 downto 0);
    signal i_8_fu_2432_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_8_reg_5371 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal zext_ln355_fu_2468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln355_reg_5379 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln345_fu_2438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_phases_V_addr_4_reg_5385 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_amplitudes_V_addr_4_reg_5390 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln365_fu_2496_p2 : STD_LOGIC_VECTOR (98 downto 0);
    signal add_ln365_reg_5400 : STD_LOGIC_VECTOR (98 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal phase_V_10_reg_5405 : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_fu_1117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_65_reg_5419 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln944_2_fu_2537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_2_reg_5424 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_2_fu_2635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_2_reg_5430 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_4_fu_2655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_4_reg_5435 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_2_fu_2663_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_2_reg_5440 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln744_2_fu_2781_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal data_V_fu_2785_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_reg_5450 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_fu_2797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_reg_5456 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1146_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_70_reg_5466 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln944_3_fu_2827_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_3_reg_5471 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_3_fu_2925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_3_reg_5477 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_6_fu_2945_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_6_reg_5482 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_3_fu_2953_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_3_reg_5487 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln744_3_fu_3071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal icmp_ln375_fu_3087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_reg_5497 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_1_fu_3093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_1_reg_5502 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln351_1_fu_3111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln375_2_fu_3130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_2_reg_5512 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_3_fu_3136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_3_reg_5517 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_75_reg_5525 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln944_4_fu_3182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_4_reg_5530 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_4_fu_3280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_4_reg_5536 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_8_fu_3300_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_8_reg_5541 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_4_fu_3308_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_4_reg_5546 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_9_reg_5551 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_36_reg_5556 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_5_fu_3535_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_5_reg_5561 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_10_reg_5566 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_45_reg_5571 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_6_fu_3762_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_6_reg_5576 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_94_reg_5581 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln944_8_fu_3786_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_8_reg_5586 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_8_fu_3884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_8_reg_5592 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_16_fu_3904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_16_reg_5597 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_8_fu_3912_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_8_reg_5602 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln935_2_fu_4034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_2_reg_5607 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal retval_0_i_i767_fu_4089_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal retval_0_i_i767_reg_5614 : STD_LOGIC_VECTOR (31 downto 0);
    signal retval_0_i_i361_fu_4144_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal retval_0_i_i361_reg_5619 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1085_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_3_reg_5624 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_4_reg_5629 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_2_fu_4289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal bitcast_ln351_3_fu_4305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln385_fu_4339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln385_reg_5645 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln385_1_fu_4345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln385_1_reg_5650 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln385_1_fu_4363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln385_1_reg_5655 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln390_fu_4399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln390_reg_5666 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln390_1_fu_4405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln390_1_reg_5671 : STD_LOGIC_VECTOR (0 downto 0);
    signal amplitude_V_4_fu_4467_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal amplitude_V_4_reg_5676 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal p_Result_90_reg_5683 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_4_fu_4484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_4_reg_5689 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal tmp_V_22_fu_4494_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_22_reg_5694 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln944_7_fu_4530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_7_reg_5700 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln954_7_fu_4628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln954_7_reg_5706 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_14_fu_4648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln954_14_reg_5711 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_7_fu_4656_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_7_reg_5716 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state19 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal mean_amplitudes_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_amplitudes_V_ce0 : STD_LOGIC;
    signal mean_amplitudes_V_we0 : STD_LOGIC;
    signal mean_amplitudes_V_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal mean_amplitudes_V_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal mean_amplitudes_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_amplitudes_V_ce1 : STD_LOGIC;
    signal mean_amplitudes_V_we1 : STD_LOGIC;
    signal mean_phases_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_phases_V_ce0 : STD_LOGIC;
    signal mean_phases_V_we0 : STD_LOGIC;
    signal mean_phases_V_d0 : STD_LOGIC_VECTOR (59 downto 0);
    signal mean_phases_V_q0 : STD_LOGIC_VECTOR (59 downto 0);
    signal mean_phases_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_phases_V_ce1 : STD_LOGIC;
    signal mean_phases_V_we1 : STD_LOGIC;
    signal first_phases_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal first_phases_V_ce0 : STD_LOGIC;
    signal first_phases_V_we0 : STD_LOGIC;
    signal first_phases_V_q0 : STD_LOGIC_VECTOR (47 downto 0);
    signal psd_amplitudes_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal psd_amplitudes_V_ce0 : STD_LOGIC;
    signal psd_amplitudes_V_we0 : STD_LOGIC;
    signal psd_amplitudes_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal psd_amplitudes_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal psd_amplitudes_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal psd_amplitudes_V_ce1 : STD_LOGIC;
    signal psd_amplitudes_V_we1 : STD_LOGIC;
    signal psd_amplitudes_V_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal psd_max_val_times_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal psd_max_val_times_ce0 : STD_LOGIC;
    signal psd_max_val_times_we0 : STD_LOGIC;
    signal psd_max_val_times_d0 : STD_LOGIC_VECTOR (20 downto 0);
    signal psd_max_val_times_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal psd_max_val_times_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal psd_max_val_times_ce1 : STD_LOGIC;
    signal psd_max_val_times_we1 : STD_LOGIC;
    signal psd_max_val_times_d1 : STD_LOGIC_VECTOR (20 downto 0);
    signal i_reg_952 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln286_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_reg_963 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_974 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal phase_V_5_reg_985 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_phi_mux_i_5_phi_fu_1002_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal idx_8_reg_1034 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal current_phase_V_2_reg_1045 : STD_LOGIC_VECTOR (59 downto 0);
    signal retval_0_i_i1152_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal retval_0_i_i997_reg_1067 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_cast_fu_1210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln329_cast_fu_1583_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln703_fu_1337_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal select_ln1148_1_fu_1676_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln703_2_fu_1564_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal select_ln1148_3_fu_1741_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal select_ln935_4_fu_4269_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_1_fu_2368_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_3_fu_4776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1079_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_fu_1093_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1097_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1124_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_fu_1154_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln293_fu_1238_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buffer_idx_fu_1248_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln22_2_fu_1253_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_1263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln30_fu_1271_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln24_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_idx_5_fu_1277_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_idx_6_fu_1285_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_1325_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln703_fu_1333_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal max_val_offset_1_fu_1344_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal t_4_fu_1366_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal mul_ln1148_2_fu_1377_p1 : STD_LOGIC_VECTOR (100 downto 0);
    signal sub_ln1148_4_fu_1383_p2 : STD_LOGIC_VECTOR (198 downto 0);
    signal tmp_48_fu_1388_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_49_fu_1402_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln1148_5_fu_1398_p1 : STD_LOGIC_VECTOR (98 downto 0);
    signal sext_ln1148_6_fu_1411_p1 : STD_LOGIC_VECTOR (98 downto 0);
    signal select_ln1148_4_fu_1415_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal sub_ln1148_5_fu_1422_p2 : STD_LOGIC_VECTOR (98 downto 0);
    signal r_V_fu_1438_p0 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_fu_1438_p1 : STD_LOGIC_VECTOR (81 downto 0);
    signal r_V_fu_1438_p2 : STD_LOGIC_VECTOR (124 downto 0);
    signal zext_ln415_fu_1465_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln304_fu_1462_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1192_fu_1479_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1494_fu_1489_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_fu_1483_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_2_fu_1498_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_52_fu_1510_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal lhs_V_3_fu_1517_p1 : STD_LOGIC_VECTOR (98 downto 0);
    signal ret_V_3_fu_1521_p2 : STD_LOGIC_VECTOR (98 downto 0);
    signal tmp_51_fu_1537_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal lhs_V_2_fu_1544_p1 : STD_LOGIC_VECTOR (98 downto 0);
    signal ret_V_1_fu_1548_p2 : STD_LOGIC_VECTOR (98 downto 0);
    signal t_fu_1589_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal mul_ln1148_fu_1601_p1 : STD_LOGIC_VECTOR (100 downto 0);
    signal t_3_fu_1617_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal mul_ln1148_1_fu_1629_p1 : STD_LOGIC_VECTOR (100 downto 0);
    signal sub_ln1148_fu_1645_p2 : STD_LOGIC_VECTOR (198 downto 0);
    signal tmp_37_fu_1650_p4 : STD_LOGIC_VECTOR (56 downto 0);
    signal select_ln1148_fu_1660_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal sext_ln1148_1_fu_1666_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln1148_1_fu_1670_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln1494_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln329_fu_1698_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1148_2_fu_1710_p2 : STD_LOGIC_VECTOR (198 downto 0);
    signal tmp_43_fu_1715_p4 : STD_LOGIC_VECTOR (56 downto 0);
    signal select_ln1148_2_fu_1725_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal sext_ln1148_3_fu_1731_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln1148_3_fu_1735_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_fu_1755_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_s_fu_1769_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal t_9_fu_1779_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_1787_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_fu_1795_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_1805_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1811_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_1827_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_1831_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_1837_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_fu_1847_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_fu_1841_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_fu_1851_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_9_fu_1857_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_fu_1863_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_10_fu_1875_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_60_fu_1889_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_1883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_fu_1821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_1869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_1909_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_1_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_fu_1935_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_7_fu_1949_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_62_fu_1959_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1967_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_1_fu_1975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_1_fu_1985_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1991_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_1_fu_2007_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_1_fu_2011_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_1_fu_2017_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_1_fu_2027_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_1_fu_2021_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_1_fu_2031_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_fu_2037_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_2_fu_2043_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_15_fu_2055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_63_fu_2069_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_1_fu_2063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_1_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_1_fu_2049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_1_fu_2089_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_3_fu_2083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_fu_2127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_fu_2132_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_fu_2141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_fu_2146_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_fu_2150_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_fu_2136_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_fu_2155_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_fu_2162_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_fu_2166_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_1_fu_2169_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal p_Val2_s_fu_2175_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_4_fu_2189_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_2205_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_2197_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_2210_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln968_fu_2185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_2216_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal m_41_fu_2223_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_2235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln935_fu_2121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln744_fu_2239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln955_1_fu_2252_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_1_fu_2257_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_1_fu_2266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_1_fu_2271_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_1_fu_2275_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_1_fu_2261_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_8_fu_2280_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_1_fu_2287_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_1_fu_2291_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_12_fu_2294_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_s_fu_2300_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_10_fu_2314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_1_fu_2330_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_1_fu_2322_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_1_fu_2335_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_2_fu_2310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_2341_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_64_fu_2348_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_1_fu_2360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_1_fu_2364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_phase_m_pi_fu_2115_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal ref_phase_p_pi_fu_2109_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_i_i705_fu_2390_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_i_i299_fu_2410_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal idx_8_cast_fu_2444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln349_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln349_fu_2454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_fu_2460_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1494_2_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_1_fu_2480_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal select_ln365_fu_2488_p3 : STD_LOGIC_VECTOR (98 downto 0);
    signal grp_fu_1136_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_66_fu_2517_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_2525_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_2_fu_2533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_2_fu_2543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_2549_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_2_fu_2565_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_2_fu_2569_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_2_fu_2575_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_2_fu_2585_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_2_fu_2579_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_2_fu_2589_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_10_fu_2595_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_4_fu_2601_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_55_fu_2613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_67_fu_2627_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_2_fu_2621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_2_fu_2559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_2_fu_2607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_2_fu_2647_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_5_fu_2641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_2_fu_2667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_2_fu_2672_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_2_fu_2682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_2_fu_2687_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_2_fu_2691_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_2_fu_2676_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_20_fu_2697_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_3_fu_2704_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_2_fu_2708_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_21_fu_2711_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_2_fu_2717_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_16_fu_2731_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_2_fu_2747_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_2_fu_2739_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_2_fu_2752_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_4_fu_2727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_2758_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_68_fu_2765_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_2_fu_2777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_69_fu_2789_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_fu_2793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1168_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_71_fu_2807_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_2815_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_3_fu_2823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_3_fu_2833_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_2839_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_3_fu_2855_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_3_fu_2859_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_3_fu_2865_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_3_fu_2875_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_3_fu_2869_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_3_fu_2879_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_11_fu_2885_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_6_fu_2891_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_59_fu_2903_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_72_fu_2917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_3_fu_2911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_3_fu_2849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_3_fu_2897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_3_fu_2937_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_7_fu_2931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_3_fu_2957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_3_fu_2962_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_3_fu_2972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_3_fu_2977_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_3_fu_2981_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_3_fu_2966_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_29_fu_2987_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_5_fu_2994_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_3_fu_2998_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_33_fu_3001_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_6_fu_3007_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_23_fu_3021_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_3_fu_3037_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_3_fu_3029_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_3_fu_3042_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_6_fu_3017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_3048_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_73_fu_3055_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_3_fu_3067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_3075_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln375_fu_3084_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal data_V_1_fu_3099_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_74_fu_3103_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_1_fu_3107_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_3116_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln375_1_fu_3126_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln375_fu_3142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln375_1_fu_3146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln375_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_76_fu_3162_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_3170_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_4_fu_3178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_4_fu_3188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_3194_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_4_fu_3210_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_4_fu_3214_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_4_fu_3220_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_4_fu_3230_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_4_fu_3224_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_4_fu_3234_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_12_fu_3240_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_8_fu_3246_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_63_fu_3258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_77_fu_3272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_4_fu_3266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_4_fu_3204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_4_fu_3252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_4_fu_3292_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_9_fu_3286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_33_fu_3312_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_80_fu_3321_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_3329_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_5_fu_3337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_5_fu_3341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_5_fu_3347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_3353_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_5_fu_3369_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_5_fu_3373_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_5_fu_3379_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_5_fu_3389_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_5_fu_3383_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_5_fu_3393_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_13_fu_3399_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_10_fu_3405_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_66_fu_3416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_81_fu_3430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_5_fu_3424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_5_fu_3449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_5_fu_3455_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln946_5_fu_3363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_5_fu_3410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln954_5_fu_3472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_5_fu_3478_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln954_5_fu_3437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_5_fu_3464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_11_fu_3443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln954_5_fu_3482_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_5_fu_3459_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_38_fu_3495_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal select_ln954_10_fu_3487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln951_9_fu_3503_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_5_fu_3507_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_39_fu_3511_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal p_Result_42_fu_3539_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_86_fu_3548_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_3556_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_6_fu_3564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_6_fu_3568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_6_fu_3574_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_3580_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_6_fu_3596_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_6_fu_3600_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_6_fu_3606_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_6_fu_3616_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_6_fu_3610_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_6_fu_3620_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_14_fu_3626_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_12_fu_3632_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_69_fu_3643_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_87_fu_3657_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_6_fu_3651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_6_fu_3676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_6_fu_3682_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln946_6_fu_3590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_6_fu_3637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln954_6_fu_3699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_6_fu_3705_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln954_6_fu_3664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_6_fu_3691_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_13_fu_3670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln954_6_fu_3709_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_6_fu_3686_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_42_fu_3722_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal select_ln954_12_fu_3714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln951_11_fu_3730_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_6_fu_3734_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_43_fu_3738_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal p_Result_95_fu_3766_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_3774_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_8_fu_3782_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_8_fu_3792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_3798_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_8_fu_3814_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_8_fu_3818_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_8_fu_3824_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_8_fu_3834_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_8_fu_3828_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_8_fu_3838_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_16_fu_3844_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_16_fu_3850_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_77_fu_3862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_96_fu_3876_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_8_fu_3870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_8_fu_3808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_8_fu_3856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_8_fu_3896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_17_fu_3890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_4_fu_3916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_4_fu_3921_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_4_fu_3931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_4_fu_3936_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_4_fu_3940_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_4_fu_3925_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_35_fu_3946_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_7_fu_3953_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_4_fu_3957_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_36_fu_3960_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_7_fu_3966_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_30_fu_3980_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_4_fu_3996_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_4_fu_3988_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_4_fu_4001_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_8_fu_3976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_4007_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_78_fu_4014_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_4_fu_4026_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_4_fu_4030_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_5_fu_4051_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_5_fu_4044_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_5_fu_4056_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_10_fu_4041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_4062_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_82_fu_4069_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_5_fu_4081_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_5_fu_4085_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln964_6_fu_4106_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_6_fu_4099_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_6_fu_4111_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_12_fu_4096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_4117_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_88_fu_4124_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_6_fu_4136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_6_fu_4140_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln955_8_fu_4151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_8_fu_4156_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_8_fu_4166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_8_fu_4171_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_8_fu_4175_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_8_fu_4160_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_48_fu_4181_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_15_fu_4188_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_8_fu_4192_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_49_fu_4195_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_13_fu_4201_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_58_fu_4215_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_8_fu_4231_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_8_fu_4223_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_8_fu_4236_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_16_fu_4211_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_4242_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_97_fu_4249_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_8_fu_4261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_8_fu_4265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_fu_4277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_83_fu_4281_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_2_fu_4285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_3_fu_4294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_84_fu_4297_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_3_fu_4301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_4311_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln385_fu_4321_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_23_fu_4325_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln385_1_fu_4335_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln385_3_fu_4357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln385_2_fu_4351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_4_fu_4369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_89_fu_4372_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_4_fu_4376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_4385_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln390_fu_4395_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln385_fu_4411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln385_fu_4415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln390_fu_4432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln390_fu_4436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln385_1_fu_4420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal amplitude_V_1_fu_4426_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln390_1_fu_4441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln385_fu_4455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln390_2_fu_4461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal amplitude_V_2_fu_4447_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_V_12_fu_4489_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_49_fu_4500_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_91_fu_4510_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_4518_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal l_7_fu_4526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_7_fu_4536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_4542_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_7_fu_4558_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_7_fu_4562_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_7_fu_4568_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln949_7_fu_4578_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln947_7_fu_4572_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln949_7_fu_4582_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal or_ln949_15_fu_4588_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal and_ln949_14_fu_4594_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_73_fu_4606_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_92_fu_4620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_7_fu_4614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_7_fu_4552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_7_fu_4600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_7_fu_4640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_15_fu_4634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln955_7_fu_4660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln955_7_fu_4665_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln954_7_fu_4674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln954_7_fu_4679_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln954_7_fu_4683_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal shl_ln955_7_fu_4669_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal m_45_fu_4688_p3 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln951_13_fu_4695_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln961_7_fu_4699_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_46_fu_4702_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_11_fu_4708_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_Result_52_fu_4722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_7_fu_4738_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_7_fu_4730_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_7_fu_4743_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln951_14_fu_4718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_4749_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_93_fu_4756_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_7_fu_4768_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln744_7_fu_4772_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1093_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component SimpleSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SimpleSineReconstruction_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component SimpleSineReconstruction_mul_99s_101ns_199_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (98 downto 0);
        din1 : IN STD_LOGIC_VECTOR (100 downto 0);
        dout : OUT STD_LOGIC_VECTOR (198 downto 0) );
    end component;


    component SimpleSineReconstruction_mul_46s_82ns_125_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (45 downto 0);
        din1 : IN STD_LOGIC_VECTOR (81 downto 0);
        dout : OUT STD_LOGIC_VECTOR (124 downto 0) );
    end component;


    component SimpleSineReconstruction_reconstructSines_mean_amplitudes_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (59 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (59 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (59 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component SimpleSineReconstruction_reconstructSines_first_phases_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (47 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component SimpleSineReconstruction_writeSamplesToRAM_sample_sample_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component SimpleSineReconstruction_reconstructSines_psd_max_val_times IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (20 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    mean_amplitudes_V_U : component SimpleSineReconstruction_reconstructSines_mean_amplitudes_V
    generic map (
        DataWidth => 60,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean_amplitudes_V_address0,
        ce0 => mean_amplitudes_V_ce0,
        we0 => mean_amplitudes_V_we0,
        d0 => mean_amplitudes_V_d0,
        q0 => mean_amplitudes_V_q0,
        address1 => mean_amplitudes_V_address1,
        ce1 => mean_amplitudes_V_ce1,
        we1 => mean_amplitudes_V_we1,
        d1 => amplitude_V_4_fu_4467_p3,
        q1 => mean_amplitudes_V_q1);

    mean_phases_V_U : component SimpleSineReconstruction_reconstructSines_mean_amplitudes_V
    generic map (
        DataWidth => 60,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean_phases_V_address0,
        ce0 => mean_phases_V_ce0,
        we0 => mean_phases_V_we0,
        d0 => mean_phases_V_d0,
        q0 => mean_phases_V_q0,
        address1 => mean_phases_V_address1,
        ce1 => mean_phases_V_ce1,
        we1 => mean_phases_V_we1,
        d1 => phase_V_10_reg_5405,
        q1 => mean_phases_V_q1);

    first_phases_V_U : component SimpleSineReconstruction_reconstructSines_first_phases_V
    generic map (
        DataWidth => 48,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => first_phases_V_address0,
        ce0 => first_phases_V_ce0,
        we0 => first_phases_V_we0,
        d0 => phase_V_9_fu_1468_p2,
        q0 => first_phases_V_q0);

    psd_amplitudes_V_U : component SimpleSineReconstruction_writeSamplesToRAM_sample_sample_V
    generic map (
        DataWidth => 12,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => psd_amplitudes_V_address0,
        ce0 => psd_amplitudes_V_ce0,
        we0 => psd_amplitudes_V_we0,
        d0 => psd_amplitudes_V_d0,
        q0 => psd_amplitudes_V_q0,
        address1 => psd_amplitudes_V_address1,
        ce1 => psd_amplitudes_V_ce1,
        we1 => psd_amplitudes_V_we1,
        d1 => psd_amplitudes_V_d1);

    psd_max_val_times_U : component SimpleSineReconstruction_reconstructSines_psd_max_val_times
    generic map (
        DataWidth => 21,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => psd_max_val_times_address0,
        ce0 => psd_max_val_times_ce0,
        we0 => psd_max_val_times_we0,
        d0 => psd_max_val_times_d0,
        q0 => psd_max_val_times_q0,
        address1 => psd_max_val_times_address1,
        ce1 => psd_max_val_times_ce1,
        we1 => psd_max_val_times_we1,
        d1 => psd_max_val_times_d1);

    fsub_32ns_32ns_32_5_full_dsp_1_U1607 : component SimpleSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1079_p0,
        din1 => grp_fu_1079_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1079_p2);

    fsub_32ns_32ns_32_5_full_dsp_1_U1608 : component SimpleSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln935_2_reg_5607,
        din1 => select_ln935_reg_5327,
        ce => ap_const_logic_1,
        dout => grp_fu_1085_p2);

    fsub_32ns_32ns_32_5_full_dsp_1_U1609 : component SimpleSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln935_2_reg_5607,
        din1 => retval_0_i_i361_reg_5619,
        ce => ap_const_logic_1,
        dout => grp_fu_1089_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U1610 : component SimpleSineReconstruction_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1093_p0,
        din1 => grp_fu_1093_p1,
        ce => ap_const_logic_1,
        opcode => grp_fu_1093_opcode,
        dout => grp_fu_1093_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U1611 : component SimpleSineReconstruction_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1097_p0,
        din1 => grp_fu_1097_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1097_p2);

    mul_99s_101ns_199_1_1_U1612 : component SimpleSineReconstruction_mul_99s_101ns_199_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 99,
        din1_WIDTH => 101,
        dout_WIDTH => 199)
    port map (
        din0 => t_4_fu_1366_p3,
        din1 => mul_ln1148_2_fu_1377_p1,
        dout => mul_ln1148_2_fu_1377_p2);

    mul_46s_82ns_125_1_1_U1613 : component SimpleSineReconstruction_mul_46s_82ns_125_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 46,
        din1_WIDTH => 82,
        dout_WIDTH => 125)
    port map (
        din0 => r_V_fu_1438_p0,
        din1 => r_V_fu_1438_p1,
        dout => r_V_fu_1438_p2);

    mul_99s_101ns_199_1_1_U1614 : component SimpleSineReconstruction_mul_99s_101ns_199_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 99,
        din1_WIDTH => 101,
        dout_WIDTH => 199)
    port map (
        din0 => t_fu_1589_p3,
        din1 => mul_ln1148_fu_1601_p1,
        dout => mul_ln1148_fu_1601_p2);

    mul_99s_101ns_199_1_1_U1615 : component SimpleSineReconstruction_mul_99s_101ns_199_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 99,
        din1_WIDTH => 101,
        dout_WIDTH => 199)
    port map (
        din0 => t_3_fu_1617_p3,
        din1 => mul_ln1148_1_fu_1629_p1,
        dout => mul_ln1148_1_fu_1629_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln293_fu_1242_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state19);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((icmp_ln293_fu_1242_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    current_phase_V_2_reg_1045_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                current_phase_V_2_reg_1045 <= phase_V_10_reg_5405;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                current_phase_V_2_reg_1045 <= mean_phases_V_q1;
            end if; 
        end if;
    end process;

    i_4_reg_963_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln298_fu_1319_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i_4_reg_963 <= i_6_reg_4922;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_4_reg_963 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_5_reg_998_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln293_fu_1242_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_5_reg_998 <= ap_const_lv4_0;
            elsif (((icmp_ln326_reg_5184 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i_5_reg_998 <= add_ln326_reg_5179;
            end if; 
        end if;
    end process;

    i_reg_952_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln286_fu_1204_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_952 <= add_ln286_fu_1198_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_952 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    idx_8_reg_1034_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                idx_8_reg_1034 <= i_8_reg_5371;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                idx_8_reg_1034 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j_reg_974_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                j_reg_974 <= add_ln298_reg_5079;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j_reg_974 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    max_amplitude_V_reg_1022_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln293_fu_1242_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                max_amplitude_V_reg_1022 <= ap_const_lv60_0;
            elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln326_reg_5184_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                max_amplitude_V_reg_1022 <= max_amplitude_V_1_fu_1690_p3;
            end if; 
        end if;
    end process;

    phase_V_5_reg_985_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1495_fu_1504_p2 = ap_const_lv1_0) and (icmp_ln1494_1_fu_1492_p2 = ap_const_lv1_0) and (cmp33_reg_4975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                phase_V_5_reg_985 <= sext_ln304_1_reg_5147;
            elsif (((icmp_ln1495_fu_1504_p2 = ap_const_lv1_1) and (icmp_ln1494_1_fu_1492_p2 = ap_const_lv1_0) and (cmp33_reg_4975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                phase_V_5_reg_985 <= ret_V_3_fu_1521_p2(98 downto 39);
            elsif (((icmp_ln1494_1_fu_1492_p2 = ap_const_lv1_1) and (cmp33_reg_4975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                phase_V_5_reg_985 <= ret_V_1_fu_1548_p2(98 downto 39);
            elsif (((cmp33_reg_4975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                phase_V_5_reg_985 <= sext_ln304_1_fu_1475_p1;
            end if; 
        end if;
    end process;

    retval_0_i_i1152_reg_1055_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_2_fu_2512_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                retval_0_i_i1152_reg_1055 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                retval_0_i_i1152_reg_1055 <= bitcast_ln744_2_fu_2781_p1;
            end if; 
        end if;
    end process;

    retval_0_i_i997_reg_1067_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_3_fu_2801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                retval_0_i_i997_reg_1067 <= ap_const_lv32_0;
            elsif (((icmp_ln935_3_reg_5461 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                retval_0_i_i997_reg_1067 <= bitcast_ln744_3_fu_3071_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln298_reg_5079 <= add_ln298_fu_1306_p2;
                    zext_ln298_reg_5084(3 downto 0) <= zext_ln298_fu_1312_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln326_reg_5179 <= add_ln326_fu_1571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                    add_ln365_reg_5400(98 downto 39) <= add_ln365_fu_2496_p2(98 downto 39);
                phase_V_10_reg_5405 <= add_ln365_fu_2496_p2(98 downto 39);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                amplitude_V_4_reg_5676 <= amplitude_V_4_fu_4467_p3;
                p_Result_90_reg_5683 <= amplitude_V_4_fu_4467_p3(59 downto 59);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                    bitcast_ln351_reg_5456(30 downto 0) <= bitcast_ln351_fu_2797_p1(30 downto 0);
                data_V_reg_5450 <= data_V_fu_2785_p1;
                icmp_ln935_3_reg_5461 <= icmp_ln935_3_fu_2801_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln293_fu_1242_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                cmp33_reg_4975 <= cmp33_fu_1300_p2;
                    zext_ln34_reg_4931(3 downto 0) <= zext_ln34_fu_1292_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                dc_3_reg_5624 <= grp_fu_1085_p2;
                dc_4_reg_5629 <= grp_fu_1089_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                i_5_reg_998_pp1_iter1_reg <= i_5_reg_998;
                icmp_ln326_reg_5184 <= icmp_ln326_fu_1577_p2;
                icmp_ln326_reg_5184_pp1_iter1_reg <= icmp_ln326_reg_5184;
                mean_amplitudes_V_addr_1_reg_5188_pp1_iter1_reg <= mean_amplitudes_V_addr_1_reg_5188;
                mean_phases_V_addr_2_reg_5194_pp1_iter1_reg <= mean_phases_V_addr_2_reg_5194;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                i_5_reg_998_pp1_iter2_reg <= i_5_reg_998_pp1_iter1_reg;
                icmp_ln326_reg_5184_pp1_iter2_reg <= icmp_ln326_reg_5184_pp1_iter1_reg;
                mean_amplitudes_V_addr_1_reg_5188_pp1_iter2_reg <= mean_amplitudes_V_addr_1_reg_5188_pp1_iter1_reg;
                mean_phases_V_addr_2_reg_5194_pp1_iter2_reg <= mean_phases_V_addr_2_reg_5194_pp1_iter1_reg;
                tmp_33_reg_5200_pp1_iter2_reg <= tmp_33_reg_5200;
                tmp_42_reg_5206_pp1_iter2_reg <= tmp_42_reg_5206;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_6_reg_4922 <= i_6_fu_1232_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                i_8_reg_5371 <= i_8_fu_2432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                icmp_ln375_1_reg_5502 <= icmp_ln375_1_fu_3093_p2;
                icmp_ln375_reg_5497 <= icmp_ln375_fu_3087_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                icmp_ln375_2_reg_5512 <= icmp_ln375_2_fu_3130_p2;
                icmp_ln375_3_reg_5517 <= icmp_ln375_3_fu_3136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                icmp_ln385_1_reg_5650 <= icmp_ln385_1_fu_4345_p2;
                icmp_ln385_reg_5645 <= icmp_ln385_fu_4339_p2;
                icmp_ln390_1_reg_5671 <= icmp_ln390_1_fu_4405_p2;
                icmp_ln390_reg_5666 <= icmp_ln390_fu_4399_p2;
                or_ln385_1_reg_5655 <= or_ln385_1_fu_4363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                icmp_ln935_1_reg_5290 <= icmp_ln935_1_fu_1929_p2;
                icmp_ln954_1_reg_5312 <= icmp_ln954_1_fu_2077_p2;
                icmp_ln954_reg_5275 <= icmp_ln954_fu_1897_p2;
                p_Repl2_5_reg_5258 <= mean_phases_V_q1(59 downto 59);
                p_Result_61_reg_5295 <= mean_amplitudes_V_q1(59 downto 59);
                p_Val2_16_reg_5263 <= p_Val2_16_fu_1761_p3;
                select_ln954_2_reg_5317 <= select_ln954_2_fu_2097_p3;
                select_ln954_reg_5280 <= select_ln954_fu_1917_p3;
                sub_ln944_1_reg_5306 <= sub_ln944_1_fu_1979_p2;
                sub_ln944_reg_5269 <= sub_ln944_fu_1799_p2;
                tmp_V_16_reg_5300 <= tmp_V_16_fu_1941_p3;
                trunc_ln943_1_reg_5322 <= trunc_ln943_1_fu_2105_p1;
                trunc_ln943_reg_5285 <= trunc_ln943_fu_1925_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                icmp_ln935_2_reg_5414 <= icmp_ln935_2_fu_2512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                icmp_ln935_4_reg_5689 <= icmp_ln935_4_fu_4484_p2;
                icmp_ln954_7_reg_5706 <= icmp_ln954_7_fu_4628_p2;
                select_ln954_14_reg_5711 <= select_ln954_14_fu_4648_p3;
                sub_ln944_7_reg_5700 <= sub_ln944_7_fu_4530_p2;
                tmp_V_22_reg_5694 <= tmp_V_22_fu_4494_p3;
                trunc_ln943_7_reg_5716 <= trunc_ln943_7_fu_4656_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_2_fu_2512_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                icmp_ln954_2_reg_5430 <= icmp_ln954_2_fu_2635_p2;
                p_Result_65_reg_5419 <= add_ln365_reg_5400(98 downto 98);
                select_ln954_4_reg_5435 <= select_ln954_4_fu_2655_p3;
                sub_ln944_2_reg_5424 <= sub_ln944_2_fu_2537_p2;
                trunc_ln943_2_reg_5440 <= trunc_ln943_2_fu_2663_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_3_fu_2801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                icmp_ln954_3_reg_5477 <= icmp_ln954_3_fu_2925_p2;
                p_Result_70_reg_5466 <= current_phase_V_2_reg_1045(59 downto 59);
                select_ln954_6_reg_5482 <= select_ln954_6_fu_2945_p3;
                sub_ln944_3_reg_5471 <= sub_ln944_3_fu_2827_p2;
                trunc_ln943_3_reg_5487 <= trunc_ln943_3_fu_2953_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_3_reg_5461 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                icmp_ln954_4_reg_5536 <= icmp_ln954_4_fu_3280_p2;
                p_Result_75_reg_5525 <= current_phase_V_2_reg_1045(59 downto 59);
                select_ln954_8_reg_5541 <= select_ln954_8_fu_3300_p3;
                sub_ln944_4_reg_5530 <= sub_ln944_4_fu_3182_p2;
                trunc_ln943_4_reg_5546 <= trunc_ln943_4_fu_3308_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln935_2_reg_5414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                icmp_ln954_8_reg_5592 <= icmp_ln954_8_fu_3884_p2;
                p_Result_94_reg_5581 <= add_ln365_reg_5400(98 downto 98);
                select_ln954_16_reg_5597 <= select_ln954_16_fu_3904_p3;
                sub_ln944_8_reg_5586 <= sub_ln944_8_fu_3786_p2;
                trunc_ln943_8_reg_5602 <= trunc_ln943_8_fu_3912_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tobool_i_i295_reg_5343 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                m_10_reg_5566 <= m_43_fu_3738_p2(60 downto 1);
                p_Result_45_reg_5571 <= m_43_fu_3738_p2(25 downto 25);
                trunc_ln943_6_reg_5576 <= trunc_ln943_6_fu_3762_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tobool_i_i701_reg_5333 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                m_9_reg_5551 <= m_39_fu_3511_p2(60 downto 1);
                p_Result_36_reg_5556 <= m_39_fu_3511_p2(25 downto 25);
                trunc_ln943_5_reg_5561 <= trunc_ln943_5_fu_3535_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln326_reg_5184_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                max_amplitude_index_reg_1010 <= max_amplitude_index_1_fu_1702_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln326_fu_1577_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                mean_amplitudes_V_addr_1_reg_5188 <= trunc_ln329_cast_fu_1583_p1(4 - 1 downto 0);
                mean_phases_V_addr_2_reg_5194 <= trunc_ln329_cast_fu_1583_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln298_fu_1319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                mean_amplitudes_V_addr_2_reg_5098 <= zext_ln298_fu_1312_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln345_fu_2438_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                mean_amplitudes_V_addr_4_reg_5390 <= zext_ln355_fu_2468_p1(4 - 1 downto 0);
                mean_phases_V_addr_4_reg_5385 <= zext_ln355_fu_2468_p1(4 - 1 downto 0);
                    zext_ln355_reg_5379(3 downto 0) <= zext_ln355_fu_2468_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                mean_phases_V_addr_3_reg_5174 <= zext_ln298_reg_5084(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln326_reg_5184_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                mul_ln1148_1_reg_5222 <= mul_ln1148_1_fu_1629_p2;
                mul_ln1148_reg_5212 <= mul_ln1148_fu_1601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                mul_ln1148_2_reg_5119 <= mul_ln1148_2_fu_1377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                p_Result_79_reg_5338 <= ref_phase_m_pi_fu_2115_p2(59 downto 59);
                p_Result_85_reg_5348 <= ref_phase_p_pi_fu_2109_p2(59 downto 59);
                select_ln935_reg_5327 <= select_ln935_fu_2243_p3;
                tmp_V_20_reg_5353 <= tmp_V_20_fu_2416_p3;
                tmp_V_21_reg_5362 <= tmp_V_21_fu_2424_p3;
                tobool_i_i295_reg_5343 <= tobool_i_i295_fu_2396_p2;
                tobool_i_i701_reg_5333 <= tobool_i_i701_fu_2376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                phase_V_8_reg_5125 <= phase_V_8_fu_1428_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                phase_V_9_reg_5140 <= phase_V_9_fu_1468_p2;
                sext_ln304_1_reg_5147 <= sext_ln304_1_fu_1475_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                phase_V_reg_5130 <= r_V_fu_1438_p2(124 downto 78);
                tmp_50_reg_5135 <= r_V_fu_1438_p2(77 downto 77);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) or ((icmp_ln326_reg_5184 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                reg_1178 <= mean_amplitudes_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((icmp_ln326_reg_5184 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                reg_1182 <= mean_phases_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln935_2_reg_5414 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln935_2_fu_2512_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then
                reg_1186 <= grp_fu_1129_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln935_3_reg_5461 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((icmp_ln935_3_fu_2801_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35)))) then
                reg_1190 <= grp_fu_1160_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state41))) then
                reg_1194 <= grp_fu_1079_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                retval_0_i_i361_reg_5619 <= retval_0_i_i361_fu_4144_p3;
                retval_0_i_i767_reg_5614 <= retval_0_i_i767_fu_4089_p3;
                select_ln935_2_reg_5607 <= select_ln935_2_fu_4034_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sext_ln26_reg_4912 <= sext_ln26_fu_1220_p1;
                trunc_ln22_reg_4917 <= trunc_ln22_fu_1228_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    start_val_offset_reg_5108(59 downto 39) <= start_val_offset_fu_1352_p2(59 downto 39);
                tmp_47_reg_5113 <= start_val_offset_fu_1352_p2(59 downto 59);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln326_reg_5184 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_33_reg_5200 <= mean_amplitudes_V_q1(59 downto 59);
                tmp_42_reg_5206 <= mean_phases_V_q1(59 downto 59);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_33_reg_5200 = ap_const_lv1_0) and (icmp_ln326_reg_5184_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_41_reg_5217 <= mul_ln1148_fu_1601_p2(198 downto 142);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_42_reg_5206 = ap_const_lv1_0) and (icmp_ln326_reg_5184_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_44_reg_5227 <= mul_ln1148_1_fu_1629_p2(198 downto 142);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                    zext_ln338_reg_5242(31 downto 0) <= zext_ln338_fu_1749_p1(31 downto 0);
            end if;
        end if;
    end process;
    zext_ln34_reg_4931(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln298_reg_5084(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    start_val_offset_reg_5108(38 downto 0) <= "000000000000000000000000000000000000000";
    zext_ln338_reg_5242(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln355_reg_5379(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    add_ln365_reg_5400(38 downto 0) <= "000000000000000000000000000000000000000";
    bitcast_ln351_reg_5456(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter1, ap_CS_fsm_state29, icmp_ln935_2_fu_2512_p2, ap_CS_fsm_state43, and_ln375_1_fu_3156_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln293_fu_1242_p2, ap_CS_fsm_state11, icmp_ln298_fu_1319_p2, ap_enable_reg_pp1_iter0, icmp_ln326_fu_1577_p2, ap_enable_reg_pp1_iter3, ap_CS_fsm_state26, icmp_ln345_fu_2438_p2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, icmp_ln286_fu_1204_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln286_fu_1204_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln293_fu_1242_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln298_fu_1319_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln326_fu_1577_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((icmp_ln326_fu_1577_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln345_fu_2438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln935_2_fu_2512_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((ap_const_lv1_0 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    LD_1_fu_2360_p1 <= p_Result_64_fu_2348_p5(32 - 1 downto 0);
    LD_2_fu_2777_p1 <= p_Result_68_fu_2765_p5(32 - 1 downto 0);
    LD_3_fu_3067_p1 <= p_Result_73_fu_3055_p5(32 - 1 downto 0);
    LD_4_fu_4026_p1 <= p_Result_78_fu_4014_p5(32 - 1 downto 0);
    LD_5_fu_4081_p1 <= p_Result_82_fu_4069_p5(32 - 1 downto 0);
    LD_6_fu_4136_p1 <= p_Result_88_fu_4124_p5(32 - 1 downto 0);
    LD_7_fu_4768_p1 <= p_Result_93_fu_4756_p5(32 - 1 downto 0);
    LD_8_fu_4261_p1 <= p_Result_97_fu_4249_p5(32 - 1 downto 0);
    LD_fu_2235_p1 <= m_41_fu_2223_p5(32 - 1 downto 0);
    add_ln286_fu_1198_p2 <= std_logic_vector(unsigned(i_reg_952) + unsigned(ap_const_lv4_1));
    add_ln298_fu_1306_p2 <= std_logic_vector(unsigned(j_reg_974) + unsigned(ap_const_lv4_1));
    add_ln30_fu_1271_p2 <= std_logic_vector(unsigned(trunc_ln22_2_fu_1253_p1) + unsigned(ap_const_lv4_A));
    add_ln326_fu_1571_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_5_phi_fu_1002_p4) + unsigned(ap_const_lv4_1));
    add_ln365_fu_2496_p2 <= std_logic_vector(unsigned(lhs_1_fu_2480_p3) + unsigned(select_ln365_fu_2488_p3));
    add_ln703_2_fu_1564_p2 <= std_logic_vector(unsigned(mean_phases_V_q0) + unsigned(phase_V_5_reg_985));
    add_ln703_fu_1337_p2 <= std_logic_vector(unsigned(mean_amplitudes_V_q0) + unsigned(zext_ln703_fu_1333_p1));
    add_ln954_1_fu_2266_p2 <= std_logic_vector(unsigned(sub_ln944_1_reg_5306) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_2_fu_2682_p2 <= std_logic_vector(unsigned(sub_ln944_2_reg_5424) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_3_fu_2972_p2 <= std_logic_vector(unsigned(sub_ln944_3_reg_5471) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_4_fu_3931_p2 <= std_logic_vector(unsigned(sub_ln944_4_reg_5530) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_5_fu_3472_p2 <= std_logic_vector(unsigned(sub_ln944_5_fu_3341_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_6_fu_3699_p2 <= std_logic_vector(unsigned(sub_ln944_6_fu_3568_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_7_fu_4674_p2 <= std_logic_vector(unsigned(sub_ln944_7_reg_5700) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_8_fu_4166_p2 <= std_logic_vector(unsigned(sub_ln944_8_reg_5586) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln954_fu_2141_p2 <= std_logic_vector(unsigned(sub_ln944_reg_5269) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_1_fu_2335_p2 <= std_logic_vector(unsigned(sub_ln964_1_fu_2330_p2) + unsigned(select_ln943_1_fu_2322_p3));
    add_ln964_2_fu_2752_p2 <= std_logic_vector(unsigned(sub_ln964_2_fu_2747_p2) + unsigned(select_ln943_2_fu_2739_p3));
    add_ln964_3_fu_3042_p2 <= std_logic_vector(unsigned(sub_ln964_3_fu_3037_p2) + unsigned(select_ln943_3_fu_3029_p3));
    add_ln964_4_fu_4001_p2 <= std_logic_vector(unsigned(sub_ln964_4_fu_3996_p2) + unsigned(select_ln943_4_fu_3988_p3));
    add_ln964_5_fu_4056_p2 <= std_logic_vector(unsigned(sub_ln964_5_fu_4051_p2) + unsigned(select_ln943_5_fu_4044_p3));
    add_ln964_6_fu_4111_p2 <= std_logic_vector(unsigned(sub_ln964_6_fu_4106_p2) + unsigned(select_ln943_6_fu_4099_p3));
    add_ln964_7_fu_4743_p2 <= std_logic_vector(unsigned(sub_ln964_7_fu_4738_p2) + unsigned(select_ln943_7_fu_4730_p3));
    add_ln964_8_fu_4236_p2 <= std_logic_vector(unsigned(sub_ln964_8_fu_4231_p2) + unsigned(select_ln943_8_fu_4223_p3));
    add_ln964_fu_2210_p2 <= std_logic_vector(unsigned(sub_ln964_fu_2205_p2) + unsigned(select_ln943_fu_2197_p3));
    amplitude_V_1_fu_4426_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(reg_1178));
    amplitude_V_2_fu_4447_p3 <= 
        amplitude_V_1_fu_4426_p2 when (and_ln385_1_fu_4420_p2(0) = '1') else 
        reg_1178;
    amplitude_V_4_fu_4467_p3 <= 
        amplitude_V_1_fu_4426_p2 when (and_ln390_2_fu_4461_p2(0) = '1') else 
        amplitude_V_2_fu_4447_p3;
    and_ln375_1_fu_3156_p2 <= (grp_fu_1093_p2 and and_ln375_fu_3150_p2);
    and_ln375_fu_3150_p2 <= (or_ln375_fu_3142_p2 and or_ln375_1_fu_3146_p2);
    and_ln385_1_fu_4420_p2 <= (grp_fu_1093_p2 and and_ln385_fu_4415_p2);
    and_ln385_fu_4415_p2 <= (or_ln385_fu_4411_p2 and or_ln385_1_reg_5655);
    and_ln390_1_fu_4441_p2 <= (grp_fu_1097_p2 and and_ln390_fu_4436_p2);
    and_ln390_2_fu_4461_p2 <= (xor_ln385_fu_4455_p2 and and_ln390_1_fu_4441_p2);
    and_ln390_fu_4436_p2 <= (or_ln390_fu_4432_p2 and or_ln385_1_reg_5655);
    and_ln949_10_fu_3405_p2 <= (tmp_V_20_reg_5353 and or_ln949_13_fu_3399_p2);
    and_ln949_11_fu_3443_p2 <= (xor_ln949_5_fu_3424_p2 and p_Result_81_fu_3430_p3);
    and_ln949_12_fu_3632_p2 <= (tmp_V_21_reg_5362 and or_ln949_14_fu_3626_p2);
    and_ln949_13_fu_3670_p2 <= (xor_ln949_6_fu_3651_p2 and p_Result_87_fu_3657_p3);
    and_ln949_14_fu_4594_p2 <= (tmp_V_22_fu_4494_p3 and or_ln949_15_fu_4588_p2);
    and_ln949_15_fu_4634_p2 <= (xor_ln949_7_fu_4614_p2 and p_Result_92_fu_4620_p3);
    and_ln949_16_fu_3850_p2 <= (or_ln949_16_fu_3844_p2 and grp_fu_1129_p3);
    and_ln949_17_fu_3890_p2 <= (xor_ln949_8_fu_3870_p2 and p_Result_96_fu_3876_p3);
    and_ln949_1_fu_1903_p2 <= (xor_ln949_fu_1883_p2 and p_Result_60_fu_1889_p3);
    and_ln949_2_fu_2043_p2 <= (tmp_V_16_fu_1941_p3 and or_ln949_fu_2037_p2);
    and_ln949_3_fu_2083_p2 <= (xor_ln949_1_fu_2063_p2 and p_Result_63_fu_2069_p3);
    and_ln949_4_fu_2601_p2 <= (or_ln949_10_fu_2595_p2 and grp_fu_1129_p3);
    and_ln949_5_fu_2641_p2 <= (xor_ln949_2_fu_2621_p2 and p_Result_67_fu_2627_p3);
    and_ln949_6_fu_2891_p2 <= (or_ln949_11_fu_2885_p2 and grp_fu_1160_p3);
    and_ln949_7_fu_2931_p2 <= (xor_ln949_3_fu_2911_p2 and p_Result_72_fu_2917_p3);
    and_ln949_8_fu_3246_p2 <= (or_ln949_12_fu_3240_p2 and grp_fu_1160_p3);
    and_ln949_9_fu_3286_p2 <= (xor_ln949_4_fu_3266_p2 and p_Result_77_fu_3272_p3);
    and_ln949_fu_1863_p2 <= (p_Val2_16_fu_1761_p3 and or_ln949_9_fu_1857_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(18);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(19);
    ap_CS_fsm_state24 <= ap_CS_fsm(20);
    ap_CS_fsm_state25 <= ap_CS_fsm(21);
    ap_CS_fsm_state26 <= ap_CS_fsm(22);
    ap_CS_fsm_state27 <= ap_CS_fsm(23);
    ap_CS_fsm_state28 <= ap_CS_fsm(24);
    ap_CS_fsm_state29 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(26);
    ap_CS_fsm_state31 <= ap_CS_fsm(27);
    ap_CS_fsm_state35 <= ap_CS_fsm(31);
    ap_CS_fsm_state36 <= ap_CS_fsm(32);
    ap_CS_fsm_state37 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state41 <= ap_CS_fsm(37);
    ap_CS_fsm_state42 <= ap_CS_fsm(38);
    ap_CS_fsm_state43 <= ap_CS_fsm(39);
    ap_CS_fsm_state44 <= ap_CS_fsm(40);
    ap_CS_fsm_state45 <= ap_CS_fsm(41);
    ap_CS_fsm_state49 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(46);
    ap_CS_fsm_state51 <= ap_CS_fsm(47);
    ap_CS_fsm_state52 <= ap_CS_fsm(48);
    ap_CS_fsm_state53 <= ap_CS_fsm(49);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state19_assign_proc : process(icmp_ln326_fu_1577_p2)
    begin
        if ((icmp_ln326_fu_1577_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state26, icmp_ln345_fu_2438_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln345_fu_2438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_5_phi_fu_1002_p4_assign_proc : process(i_5_reg_998, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_5184, add_ln326_reg_5179, ap_block_pp1_stage0)
    begin
        if (((icmp_ln326_reg_5184 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_i_5_phi_fu_1002_p4 <= add_ln326_reg_5179;
        else 
            ap_phi_mux_i_5_phi_fu_1002_p4 <= i_5_reg_998;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26, icmp_ln345_fu_2438_p2)
    begin
        if (((icmp_ln345_fu_2438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln351_1_fu_3111_p1 <= zext_ln368_1_fu_3107_p1;
    bitcast_ln351_2_fu_4289_p1 <= zext_ln368_2_fu_4285_p1;
    bitcast_ln351_3_fu_4305_p1 <= zext_ln368_3_fu_4301_p1;
    bitcast_ln351_fu_2797_p1 <= zext_ln368_fu_2793_p1;
    bitcast_ln744_1_fu_2364_p1 <= LD_1_fu_2360_p1;
    bitcast_ln744_2_fu_2781_p1 <= LD_2_fu_2777_p1;
    bitcast_ln744_3_fu_3071_p1 <= LD_3_fu_3067_p1;
    bitcast_ln744_4_fu_4030_p1 <= LD_4_fu_4026_p1;
    bitcast_ln744_5_fu_4085_p1 <= LD_5_fu_4081_p1;
    bitcast_ln744_6_fu_4140_p1 <= LD_6_fu_4136_p1;
    bitcast_ln744_7_fu_4772_p1 <= LD_7_fu_4768_p1;
    bitcast_ln744_8_fu_4265_p1 <= LD_8_fu_4261_p1;
    bitcast_ln744_fu_2239_p1 <= LD_fu_2235_p1;
    buffer_idx_5_fu_1277_p3 <= 
        add_ln30_fu_1271_p2 when (tmp_5_fu_1263_p3(0) = '1') else 
        trunc_ln22_2_fu_1253_p1;
    buffer_idx_6_fu_1285_p3 <= 
        trunc_ln22_reg_4917 when (icmp_ln24_fu_1257_p2(0) = '1') else 
        buffer_idx_5_fu_1277_p3;
    buffer_idx_fu_1248_p2 <= std_logic_vector(signed(sext_ln26_reg_4912) - signed(zext_ln293_fu_1238_p1));
    cmp33_fu_1300_p2 <= "1" when (i_4_reg_963 = ap_const_lv4_0) else "0";
    data_V_1_fu_3099_p1 <= reg_1194;
    data_V_2_fu_4277_p1 <= reg_1194;
    data_V_3_fu_4294_p1 <= dc_3_reg_5624;
    data_V_4_fu_4369_p1 <= dc_4_reg_5629;
    data_V_fu_2785_p1 <= grp_fu_1079_p2;
    first_phases_V_address0 <= zext_ln298_reg_5084(4 - 1 downto 0);

    first_phases_V_ce0_assign_proc : process(cmp33_reg_4975, ap_CS_fsm_state16)
    begin
        if ((((cmp33_reg_4975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((cmp33_reg_4975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            first_phases_V_ce0 <= ap_const_logic_1;
        else 
            first_phases_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    first_phases_V_we0_assign_proc : process(cmp33_reg_4975, ap_CS_fsm_state16)
    begin
        if (((cmp33_reg_4975 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            first_phases_V_we0 <= ap_const_logic_1;
        else 
            first_phases_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1079_p0_assign_proc : process(select_ln935_2_reg_5607, retval_0_i_i1152_reg_1055, retval_0_i_i997_reg_1067, ap_CS_fsm_state31, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_1079_p0 <= select_ln935_2_reg_5607;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_1079_p0 <= retval_0_i_i997_reg_1067;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_1079_p0 <= retval_0_i_i1152_reg_1055;
        else 
            grp_fu_1079_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1079_p1_assign_proc : process(select_ln935_reg_5327, retval_0_i_i767_reg_5614, ap_CS_fsm_state31, ap_CS_fsm_state37, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_1079_p1 <= retval_0_i_i767_reg_5614;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            grp_fu_1079_p1 <= select_ln935_reg_5327;
        else 
            grp_fu_1079_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1093_opcode_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_fu_1093_opcode <= ap_const_lv5_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1093_opcode <= ap_const_lv5_2;
        else 
            grp_fu_1093_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1093_p0_assign_proc : process(bitcast_ln351_reg_5456, ap_CS_fsm_state42, bitcast_ln351_2_fu_4289_p1, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_fu_1093_p0 <= bitcast_ln351_2_fu_4289_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1093_p0 <= bitcast_ln351_reg_5456;
        else 
            grp_fu_1093_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1093_p1_assign_proc : process(bitcast_ln351_1_fu_3111_p1, ap_CS_fsm_state42, ap_CS_fsm_state50, bitcast_ln351_3_fu_4305_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_fu_1093_p1 <= bitcast_ln351_3_fu_4305_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1093_p1 <= bitcast_ln351_1_fu_3111_p1;
        else 
            grp_fu_1093_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1097_p0 <= zext_ln368_4_fu_4376_p1;
    grp_fu_1097_p1 <= zext_ln368_3_fu_4301_p1;
    grp_fu_1101_p3 <= mean_amplitudes_V_q1(59 downto 59);
    grp_fu_1109_p3 <= mean_phases_V_q1(59 downto 59);
    grp_fu_1117_p3 <= add_ln365_reg_5400(98 downto 98);
    grp_fu_1124_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(phase_V_10_reg_5405));
    grp_fu_1129_p3 <= 
        grp_fu_1124_p2 when (grp_fu_1117_p3(0) = '1') else 
        phase_V_10_reg_5405;
    
    grp_fu_1136_p4_proc : process(grp_fu_1129_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable grp_fu_1136_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := grp_fu_1129_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for grp_fu_1136_p4_i in 0 to 60-1 loop
                v0_cpy(grp_fu_1136_p4_i) := grp_fu_1129_p3(60-1-grp_fu_1136_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        grp_fu_1136_p4 <= resvalue(60-1 downto 0);
    end process;

    grp_fu_1146_p3 <= current_phase_V_2_reg_1045(59 downto 59);
    grp_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(current_phase_V_2_reg_1045));
    grp_fu_1160_p3 <= 
        grp_fu_1154_p2 when (grp_fu_1146_p3(0) = '1') else 
        current_phase_V_2_reg_1045;
    
    grp_fu_1168_p4_proc : process(grp_fu_1160_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable grp_fu_1168_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := grp_fu_1160_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for grp_fu_1168_p4_i in 0 to 60-1 loop
                v0_cpy(grp_fu_1168_p4_i) := grp_fu_1160_p3(60-1-grp_fu_1168_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        grp_fu_1168_p4 <= resvalue(60-1 downto 0);
    end process;

    i_6_fu_1232_p2 <= std_logic_vector(unsigned(i_4_reg_963) + unsigned(ap_const_lv4_1));
    i_8_fu_2432_p2 <= std_logic_vector(unsigned(idx_8_reg_1034) + unsigned(ap_const_lv4_1));
    i_cast_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_952),64));
    icmp_ln1494_1_fu_1492_p2 <= "1" when (signed(sext_ln1494_fu_1489_p1) > signed(ret_V_fu_1483_p2)) else "0";
    icmp_ln1494_2_fu_2474_p2 <= "1" when (signed(current_phase_V_2_reg_1045) > signed(reg_1182)) else "0";
    icmp_ln1494_fu_1684_p2 <= "1" when (signed(select_ln1148_1_fu_1676_p3) > signed(max_amplitude_V_reg_1022)) else "0";
    icmp_ln1495_fu_1504_p2 <= "1" when (signed(sext_ln1494_fu_1489_p1) < signed(ret_V_2_fu_1498_p2)) else "0";
    icmp_ln24_fu_1257_p2 <= "1" when (signed(buffer_idx_fu_1248_p2) < signed(ap_const_lv6_36)) else "0";
    icmp_ln286_fu_1204_p2 <= "1" when (i_reg_952 = ap_const_lv4_C) else "0";
    icmp_ln293_fu_1242_p2 <= "1" when (i_4_reg_963 = ap_const_lv4_A) else "0";
    icmp_ln298_fu_1319_p2 <= "1" when (j_reg_974 = ap_const_lv4_C) else "0";
    icmp_ln326_fu_1577_p2 <= "1" when (ap_phi_mux_i_5_phi_fu_1002_p4 = ap_const_lv4_C) else "0";
    icmp_ln345_fu_2438_p2 <= "1" when (idx_8_reg_1034 = ap_const_lv4_B) else "0";
    icmp_ln349_fu_2448_p2 <= "1" when (signed(idx_8_cast_fu_2444_p1) < signed(max_amplitude_index_reg_1010)) else "0";
    icmp_ln375_1_fu_3093_p2 <= "1" when (trunc_ln375_fu_3084_p1 = ap_const_lv23_0) else "0";
    icmp_ln375_2_fu_3130_p2 <= "0" when (tmp_16_fu_3116_p4 = ap_const_lv8_FF) else "1";
    icmp_ln375_3_fu_3136_p2 <= "1" when (trunc_ln375_1_fu_3126_p1 = ap_const_lv23_0) else "0";
    icmp_ln375_fu_3087_p2 <= "0" when (tmp_12_fu_3075_p4 = ap_const_lv8_FF) else "1";
    icmp_ln385_1_fu_4345_p2 <= "1" when (trunc_ln385_fu_4321_p1 = ap_const_lv23_0) else "0";
    icmp_ln385_2_fu_4351_p2 <= "0" when (tmp_23_fu_4325_p4 = ap_const_lv8_FF) else "1";
    icmp_ln385_3_fu_4357_p2 <= "1" when (trunc_ln385_1_fu_4335_p1 = ap_const_lv23_0) else "0";
    icmp_ln385_fu_4339_p2 <= "0" when (tmp_22_fu_4311_p4 = ap_const_lv8_FF) else "1";
    icmp_ln390_1_fu_4405_p2 <= "1" when (trunc_ln390_fu_4395_p1 = ap_const_lv23_0) else "0";
    icmp_ln390_fu_4399_p2 <= "0" when (tmp_26_fu_4385_p4 = ap_const_lv8_FF) else "1";
    icmp_ln935_1_fu_1929_p2 <= "1" when (mean_amplitudes_V_q1 = ap_const_lv60_0) else "0";
    icmp_ln935_2_fu_2512_p2 <= "0" when (phase_V_10_reg_5405 = ap_const_lv60_0) else "1";
    icmp_ln935_3_fu_2801_p2 <= "0" when (current_phase_V_2_reg_1045 = ap_const_lv60_0) else "1";
    icmp_ln935_4_fu_4484_p2 <= "1" when (amplitude_V_4_reg_5676 = ap_const_lv60_0) else "0";
    icmp_ln935_fu_2121_p2 <= "0" when (reg_1182 = ap_const_lv60_0) else "1";
    icmp_ln946_1_fu_2001_p2 <= "1" when (signed(tmp_13_fu_1991_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_2_fu_2559_p2 <= "1" when (signed(tmp_54_fu_2549_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_3_fu_2849_p2 <= "1" when (signed(tmp_58_fu_2839_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_4_fu_3204_p2 <= "1" when (signed(tmp_62_fu_3194_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_5_fu_3363_p2 <= "1" when (signed(tmp_65_fu_3353_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_6_fu_3590_p2 <= "1" when (signed(tmp_68_fu_3580_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_7_fu_4552_p2 <= "1" when (signed(tmp_72_fu_4542_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_8_fu_3808_p2 <= "1" when (signed(tmp_76_fu_3798_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_fu_1821_p2 <= "1" when (signed(tmp_8_fu_1811_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_1_fu_2049_p2 <= "0" when (and_ln949_2_fu_2043_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_2_fu_2607_p2 <= "0" when (and_ln949_4_fu_2601_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_3_fu_2897_p2 <= "0" when (and_ln949_6_fu_2891_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_4_fu_3252_p2 <= "0" when (and_ln949_8_fu_3246_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_5_fu_3410_p2 <= "0" when (and_ln949_10_fu_3405_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_6_fu_3637_p2 <= "0" when (and_ln949_12_fu_3632_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_7_fu_4600_p2 <= "0" when (and_ln949_14_fu_4594_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_8_fu_3856_p2 <= "0" when (and_ln949_16_fu_3850_p2 = ap_const_lv60_0) else "1";
    icmp_ln949_fu_1869_p2 <= "0" when (and_ln949_fu_1863_p2 = ap_const_lv60_0) else "1";
    icmp_ln954_1_fu_2077_p2 <= "1" when (signed(lsb_index_1_fu_1985_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_2_fu_2635_p2 <= "1" when (signed(lsb_index_2_fu_2543_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_3_fu_2925_p2 <= "1" when (signed(lsb_index_3_fu_2833_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_4_fu_3280_p2 <= "1" when (signed(lsb_index_4_fu_3188_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_5_fu_3437_p2 <= "1" when (signed(lsb_index_5_fu_3347_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_6_fu_3664_p2 <= "1" when (signed(lsb_index_6_fu_3574_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_7_fu_4628_p2 <= "1" when (signed(lsb_index_7_fu_4536_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_8_fu_3884_p2 <= "1" when (signed(lsb_index_8_fu_3792_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln954_fu_1897_p2 <= "1" when (signed(lsb_index_fu_1805_p2) > signed(ap_const_lv32_0)) else "0";
    idx_8_cast_fu_2444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_8_reg_1034),32));
    idx_fu_2460_p3 <= 
        i_8_fu_2432_p2 when (xor_ln349_fu_2454_p2(0) = '1') else 
        idx_8_reg_1034;
    l_1_fu_1975_p1 <= tmp_s_fu_1967_p3(32 - 1 downto 0);
    l_2_fu_2533_p1 <= tmp_1_fu_2525_p3(32 - 1 downto 0);
    l_3_fu_2823_p1 <= tmp_6_fu_2815_p3(32 - 1 downto 0);
    l_4_fu_3178_p1 <= tmp_9_fu_3170_p3(32 - 1 downto 0);
    l_5_fu_3337_p1 <= tmp_4_fu_3329_p3(32 - 1 downto 0);
    l_6_fu_3564_p1 <= tmp_14_fu_3556_p3(32 - 1 downto 0);
    l_7_fu_4526_p1 <= tmp_19_fu_4518_p3(32 - 1 downto 0);
    l_8_fu_3782_p1 <= tmp_20_fu_3774_p3(32 - 1 downto 0);
    l_fu_1795_p1 <= tmp_fu_1787_p3(32 - 1 downto 0);
    lhs_1_fu_2480_p3 <= (current_phase_V_2_reg_1045 & ap_const_lv39_0);
        lhs_V_2_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_fu_1537_p3),99));

        lhs_V_3_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_fu_1510_p3),99));

    lsb_index_1_fu_1985_p2 <= std_logic_vector(unsigned(sub_ln944_1_fu_1979_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_2_fu_2543_p2 <= std_logic_vector(unsigned(sub_ln944_2_fu_2537_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_3_fu_2833_p2 <= std_logic_vector(unsigned(sub_ln944_3_fu_2827_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_4_fu_3188_p2 <= std_logic_vector(unsigned(sub_ln944_4_fu_3182_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_5_fu_3347_p2 <= std_logic_vector(unsigned(sub_ln944_5_fu_3341_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_6_fu_3574_p2 <= std_logic_vector(unsigned(sub_ln944_6_fu_3568_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_7_fu_4536_p2 <= std_logic_vector(unsigned(sub_ln944_7_fu_4530_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_8_fu_3792_p2 <= std_logic_vector(unsigned(sub_ln944_8_fu_3786_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_1805_p2 <= std_logic_vector(unsigned(sub_ln944_fu_1799_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_1_fu_2021_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_1_fu_2017_p1(31-1 downto 0)))));
    lshr_ln947_2_fu_2579_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_2_fu_2575_p1(31-1 downto 0)))));
    lshr_ln947_3_fu_2869_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_3_fu_2865_p1(31-1 downto 0)))));
    lshr_ln947_4_fu_3224_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_4_fu_3220_p1(31-1 downto 0)))));
    lshr_ln947_5_fu_3383_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_5_fu_3379_p1(31-1 downto 0)))));
    lshr_ln947_6_fu_3610_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_6_fu_3606_p1(31-1 downto 0)))));
    lshr_ln947_7_fu_4572_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_7_fu_4568_p1(31-1 downto 0)))));
    lshr_ln947_8_fu_3828_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_8_fu_3824_p1(31-1 downto 0)))));
    lshr_ln947_fu_1841_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv60_FFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_1837_p1(31-1 downto 0)))));
    lshr_ln954_1_fu_2275_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_16_reg_5300),to_integer(unsigned('0' & zext_ln954_1_fu_2271_p1(31-1 downto 0)))));
    lshr_ln954_2_fu_2691_p2 <= std_logic_vector(shift_right(unsigned(reg_1186),to_integer(unsigned('0' & zext_ln954_2_fu_2687_p1(31-1 downto 0)))));
    lshr_ln954_3_fu_2981_p2 <= std_logic_vector(shift_right(unsigned(reg_1190),to_integer(unsigned('0' & zext_ln954_3_fu_2977_p1(31-1 downto 0)))));
    lshr_ln954_4_fu_3940_p2 <= std_logic_vector(shift_right(unsigned(reg_1190),to_integer(unsigned('0' & zext_ln954_4_fu_3936_p1(31-1 downto 0)))));
    lshr_ln954_5_fu_3482_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_20_reg_5353),to_integer(unsigned('0' & zext_ln954_5_fu_3478_p1(31-1 downto 0)))));
    lshr_ln954_6_fu_3709_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_21_reg_5362),to_integer(unsigned('0' & zext_ln954_6_fu_3705_p1(31-1 downto 0)))));
    lshr_ln954_7_fu_4683_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_22_reg_5694),to_integer(unsigned('0' & zext_ln954_7_fu_4679_p1(31-1 downto 0)))));
    lshr_ln954_8_fu_4175_p2 <= std_logic_vector(shift_right(unsigned(reg_1186),to_integer(unsigned('0' & zext_ln954_8_fu_4171_p1(31-1 downto 0)))));
    lshr_ln954_fu_2150_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_16_reg_5263),to_integer(unsigned('0' & zext_ln954_fu_2146_p1(31-1 downto 0)))));
    m_11_fu_4708_p4 <= m_46_fu_4702_p2(60 downto 1);
    m_12_fu_2294_p2 <= std_logic_vector(unsigned(zext_ln951_1_fu_2287_p1) + unsigned(zext_ln961_1_fu_2291_p1));
    m_13_fu_4201_p4 <= m_49_fu_4195_p2(60 downto 1);
    m_1_fu_2169_p2 <= std_logic_vector(unsigned(zext_ln951_fu_2162_p1) + unsigned(zext_ln961_fu_2166_p1));
    m_20_fu_2697_p3 <= 
        lshr_ln954_2_fu_2691_p2 when (icmp_ln954_2_reg_5430(0) = '1') else 
        shl_ln955_2_fu_2676_p2;
    m_21_fu_2711_p2 <= std_logic_vector(unsigned(zext_ln951_3_fu_2704_p1) + unsigned(zext_ln961_2_fu_2708_p1));
    m_29_fu_2987_p3 <= 
        lshr_ln954_3_fu_2981_p2 when (icmp_ln954_3_reg_5477(0) = '1') else 
        shl_ln955_3_fu_2966_p2;
    m_2_fu_2717_p4 <= m_21_fu_2711_p2(60 downto 1);
    m_33_fu_3001_p2 <= std_logic_vector(unsigned(zext_ln951_5_fu_2994_p1) + unsigned(zext_ln961_3_fu_2998_p1));
    m_35_fu_3946_p3 <= 
        lshr_ln954_4_fu_3940_p2 when (icmp_ln954_4_reg_5536(0) = '1') else 
        shl_ln955_4_fu_3925_p2;
    m_36_fu_3960_p2 <= std_logic_vector(unsigned(zext_ln951_7_fu_3953_p1) + unsigned(zext_ln961_4_fu_3957_p1));
    m_38_fu_3495_p3 <= 
        lshr_ln954_5_fu_3482_p2 when (icmp_ln954_5_fu_3437_p2(0) = '1') else 
        shl_ln955_5_fu_3459_p2;
    m_39_fu_3511_p2 <= std_logic_vector(unsigned(zext_ln951_9_fu_3503_p1) + unsigned(zext_ln961_5_fu_3507_p1));
    m_41_fu_2223_p5 <= (zext_ln968_fu_2185_p1(63 downto 32) & tmp_2_fu_2216_p3 & zext_ln968_fu_2185_p1(22 downto 0));
    m_42_fu_3722_p3 <= 
        lshr_ln954_6_fu_3709_p2 when (icmp_ln954_6_fu_3664_p2(0) = '1') else 
        shl_ln955_6_fu_3686_p2;
    m_43_fu_3738_p2 <= std_logic_vector(unsigned(zext_ln951_11_fu_3730_p1) + unsigned(zext_ln961_6_fu_3734_p1));
    m_45_fu_4688_p3 <= 
        lshr_ln954_7_fu_4683_p2 when (icmp_ln954_7_reg_5706(0) = '1') else 
        shl_ln955_7_fu_4669_p2;
    m_46_fu_4702_p2 <= std_logic_vector(unsigned(zext_ln951_13_fu_4695_p1) + unsigned(zext_ln961_7_fu_4699_p1));
    m_48_fu_4181_p3 <= 
        lshr_ln954_8_fu_4175_p2 when (icmp_ln954_8_reg_5592(0) = '1') else 
        shl_ln955_8_fu_4160_p2;
    m_49_fu_4195_p2 <= std_logic_vector(unsigned(zext_ln951_15_fu_4188_p1) + unsigned(zext_ln961_8_fu_4192_p1));
    m_6_fu_3007_p4 <= m_33_fu_3001_p2(60 downto 1);
    m_7_fu_3966_p4 <= m_36_fu_3960_p2(60 downto 1);
    m_8_fu_2280_p3 <= 
        lshr_ln954_1_fu_2275_p2 when (icmp_ln954_1_reg_5312(0) = '1') else 
        shl_ln955_1_fu_2261_p2;
    m_fu_2155_p3 <= 
        lshr_ln954_fu_2150_p2 when (icmp_ln954_reg_5275(0) = '1') else 
        shl_ln955_fu_2136_p2;
    m_s_fu_2300_p4 <= m_12_fu_2294_p2(60 downto 1);
    max_amplitude_V_1_fu_1690_p3 <= 
        select_ln1148_1_fu_1676_p3 when (icmp_ln1494_fu_1684_p2(0) = '1') else 
        max_amplitude_V_reg_1022;
    max_amplitude_index_1_fu_1702_p3 <= 
        zext_ln329_fu_1698_p1 when (icmp_ln1494_fu_1684_p2(0) = '1') else 
        max_amplitude_index_reg_1010;
    max_val_offset_1_fu_1344_p3 <= (psd_max_val_times_q0 & ap_const_lv39_0);

    mean_amplitudes_V_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state11, zext_ln298_fu_1312_p1, mean_amplitudes_V_addr_2_reg_5098, ap_CS_fsm_state12, mean_amplitudes_V_addr_1_reg_5188_pp1_iter2_reg, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, i_cast_fu_1210_p1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            mean_amplitudes_V_address0 <= mean_amplitudes_V_addr_1_reg_5188_pp1_iter2_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mean_amplitudes_V_address0 <= mean_amplitudes_V_addr_2_reg_5098;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            mean_amplitudes_V_address0 <= zext_ln298_fu_1312_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_amplitudes_V_address0 <= i_cast_fu_1210_p1(4 - 1 downto 0);
        else 
            mean_amplitudes_V_address0 <= "XXXX";
        end if; 
    end process;


    mean_amplitudes_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln338_fu_1749_p1, ap_CS_fsm_state23, ap_CS_fsm_state26, zext_ln355_fu_2468_p1, mean_amplitudes_V_addr_4_reg_5390, ap_CS_fsm_state51, ap_block_pp1_stage0, trunc_ln329_cast_fu_1583_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            mean_amplitudes_V_address1 <= mean_amplitudes_V_addr_4_reg_5390;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            mean_amplitudes_V_address1 <= zext_ln355_fu_2468_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            mean_amplitudes_V_address1 <= zext_ln338_fu_1749_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            mean_amplitudes_V_address1 <= trunc_ln329_cast_fu_1583_p1(4 - 1 downto 0);
        else 
            mean_amplitudes_V_address1 <= "XXXX";
        end if; 
    end process;


    mean_amplitudes_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            mean_amplitudes_V_ce0 <= ap_const_logic_1;
        else 
            mean_amplitudes_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_amplitudes_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_state23, ap_CS_fsm_state26, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            mean_amplitudes_V_ce1 <= ap_const_logic_1;
        else 
            mean_amplitudes_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mean_amplitudes_V_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, add_ln703_fu_1337_p2, select_ln1148_1_fu_1676_p3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            mean_amplitudes_V_d0 <= select_ln1148_1_fu_1676_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            mean_amplitudes_V_d0 <= add_ln703_fu_1337_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_amplitudes_V_d0 <= ap_const_lv60_0;
        else 
            mean_amplitudes_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean_amplitudes_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_state12, icmp_ln326_reg_5184_pp1_iter2_reg, ap_enable_reg_pp1_iter3, icmp_ln286_fu_1204_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln286_fu_1204_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln326_reg_5184_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            mean_amplitudes_V_we0 <= ap_const_logic_1;
        else 
            mean_amplitudes_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_amplitudes_V_we1_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            mean_amplitudes_V_we1 <= ap_const_logic_1;
        else 
            mean_amplitudes_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    mean_phases_V_address0_assign_proc : process(ap_CS_fsm_state2, zext_ln298_reg_5084, ap_CS_fsm_state17, mean_phases_V_addr_3_reg_5174, mean_phases_V_addr_2_reg_5194_pp1_iter2_reg, ap_enable_reg_pp1_iter3, ap_CS_fsm_state18, ap_block_pp1_stage0, i_cast_fu_1210_p1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            mean_phases_V_address0 <= mean_phases_V_addr_2_reg_5194_pp1_iter2_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            mean_phases_V_address0 <= mean_phases_V_addr_3_reg_5174;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            mean_phases_V_address0 <= zext_ln298_reg_5084(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_phases_V_address0 <= i_cast_fu_1210_p1(4 - 1 downto 0);
        else 
            mean_phases_V_address0 <= "XXXX";
        end if; 
    end process;


    mean_phases_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_state43, ap_enable_reg_pp1_iter0, zext_ln338_fu_1749_p1, ap_CS_fsm_state23, ap_CS_fsm_state26, zext_ln355_fu_2468_p1, mean_phases_V_addr_4_reg_5385, ap_block_pp1_stage0, trunc_ln329_cast_fu_1583_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            mean_phases_V_address1 <= mean_phases_V_addr_4_reg_5385;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            mean_phases_V_address1 <= zext_ln355_fu_2468_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            mean_phases_V_address1 <= zext_ln338_fu_1749_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            mean_phases_V_address1 <= trunc_ln329_cast_fu_1583_p1(4 - 1 downto 0);
        else 
            mean_phases_V_address1 <= "XXXX";
        end if; 
    end process;


    mean_phases_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_state17, ap_enable_reg_pp1_iter3, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            mean_phases_V_ce0 <= ap_const_logic_1;
        else 
            mean_phases_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_phases_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state43, ap_enable_reg_pp1_iter0, ap_CS_fsm_state23, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state43) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            mean_phases_V_ce1 <= ap_const_logic_1;
        else 
            mean_phases_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mean_phases_V_d0_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp1_iter3, ap_CS_fsm_state18, ap_block_pp1_stage0, add_ln703_2_fu_1564_p2, select_ln1148_3_fu_1741_p3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            mean_phases_V_d0 <= select_ln1148_3_fu_1741_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            mean_phases_V_d0 <= add_ln703_2_fu_1564_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_phases_V_d0 <= ap_const_lv60_0;
        else 
            mean_phases_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean_phases_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state2, icmp_ln326_reg_5184_pp1_iter2_reg, ap_enable_reg_pp1_iter3, icmp_ln286_fu_1204_p2, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((icmp_ln286_fu_1204_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln326_reg_5184_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            mean_phases_V_we0 <= ap_const_logic_1;
        else 
            mean_phases_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_phases_V_we1_assign_proc : process(ap_CS_fsm_state43, and_ln375_1_fu_3156_p2)
    begin
        if (((ap_const_lv1_1 = and_ln375_1_fu_3156_p2) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            mean_phases_V_we1 <= ap_const_logic_1;
        else 
            mean_phases_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1148_1_fu_1629_p1 <= ap_const_lv199_lc_3(101 - 1 downto 0);
    mul_ln1148_2_fu_1377_p1 <= ap_const_lv199_lc_1(101 - 1 downto 0);
    mul_ln1148_fu_1601_p1 <= ap_const_lv199_lc_3(101 - 1 downto 0);
    or_ln375_1_fu_3146_p2 <= (icmp_ln375_3_reg_5517 or icmp_ln375_2_reg_5512);
    or_ln375_fu_3142_p2 <= (icmp_ln375_reg_5497 or icmp_ln375_1_reg_5502);
    or_ln385_1_fu_4363_p2 <= (icmp_ln385_3_fu_4357_p2 or icmp_ln385_2_fu_4351_p2);
    or_ln385_fu_4411_p2 <= (icmp_ln385_reg_5645 or icmp_ln385_1_reg_5650);
    or_ln390_fu_4432_p2 <= (icmp_ln390_reg_5666 or icmp_ln390_1_reg_5671);
    or_ln949_10_fu_2595_p2 <= (shl_ln949_2_fu_2589_p2 or lshr_ln947_2_fu_2579_p2);
    or_ln949_11_fu_2885_p2 <= (shl_ln949_3_fu_2879_p2 or lshr_ln947_3_fu_2869_p2);
    or_ln949_12_fu_3240_p2 <= (shl_ln949_4_fu_3234_p2 or lshr_ln947_4_fu_3224_p2);
    or_ln949_13_fu_3399_p2 <= (shl_ln949_5_fu_3393_p2 or lshr_ln947_5_fu_3383_p2);
    or_ln949_14_fu_3626_p2 <= (shl_ln949_6_fu_3620_p2 or lshr_ln947_6_fu_3610_p2);
    or_ln949_15_fu_4588_p2 <= (shl_ln949_7_fu_4582_p2 or lshr_ln947_7_fu_4572_p2);
    or_ln949_16_fu_3844_p2 <= (shl_ln949_8_fu_3838_p2 or lshr_ln947_8_fu_3828_p2);
    or_ln949_9_fu_1857_p2 <= (shl_ln949_fu_1851_p2 or lshr_ln947_fu_1841_p2);
    or_ln949_fu_2037_p2 <= (shl_ln949_1_fu_2031_p2 or lshr_ln947_1_fu_2021_p2);
    p_Result_10_fu_2314_p3 <= m_12_fu_2294_p2(25 downto 25);
    p_Result_16_fu_2731_p3 <= m_21_fu_2711_p2(25 downto 25);
    p_Result_23_fu_3021_p3 <= m_33_fu_3001_p2(25 downto 25);
    p_Result_30_fu_3980_p3 <= m_36_fu_3960_p2(25 downto 25);
    
    p_Result_33_fu_3312_p4_proc : process(tmp_V_20_reg_5353)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable p_Result_33_fu_3312_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_20_reg_5353;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for p_Result_33_fu_3312_p4_i in 0 to 60-1 loop
                v0_cpy(p_Result_33_fu_3312_p4_i) := tmp_V_20_reg_5353(60-1-p_Result_33_fu_3312_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_33_fu_3312_p4 <= resvalue(60-1 downto 0);
    end process;

    
    p_Result_42_fu_3539_p4_proc : process(tmp_V_21_reg_5362)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable p_Result_42_fu_3539_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_21_reg_5362;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for p_Result_42_fu_3539_p4_i in 0 to 60-1 loop
                v0_cpy(p_Result_42_fu_3539_p4_i) := tmp_V_21_reg_5362(60-1-p_Result_42_fu_3539_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_42_fu_3539_p4 <= resvalue(60-1 downto 0);
    end process;

    
    p_Result_49_fu_4500_p4_proc : process(tmp_V_22_fu_4494_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable p_Result_49_fu_4500_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_22_fu_4494_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for p_Result_49_fu_4500_p4_i in 0 to 60-1 loop
                v0_cpy(p_Result_49_fu_4500_p4_i) := tmp_V_22_fu_4494_p3(60-1-p_Result_49_fu_4500_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_49_fu_4500_p4 <= resvalue(60-1 downto 0);
    end process;

    p_Result_4_fu_2189_p3 <= m_1_fu_2169_p2(25 downto 25);
    p_Result_52_fu_4722_p3 <= m_46_fu_4702_p2(25 downto 25);
    p_Result_58_fu_4215_p3 <= m_49_fu_4195_p2(25 downto 25);
    p_Result_60_fu_1889_p3 <= p_Val2_16_fu_1761_p3(to_integer(unsigned(lsb_index_fu_1805_p2)) downto to_integer(unsigned(lsb_index_fu_1805_p2))) when (to_integer(unsigned(lsb_index_fu_1805_p2))>= 0 and to_integer(unsigned(lsb_index_fu_1805_p2))<=59) else "-";
    p_Result_62_fu_1959_p3 <= (ap_const_lv4_F & p_Result_7_fu_1949_p4);
    p_Result_63_fu_2069_p3 <= tmp_V_16_fu_1941_p3(to_integer(unsigned(lsb_index_1_fu_1985_p2)) downto to_integer(unsigned(lsb_index_1_fu_1985_p2))) when (to_integer(unsigned(lsb_index_1_fu_1985_p2))>= 0 and to_integer(unsigned(lsb_index_1_fu_1985_p2))<=59) else "-";
    p_Result_64_fu_2348_p5 <= (zext_ln951_2_fu_2310_p1(63 downto 32) & tmp_3_fu_2341_p3 & zext_ln951_2_fu_2310_p1(22 downto 0));
    p_Result_66_fu_2517_p3 <= (ap_const_lv4_F & grp_fu_1136_p4);
    p_Result_67_fu_2627_p3 <= grp_fu_1129_p3(to_integer(unsigned(lsb_index_2_fu_2543_p2)) downto to_integer(unsigned(lsb_index_2_fu_2543_p2))) when (to_integer(unsigned(lsb_index_2_fu_2543_p2))>= 0 and to_integer(unsigned(lsb_index_2_fu_2543_p2))<=59) else "-";
    p_Result_68_fu_2765_p5 <= (zext_ln951_4_fu_2727_p1(63 downto 32) & tmp_7_fu_2758_p3 & zext_ln951_4_fu_2727_p1(22 downto 0));
    p_Result_69_fu_2789_p1 <= data_V_fu_2785_p1(31 - 1 downto 0);
    p_Result_71_fu_2807_p3 <= (ap_const_lv4_F & grp_fu_1168_p4);
    p_Result_72_fu_2917_p3 <= grp_fu_1160_p3(to_integer(unsigned(lsb_index_3_fu_2833_p2)) downto to_integer(unsigned(lsb_index_3_fu_2833_p2))) when (to_integer(unsigned(lsb_index_3_fu_2833_p2))>= 0 and to_integer(unsigned(lsb_index_3_fu_2833_p2))<=59) else "-";
    p_Result_73_fu_3055_p5 <= (zext_ln951_6_fu_3017_p1(63 downto 32) & tmp_11_fu_3048_p3 & zext_ln951_6_fu_3017_p1(22 downto 0));
    p_Result_74_fu_3103_p1 <= data_V_1_fu_3099_p1(31 - 1 downto 0);
    p_Result_76_fu_3162_p3 <= (ap_const_lv4_F & grp_fu_1168_p4);
    p_Result_77_fu_3272_p3 <= grp_fu_1160_p3(to_integer(unsigned(lsb_index_4_fu_3188_p2)) downto to_integer(unsigned(lsb_index_4_fu_3188_p2))) when (to_integer(unsigned(lsb_index_4_fu_3188_p2))>= 0 and to_integer(unsigned(lsb_index_4_fu_3188_p2))<=59) else "-";
    p_Result_78_fu_4014_p5 <= (zext_ln951_8_fu_3976_p1(63 downto 32) & tmp_18_fu_4007_p3 & zext_ln951_8_fu_3976_p1(22 downto 0));
    p_Result_79_fu_2382_p3 <= ref_phase_m_pi_fu_2115_p2(59 downto 59);
    
    p_Result_7_fu_1949_p4_proc : process(tmp_V_16_fu_1941_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable p_Result_7_fu_1949_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := tmp_V_16_fu_1941_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for p_Result_7_fu_1949_p4_i in 0 to 60-1 loop
                v0_cpy(p_Result_7_fu_1949_p4_i) := tmp_V_16_fu_1941_p3(60-1-p_Result_7_fu_1949_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_7_fu_1949_p4 <= resvalue(60-1 downto 0);
    end process;

    p_Result_80_fu_3321_p3 <= (ap_const_lv4_F & p_Result_33_fu_3312_p4);
    p_Result_81_fu_3430_p3 <= tmp_V_20_reg_5353(to_integer(unsigned(lsb_index_5_fu_3347_p2)) downto to_integer(unsigned(lsb_index_5_fu_3347_p2))) when (to_integer(unsigned(lsb_index_5_fu_3347_p2))>= 0 and to_integer(unsigned(lsb_index_5_fu_3347_p2))<=59) else "-";
    p_Result_82_fu_4069_p5 <= (zext_ln951_10_fu_4041_p1(63 downto 32) & tmp_21_fu_4062_p3 & zext_ln951_10_fu_4041_p1(22 downto 0));
    p_Result_83_fu_4281_p1 <= data_V_2_fu_4277_p1(31 - 1 downto 0);
    p_Result_84_fu_4297_p1 <= data_V_3_fu_4294_p1(31 - 1 downto 0);
    p_Result_85_fu_2402_p3 <= ref_phase_p_pi_fu_2109_p2(59 downto 59);
    p_Result_86_fu_3548_p3 <= (ap_const_lv4_F & p_Result_42_fu_3539_p4);
    p_Result_87_fu_3657_p3 <= tmp_V_21_reg_5362(to_integer(unsigned(lsb_index_6_fu_3574_p2)) downto to_integer(unsigned(lsb_index_6_fu_3574_p2))) when (to_integer(unsigned(lsb_index_6_fu_3574_p2))>= 0 and to_integer(unsigned(lsb_index_6_fu_3574_p2))<=59) else "-";
    p_Result_88_fu_4124_p5 <= (zext_ln951_12_fu_4096_p1(63 downto 32) & tmp_25_fu_4117_p3 & zext_ln951_12_fu_4096_p1(22 downto 0));
    p_Result_89_fu_4372_p1 <= data_V_4_fu_4369_p1(31 - 1 downto 0);
    p_Result_91_fu_4510_p3 <= (ap_const_lv4_F & p_Result_49_fu_4500_p4);
    p_Result_92_fu_4620_p3 <= tmp_V_22_fu_4494_p3(to_integer(unsigned(lsb_index_7_fu_4536_p2)) downto to_integer(unsigned(lsb_index_7_fu_4536_p2))) when (to_integer(unsigned(lsb_index_7_fu_4536_p2))>= 0 and to_integer(unsigned(lsb_index_7_fu_4536_p2))<=59) else "-";
    p_Result_93_fu_4756_p5 <= (zext_ln951_14_fu_4718_p1(63 downto 32) & tmp_28_fu_4749_p3 & zext_ln951_14_fu_4718_p1(22 downto 0));
    p_Result_95_fu_3766_p3 <= (ap_const_lv4_F & grp_fu_1136_p4);
    p_Result_96_fu_3876_p3 <= grp_fu_1129_p3(to_integer(unsigned(lsb_index_8_fu_3792_p2)) downto to_integer(unsigned(lsb_index_8_fu_3792_p2))) when (to_integer(unsigned(lsb_index_8_fu_3792_p2))>= 0 and to_integer(unsigned(lsb_index_8_fu_3792_p2))<=59) else "-";
    p_Result_97_fu_4249_p5 <= (zext_ln951_16_fu_4211_p1(63 downto 32) & tmp_29_fu_4242_p3 & zext_ln951_16_fu_4211_p1(22 downto 0));
    
    p_Result_s_fu_1769_p4_proc : process(p_Val2_16_fu_1761_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(60+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable p_Result_s_fu_1769_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(60 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3B(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_16_fu_1761_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(60-1-unsigned(ap_const_lv32_3B(6-1 downto 0)));
            for p_Result_s_fu_1769_p4_i in 0 to 60-1 loop
                v0_cpy(p_Result_s_fu_1769_p4_i) := p_Val2_16_fu_1761_p3(60-1-p_Result_s_fu_1769_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(60-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_1769_p4 <= resvalue(60-1 downto 0);
    end process;

    p_Val2_16_fu_1761_p3 <= 
        tmp_V_fu_1755_p2 when (grp_fu_1109_p3(0) = '1') else 
        mean_phases_V_q1;
    p_Val2_s_fu_2175_p4 <= m_1_fu_2169_p2(60 downto 1);
    phase_V_8_fu_1428_p3 <= 
        sext_ln1148_5_fu_1398_p1 when (tmp_47_reg_5113(0) = '1') else 
        sub_ln1148_5_fu_1422_p2;
    phase_V_9_fu_1468_p2 <= std_logic_vector(unsigned(zext_ln415_fu_1465_p1) + unsigned(sext_ln304_fu_1462_p1));

    psd_amplitudes_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, zext_ln298_fu_1312_p1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            psd_amplitudes_V_address0 <= zext_ln298_fu_1312_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_amplitudes_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_amplitudes_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_amplitudes_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_amplitudes_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_amplitudes_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_amplitudes_V_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            psd_amplitudes_V_address0 <= "XXXX";
        end if; 
    end process;


    psd_amplitudes_V_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_amplitudes_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_amplitudes_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_amplitudes_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_amplitudes_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_amplitudes_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_amplitudes_V_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            psd_amplitudes_V_address1 <= "XXXX";
        end if; 
    end process;


    psd_amplitudes_V_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_amplitudes_V_ce0 <= ap_const_logic_1;
        else 
            psd_amplitudes_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    psd_amplitudes_V_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_amplitudes_V_ce1 <= ap_const_logic_1;
        else 
            psd_amplitudes_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    psd_amplitudes_V_d0_assign_proc : process(sine_data_sliding_window_buffer_amplitudes_V_11_q0, sine_data_sliding_window_buffer_amplitudes_V_9_q0, sine_data_sliding_window_buffer_amplitudes_V_7_q0, sine_data_sliding_window_buffer_amplitudes_V_5_q0, sine_data_sliding_window_buffer_amplitudes_V_3_q0, sine_data_sliding_window_buffer_amplitudes_V_1_q0, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_amplitudes_V_d0 <= sine_data_sliding_window_buffer_amplitudes_V_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_amplitudes_V_d0 <= sine_data_sliding_window_buffer_amplitudes_V_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_amplitudes_V_d0 <= sine_data_sliding_window_buffer_amplitudes_V_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_amplitudes_V_d0 <= sine_data_sliding_window_buffer_amplitudes_V_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_amplitudes_V_d0 <= sine_data_sliding_window_buffer_amplitudes_V_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_amplitudes_V_d0 <= sine_data_sliding_window_buffer_amplitudes_V_1_q0;
        else 
            psd_amplitudes_V_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    psd_amplitudes_V_d1_assign_proc : process(sine_data_sliding_window_buffer_amplitudes_V_10_q0, sine_data_sliding_window_buffer_amplitudes_V_8_q0, sine_data_sliding_window_buffer_amplitudes_V_6_q0, sine_data_sliding_window_buffer_amplitudes_V_4_q0, sine_data_sliding_window_buffer_amplitudes_V_2_q0, sine_data_sliding_window_buffer_amplitudes_V_0_q0, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_amplitudes_V_d1 <= sine_data_sliding_window_buffer_amplitudes_V_10_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_amplitudes_V_d1 <= sine_data_sliding_window_buffer_amplitudes_V_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_amplitudes_V_d1 <= sine_data_sliding_window_buffer_amplitudes_V_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_amplitudes_V_d1 <= sine_data_sliding_window_buffer_amplitudes_V_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_amplitudes_V_d1 <= sine_data_sliding_window_buffer_amplitudes_V_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_amplitudes_V_d1 <= sine_data_sliding_window_buffer_amplitudes_V_0_q0;
        else 
            psd_amplitudes_V_d1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    psd_amplitudes_V_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_amplitudes_V_we0 <= ap_const_logic_1;
        else 
            psd_amplitudes_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    psd_amplitudes_V_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_amplitudes_V_we1 <= ap_const_logic_1;
        else 
            psd_amplitudes_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    psd_max_val_times_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, zext_ln298_fu_1312_p1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            psd_max_val_times_address0 <= zext_ln298_fu_1312_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_max_val_times_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_max_val_times_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_max_val_times_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_max_val_times_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_max_val_times_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_max_val_times_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            psd_max_val_times_address0 <= "XXXX";
        end if; 
    end process;


    psd_max_val_times_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_max_val_times_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_max_val_times_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_max_val_times_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_max_val_times_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_max_val_times_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_max_val_times_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            psd_max_val_times_address1 <= "XXXX";
        end if; 
    end process;


    psd_max_val_times_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_max_val_times_ce0 <= ap_const_logic_1;
        else 
            psd_max_val_times_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    psd_max_val_times_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_max_val_times_ce1 <= ap_const_logic_1;
        else 
            psd_max_val_times_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    psd_max_val_times_d0_assign_proc : process(sine_data_sliding_window_buffer_max_val_times_11_q0, sine_data_sliding_window_buffer_max_val_times_9_q0, sine_data_sliding_window_buffer_max_val_times_7_q0, sine_data_sliding_window_buffer_max_val_times_5_q0, sine_data_sliding_window_buffer_max_val_times_3_q0, sine_data_sliding_window_buffer_max_val_times_1_q0, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_max_val_times_d0 <= sine_data_sliding_window_buffer_max_val_times_11_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_max_val_times_d0 <= sine_data_sliding_window_buffer_max_val_times_9_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_max_val_times_d0 <= sine_data_sliding_window_buffer_max_val_times_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_max_val_times_d0 <= sine_data_sliding_window_buffer_max_val_times_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_max_val_times_d0 <= sine_data_sliding_window_buffer_max_val_times_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_max_val_times_d0 <= sine_data_sliding_window_buffer_max_val_times_1_q0;
        else 
            psd_max_val_times_d0 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    psd_max_val_times_d1_assign_proc : process(sine_data_sliding_window_buffer_max_val_times_10_q0, sine_data_sliding_window_buffer_max_val_times_8_q0, sine_data_sliding_window_buffer_max_val_times_6_q0, sine_data_sliding_window_buffer_max_val_times_4_q0, sine_data_sliding_window_buffer_max_val_times_2_q0, sine_data_sliding_window_buffer_max_val_times_0_q0, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            psd_max_val_times_d1 <= sine_data_sliding_window_buffer_max_val_times_10_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            psd_max_val_times_d1 <= sine_data_sliding_window_buffer_max_val_times_8_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            psd_max_val_times_d1 <= sine_data_sliding_window_buffer_max_val_times_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            psd_max_val_times_d1 <= sine_data_sliding_window_buffer_max_val_times_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            psd_max_val_times_d1 <= sine_data_sliding_window_buffer_max_val_times_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            psd_max_val_times_d1 <= sine_data_sliding_window_buffer_max_val_times_0_q0;
        else 
            psd_max_val_times_d1 <= "XXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    psd_max_val_times_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_max_val_times_we0 <= ap_const_logic_1;
        else 
            psd_max_val_times_we0 <= ap_const_logic_0;
        end if; 
    end process;


    psd_max_val_times_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            psd_max_val_times_we1 <= ap_const_logic_1;
        else 
            psd_max_val_times_we1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_fu_1438_p0 <= phase_V_8_reg_5125(46 - 1 downto 0);
    r_V_fu_1438_p1 <= ap_const_lv125_1921FB544430000000000(82 - 1 downto 0);
    ref_phase_m_pi_fu_2115_p2 <= std_logic_vector(unsigned(reg_1182) + unsigned(ap_const_lv60_FFFFE6DE04ABBBD));
    ref_phase_p_pi_fu_2109_p2 <= std_logic_vector(unsigned(reg_1182) + unsigned(ap_const_lv60_1921FB54443));
    ret_V_1_fu_1548_p2 <= std_logic_vector(signed(lhs_V_2_fu_1544_p1) + signed(ap_const_lv99_7FFFE6DE04ABBBD0000000000));
    ret_V_2_fu_1498_p2 <= std_logic_vector(signed(sext_ln1192_fu_1479_p1) + signed(ap_const_lv49_1FE6DE04ABBBD));
    ret_V_3_fu_1521_p2 <= std_logic_vector(signed(lhs_V_3_fu_1517_p1) + signed(ap_const_lv99_1921FB544430000000000));
    ret_V_fu_1483_p2 <= std_logic_vector(signed(sext_ln1192_fu_1479_p1) + signed(ap_const_lv49_1921FB54443));
    retval_0_i_i361_fu_4144_p3 <= 
        ap_const_lv32_0 when (tobool_i_i295_reg_5343(0) = '1') else 
        bitcast_ln744_6_fu_4140_p1;
    retval_0_i_i767_fu_4089_p3 <= 
        ap_const_lv32_0 when (tobool_i_i701_reg_5333(0) = '1') else 
        bitcast_ln744_5_fu_4085_p1;
    select_ln1148_1_fu_1676_p3 <= 
        sub_ln1148_1_fu_1670_p2 when (tmp_33_reg_5200_pp1_iter2_reg(0) = '1') else 
        sext_ln1148_1_fu_1666_p1;
    select_ln1148_2_fu_1725_p3 <= 
        tmp_43_fu_1715_p4 when (tmp_42_reg_5206_pp1_iter2_reg(0) = '1') else 
        tmp_44_reg_5227;
    select_ln1148_3_fu_1741_p3 <= 
        sub_ln1148_3_fu_1735_p2 when (tmp_42_reg_5206_pp1_iter2_reg(0) = '1') else 
        sext_ln1148_3_fu_1731_p1;
    select_ln1148_4_fu_1415_p3 <= 
        sext_ln1148_5_fu_1398_p1 when (tmp_47_reg_5113(0) = '1') else 
        sext_ln1148_6_fu_1411_p1;
    select_ln1148_fu_1660_p3 <= 
        tmp_37_fu_1650_p4 when (tmp_33_reg_5200_pp1_iter2_reg(0) = '1') else 
        tmp_41_reg_5217;
    select_ln365_fu_2488_p3 <= 
        ap_const_lv99_7FFFE6DE04ABBBD0000000000 when (icmp_ln1494_2_fu_2474_p2(0) = '1') else 
        ap_const_lv99_1921FB544430000000000;
    select_ln935_1_fu_2368_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_1_reg_5290(0) = '1') else 
        bitcast_ln744_1_fu_2364_p1;
    select_ln935_2_fu_4034_p3 <= 
        bitcast_ln744_4_fu_4030_p1 when (icmp_ln935_3_reg_5461(0) = '1') else 
        ap_const_lv32_0;
    select_ln935_3_fu_4776_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_4_reg_5689(0) = '1') else 
        bitcast_ln744_7_fu_4772_p1;
    select_ln935_4_fu_4269_p3 <= 
        bitcast_ln744_8_fu_4265_p1 when (icmp_ln935_2_reg_5414(0) = '1') else 
        ap_const_lv32_0;
    select_ln935_fu_2243_p3 <= 
        bitcast_ln744_fu_2239_p1 when (icmp_ln935_fu_2121_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln943_1_fu_2322_p3 <= 
        ap_const_lv8_7F when (p_Result_10_fu_2314_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_2_fu_2739_p3 <= 
        ap_const_lv8_7F when (p_Result_16_fu_2731_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_3_fu_3029_p3 <= 
        ap_const_lv8_7F when (p_Result_23_fu_3021_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_4_fu_3988_p3 <= 
        ap_const_lv8_7F when (p_Result_30_fu_3980_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_5_fu_4044_p3 <= 
        ap_const_lv8_7F when (p_Result_36_reg_5556(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_6_fu_4099_p3 <= 
        ap_const_lv8_7F when (p_Result_45_reg_5571(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_7_fu_4730_p3 <= 
        ap_const_lv8_7F when (p_Result_52_fu_4722_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_8_fu_4223_p3 <= 
        ap_const_lv8_7F when (p_Result_58_fu_4215_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_2197_p3 <= 
        ap_const_lv8_7F when (p_Result_4_fu_2189_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_1_fu_2089_p3 <= 
        icmp_ln949_1_fu_2049_p2 when (icmp_ln946_1_fu_2001_p2(0) = '1') else 
        p_Result_63_fu_2069_p3;
    select_ln946_2_fu_2647_p3 <= 
        icmp_ln949_2_fu_2607_p2 when (icmp_ln946_2_fu_2559_p2(0) = '1') else 
        p_Result_67_fu_2627_p3;
    select_ln946_3_fu_2937_p3 <= 
        icmp_ln949_3_fu_2897_p2 when (icmp_ln946_3_fu_2849_p2(0) = '1') else 
        p_Result_72_fu_2917_p3;
    select_ln946_4_fu_3292_p3 <= 
        icmp_ln949_4_fu_3252_p2 when (icmp_ln946_4_fu_3204_p2(0) = '1') else 
        p_Result_77_fu_3272_p3;
    select_ln946_5_fu_3464_p3 <= 
        icmp_ln949_5_fu_3410_p2 when (icmp_ln946_5_fu_3363_p2(0) = '1') else 
        p_Result_81_fu_3430_p3;
    select_ln946_6_fu_3691_p3 <= 
        icmp_ln949_6_fu_3637_p2 when (icmp_ln946_6_fu_3590_p2(0) = '1') else 
        p_Result_87_fu_3657_p3;
    select_ln946_7_fu_4640_p3 <= 
        icmp_ln949_7_fu_4600_p2 when (icmp_ln946_7_fu_4552_p2(0) = '1') else 
        p_Result_92_fu_4620_p3;
    select_ln946_8_fu_3896_p3 <= 
        icmp_ln949_8_fu_3856_p2 when (icmp_ln946_8_fu_3808_p2(0) = '1') else 
        p_Result_96_fu_3876_p3;
    select_ln946_fu_1909_p3 <= 
        icmp_ln949_fu_1869_p2 when (icmp_ln946_fu_1821_p2(0) = '1') else 
        p_Result_60_fu_1889_p3;
    select_ln954_10_fu_3487_p3 <= 
        select_ln946_5_fu_3464_p3 when (icmp_ln954_5_fu_3437_p2(0) = '1') else 
        and_ln949_11_fu_3443_p2;
    select_ln954_12_fu_3714_p3 <= 
        select_ln946_6_fu_3691_p3 when (icmp_ln954_6_fu_3664_p2(0) = '1') else 
        and_ln949_13_fu_3670_p2;
    select_ln954_14_fu_4648_p3 <= 
        select_ln946_7_fu_4640_p3 when (icmp_ln954_7_fu_4628_p2(0) = '1') else 
        and_ln949_15_fu_4634_p2;
    select_ln954_16_fu_3904_p3 <= 
        select_ln946_8_fu_3896_p3 when (icmp_ln954_8_fu_3884_p2(0) = '1') else 
        and_ln949_17_fu_3890_p2;
    select_ln954_2_fu_2097_p3 <= 
        select_ln946_1_fu_2089_p3 when (icmp_ln954_1_fu_2077_p2(0) = '1') else 
        and_ln949_3_fu_2083_p2;
    select_ln954_4_fu_2655_p3 <= 
        select_ln946_2_fu_2647_p3 when (icmp_ln954_2_fu_2635_p2(0) = '1') else 
        and_ln949_5_fu_2641_p2;
    select_ln954_6_fu_2945_p3 <= 
        select_ln946_3_fu_2937_p3 when (icmp_ln954_3_fu_2925_p2(0) = '1') else 
        and_ln949_7_fu_2931_p2;
    select_ln954_8_fu_3300_p3 <= 
        select_ln946_4_fu_3292_p3 when (icmp_ln954_4_fu_3280_p2(0) = '1') else 
        and_ln949_9_fu_3286_p2;
    select_ln954_fu_1917_p3 <= 
        select_ln946_fu_1909_p3 when (icmp_ln954_fu_1897_p2(0) = '1') else 
        and_ln949_1_fu_1903_p2;
        sext_ln1148_1_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_fu_1660_p3),60));

        sext_ln1148_3_fu_1731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_2_fu_1725_p3),60));

        sext_ln1148_5_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_48_fu_1388_p4),99));

        sext_ln1148_6_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_1402_p4),99));

        sext_ln1192_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(first_phases_V_q0),49));

        sext_ln1494_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(phase_V_9_reg_5140),49));

        sext_ln26_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sine_data_sliding_window_front_ptr_s),6));

        sext_ln304_1_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(phase_V_9_fu_1468_p2),60));

        sext_ln304_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(phase_V_reg_5130),48));

    shl_ln949_1_fu_2031_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_1_fu_2027_p1(31-1 downto 0)))));
    shl_ln949_2_fu_2589_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_2_fu_2585_p1(31-1 downto 0)))));
    shl_ln949_3_fu_2879_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_3_fu_2875_p1(31-1 downto 0)))));
    shl_ln949_4_fu_3234_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_4_fu_3230_p1(31-1 downto 0)))));
    shl_ln949_5_fu_3393_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_5_fu_3389_p1(31-1 downto 0)))));
    shl_ln949_6_fu_3620_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_6_fu_3616_p1(31-1 downto 0)))));
    shl_ln949_7_fu_4582_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_7_fu_4578_p1(31-1 downto 0)))));
    shl_ln949_8_fu_3838_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_8_fu_3834_p1(31-1 downto 0)))));
    shl_ln949_fu_1851_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv60_1),to_integer(unsigned('0' & zext_ln949_fu_1847_p1(31-1 downto 0)))));
    shl_ln955_1_fu_2261_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_16_reg_5300),to_integer(unsigned('0' & zext_ln955_1_fu_2257_p1(31-1 downto 0)))));
    shl_ln955_2_fu_2676_p2 <= std_logic_vector(shift_left(unsigned(reg_1186),to_integer(unsigned('0' & zext_ln955_2_fu_2672_p1(31-1 downto 0)))));
    shl_ln955_3_fu_2966_p2 <= std_logic_vector(shift_left(unsigned(reg_1190),to_integer(unsigned('0' & zext_ln955_3_fu_2962_p1(31-1 downto 0)))));
    shl_ln955_4_fu_3925_p2 <= std_logic_vector(shift_left(unsigned(reg_1190),to_integer(unsigned('0' & zext_ln955_4_fu_3921_p1(31-1 downto 0)))));
    shl_ln955_5_fu_3459_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_20_reg_5353),to_integer(unsigned('0' & zext_ln955_5_fu_3455_p1(31-1 downto 0)))));
    shl_ln955_6_fu_3686_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_21_reg_5362),to_integer(unsigned('0' & zext_ln955_6_fu_3682_p1(31-1 downto 0)))));
    shl_ln955_7_fu_4669_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_22_reg_5694),to_integer(unsigned('0' & zext_ln955_7_fu_4665_p1(31-1 downto 0)))));
    shl_ln955_8_fu_4160_p2 <= std_logic_vector(shift_left(unsigned(reg_1186),to_integer(unsigned('0' & zext_ln955_8_fu_4156_p1(31-1 downto 0)))));
    shl_ln955_fu_2136_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_16_reg_5263),to_integer(unsigned('0' & zext_ln955_fu_2132_p1(31-1 downto 0)))));
    shl_ln_fu_1325_p3 <= (psd_amplitudes_V_q0 & ap_const_lv39_0);
    sine_data_sliding_window_buffer_amplitudes_V_0_address0 <= zext_ln34_fu_1292_p1(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_0_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sine_data_sliding_window_buffer_amplitudes_V_0_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_10_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_10_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sine_data_sliding_window_buffer_amplitudes_V_10_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_11_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_11_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sine_data_sliding_window_buffer_amplitudes_V_11_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_1_address0 <= zext_ln34_fu_1292_p1(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_1_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sine_data_sliding_window_buffer_amplitudes_V_1_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_2_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_2_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sine_data_sliding_window_buffer_amplitudes_V_2_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_3_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_3_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sine_data_sliding_window_buffer_amplitudes_V_3_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_4_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_4_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sine_data_sliding_window_buffer_amplitudes_V_4_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_5_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_5_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sine_data_sliding_window_buffer_amplitudes_V_5_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_6_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_6_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sine_data_sliding_window_buffer_amplitudes_V_6_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_7_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_7_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sine_data_sliding_window_buffer_amplitudes_V_7_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_8_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_8_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sine_data_sliding_window_buffer_amplitudes_V_8_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_amplitudes_V_9_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_amplitudes_V_9_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sine_data_sliding_window_buffer_amplitudes_V_9_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_amplitudes_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_0_address0 <= zext_ln34_fu_1292_p1(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_0_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sine_data_sliding_window_buffer_max_val_times_0_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_10_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_10_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sine_data_sliding_window_buffer_max_val_times_10_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_11_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_11_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sine_data_sliding_window_buffer_max_val_times_11_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_1_address0 <= zext_ln34_fu_1292_p1(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_1_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sine_data_sliding_window_buffer_max_val_times_1_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_2_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_2_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sine_data_sliding_window_buffer_max_val_times_2_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_3_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_3_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sine_data_sliding_window_buffer_max_val_times_3_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_4_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_4_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sine_data_sliding_window_buffer_max_val_times_4_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_5_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_5_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sine_data_sliding_window_buffer_max_val_times_5_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_6_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_6_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sine_data_sliding_window_buffer_max_val_times_6_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_7_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_7_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sine_data_sliding_window_buffer_max_val_times_7_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_8_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_8_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sine_data_sliding_window_buffer_max_val_times_8_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sine_data_sliding_window_buffer_max_val_times_9_address0 <= zext_ln34_reg_4931(4 - 1 downto 0);

    sine_data_sliding_window_buffer_max_val_times_9_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            sine_data_sliding_window_buffer_max_val_times_9_ce0 <= ap_const_logic_1;
        else 
            sine_data_sliding_window_buffer_max_val_times_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    start_val_offset_fu_1352_p2 <= std_logic_vector(unsigned(max_val_offset_1_fu_1344_p3) + unsigned(ap_const_lv60_C2F700000000000));
    sub_i_i299_fu_2410_p2 <= std_logic_vector(signed(ap_const_lv60_FFFFE6DE04ABBBD) - signed(reg_1182));
    sub_i_i705_fu_2390_p2 <= std_logic_vector(unsigned(ap_const_lv60_1921FB54443) - unsigned(reg_1182));
    sub_ln1148_1_fu_1670_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(sext_ln1148_1_fu_1666_p1));
    sub_ln1148_2_fu_1710_p2 <= std_logic_vector(unsigned(ap_const_lv199_lc_2) - unsigned(mul_ln1148_1_reg_5222));
    sub_ln1148_3_fu_1735_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(sext_ln1148_3_fu_1731_p1));
    sub_ln1148_4_fu_1383_p2 <= std_logic_vector(unsigned(ap_const_lv199_lc_2) - unsigned(mul_ln1148_2_reg_5119));
    sub_ln1148_5_fu_1422_p2 <= std_logic_vector(unsigned(ap_const_lv99_0) - unsigned(select_ln1148_4_fu_1415_p3));
    sub_ln1148_fu_1645_p2 <= std_logic_vector(unsigned(ap_const_lv199_lc_2) - unsigned(mul_ln1148_reg_5212));
    sub_ln944_1_fu_1979_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_1_fu_1975_p1));
    sub_ln944_2_fu_2537_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_2_fu_2533_p1));
    sub_ln944_3_fu_2827_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_3_fu_2823_p1));
    sub_ln944_4_fu_3182_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_4_fu_3178_p1));
    sub_ln944_5_fu_3341_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_5_fu_3337_p1));
    sub_ln944_6_fu_3568_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_6_fu_3564_p1));
    sub_ln944_7_fu_4530_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_7_fu_4526_p1));
    sub_ln944_8_fu_3786_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_8_fu_3782_p1));
    sub_ln944_fu_1799_p2 <= std_logic_vector(unsigned(ap_const_lv32_3C) - unsigned(l_fu_1795_p1));
    sub_ln947_1_fu_2011_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_1_fu_2007_p1));
    sub_ln947_2_fu_2569_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_2_fu_2565_p1));
    sub_ln947_3_fu_2859_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_3_fu_2855_p1));
    sub_ln947_4_fu_3214_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_4_fu_3210_p1));
    sub_ln947_5_fu_3373_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_5_fu_3369_p1));
    sub_ln947_6_fu_3600_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_6_fu_3596_p1));
    sub_ln947_7_fu_4562_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_7_fu_4558_p1));
    sub_ln947_8_fu_3818_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_8_fu_3814_p1));
    sub_ln947_fu_1831_p2 <= std_logic_vector(unsigned(ap_const_lv6_15) - unsigned(trunc_ln947_fu_1827_p1));
    sub_ln955_1_fu_2252_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_1_reg_5306));
    sub_ln955_2_fu_2667_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_2_reg_5424));
    sub_ln955_3_fu_2957_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_3_reg_5471));
    sub_ln955_4_fu_3916_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_4_reg_5530));
    sub_ln955_5_fu_3449_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_5_fu_3341_p2));
    sub_ln955_6_fu_3676_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_6_fu_3568_p2));
    sub_ln955_7_fu_4660_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_7_reg_5700));
    sub_ln955_8_fu_4151_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_8_reg_5586));
    sub_ln955_fu_2127_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_5269));
    sub_ln964_1_fu_2330_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_1_reg_5322));
    sub_ln964_2_fu_2747_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_2_reg_5440));
    sub_ln964_3_fu_3037_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_3_reg_5487));
    sub_ln964_4_fu_3996_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_4_reg_5546));
    sub_ln964_5_fu_4051_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_5_reg_5561));
    sub_ln964_6_fu_4106_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_6_reg_5576));
    sub_ln964_7_fu_4738_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_7_reg_5716));
    sub_ln964_8_fu_4231_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_8_reg_5602));
    sub_ln964_fu_2205_p2 <= std_logic_vector(unsigned(ap_const_lv8_15) - unsigned(trunc_ln943_reg_5285));
    t_3_fu_1617_p3 <= (reg_1182 & ap_const_lv39_0);
    t_4_fu_1366_p3 <= (start_val_offset_reg_5108 & ap_const_lv39_0);
    t_9_fu_1779_p3 <= (ap_const_lv4_F & p_Result_s_fu_1769_p4);
    t_fu_1589_p3 <= (reg_1178 & ap_const_lv39_0);

    this_amplitudes_s_address0_assign_proc : process(zext_ln338_reg_5242, ap_CS_fsm_state25, zext_ln355_reg_5379, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            this_amplitudes_s_address0 <= zext_ln355_reg_5379(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            this_amplitudes_s_address0 <= zext_ln338_reg_5242(4 - 1 downto 0);
        else 
            this_amplitudes_s_address0 <= "XXXX";
        end if; 
    end process;


    this_amplitudes_s_ce0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state53)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            this_amplitudes_s_ce0 <= ap_const_logic_1;
        else 
            this_amplitudes_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    this_amplitudes_s_d0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state53, select_ln935_1_fu_2368_p3, select_ln935_3_fu_4776_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            this_amplitudes_s_d0 <= select_ln935_3_fu_4776_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            this_amplitudes_s_d0 <= select_ln935_1_fu_2368_p3;
        else 
            this_amplitudes_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    this_amplitudes_s_we0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state53)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            this_amplitudes_s_we0 <= ap_const_logic_1;
        else 
            this_amplitudes_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    this_phases_s_address0_assign_proc : process(zext_ln338_reg_5242, ap_CS_fsm_state25, zext_ln355_reg_5379, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            this_phases_s_address0 <= zext_ln355_reg_5379(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            this_phases_s_address0 <= zext_ln338_reg_5242(4 - 1 downto 0);
        else 
            this_phases_s_address0 <= "XXXX";
        end if; 
    end process;


    this_phases_s_ce0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            this_phases_s_ce0 <= ap_const_logic_1;
        else 
            this_phases_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    this_phases_s_d0_assign_proc : process(select_ln935_fu_2243_p3, ap_CS_fsm_state25, ap_CS_fsm_state44, select_ln935_4_fu_4269_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            this_phases_s_d0 <= select_ln935_4_fu_4269_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            this_phases_s_d0 <= select_ln935_fu_2243_p3;
        else 
            this_phases_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    this_phases_s_we0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            this_phases_s_we0 <= ap_const_logic_1;
        else 
            this_phases_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_1875_p3 <= lsb_index_fu_1805_p2(31 downto 31);
    tmp_11_fu_3048_p3 <= (p_Result_70_reg_5466 & add_ln964_3_fu_3042_p2);
    tmp_12_fu_3075_p4 <= data_V_reg_5450(30 downto 23);
    tmp_13_fu_1991_p4 <= lsb_index_1_fu_1985_p2(31 downto 1);
    
    tmp_14_fu_3556_p3_proc : process(p_Result_86_fu_3548_p3)
    begin
        tmp_14_fu_3556_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_86_fu_3548_p3(i) = '1' then
                tmp_14_fu_3556_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_15_fu_2055_p3 <= lsb_index_1_fu_1985_p2(31 downto 31);
    tmp_16_fu_3116_p4 <= data_V_1_fu_3099_p1(30 downto 23);
    tmp_18_fu_4007_p3 <= (p_Result_75_reg_5525 & add_ln964_4_fu_4001_p2);
    
    tmp_19_fu_4518_p3_proc : process(p_Result_91_fu_4510_p3)
    begin
        tmp_19_fu_4518_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_91_fu_4510_p3(i) = '1' then
                tmp_19_fu_4518_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_1_fu_2525_p3_proc : process(p_Result_66_fu_2517_p3)
    begin
        tmp_1_fu_2525_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_66_fu_2517_p3(i) = '1' then
                tmp_1_fu_2525_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_20_fu_3774_p3_proc : process(p_Result_95_fu_3766_p3)
    begin
        tmp_20_fu_3774_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_95_fu_3766_p3(i) = '1' then
                tmp_20_fu_3774_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_21_fu_4062_p3 <= (p_Result_79_reg_5338 & add_ln964_5_fu_4056_p2);
    tmp_22_fu_4311_p4 <= data_V_2_fu_4277_p1(30 downto 23);
    tmp_23_fu_4325_p4 <= data_V_3_fu_4294_p1(30 downto 23);
    tmp_25_fu_4117_p3 <= (p_Result_85_reg_5348 & add_ln964_6_fu_4111_p2);
    tmp_26_fu_4385_p4 <= data_V_4_fu_4369_p1(30 downto 23);
    tmp_28_fu_4749_p3 <= (p_Result_90_reg_5683 & add_ln964_7_fu_4743_p2);
    tmp_29_fu_4242_p3 <= (p_Result_94_reg_5581 & add_ln964_8_fu_4236_p2);
    tmp_2_fu_2216_p3 <= (p_Repl2_5_reg_5258 & add_ln964_fu_2210_p2);
    tmp_37_fu_1650_p4 <= sub_ln1148_fu_1645_p2(198 downto 142);
    tmp_3_fu_2341_p3 <= (p_Result_61_reg_5295 & add_ln964_1_fu_2335_p2);
    tmp_43_fu_1715_p4 <= sub_ln1148_2_fu_1710_p2(198 downto 142);
    tmp_48_fu_1388_p4 <= sub_ln1148_4_fu_1383_p2(198 downto 155);
    tmp_49_fu_1402_p4 <= mul_ln1148_2_reg_5119(198 downto 155);
    
    tmp_4_fu_3329_p3_proc : process(p_Result_80_fu_3321_p3)
    begin
        tmp_4_fu_3329_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_80_fu_3321_p3(i) = '1' then
                tmp_4_fu_3329_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_51_fu_1537_p3 <= (phase_V_9_reg_5140 & ap_const_lv39_0);
    tmp_52_fu_1510_p3 <= (phase_V_9_reg_5140 & ap_const_lv39_0);
    tmp_54_fu_2549_p4 <= lsb_index_2_fu_2543_p2(31 downto 1);
    tmp_55_fu_2613_p3 <= lsb_index_2_fu_2543_p2(31 downto 31);
    tmp_58_fu_2839_p4 <= lsb_index_3_fu_2833_p2(31 downto 1);
    tmp_59_fu_2903_p3 <= lsb_index_3_fu_2833_p2(31 downto 31);
    tmp_5_fu_1263_p3 <= buffer_idx_fu_1248_p2(5 downto 5);
    tmp_62_fu_3194_p4 <= lsb_index_4_fu_3188_p2(31 downto 1);
    tmp_63_fu_3258_p3 <= lsb_index_4_fu_3188_p2(31 downto 31);
    tmp_65_fu_3353_p4 <= lsb_index_5_fu_3347_p2(31 downto 1);
    tmp_66_fu_3416_p3 <= lsb_index_5_fu_3347_p2(31 downto 31);
    tmp_68_fu_3580_p4 <= lsb_index_6_fu_3574_p2(31 downto 1);
    tmp_69_fu_3643_p3 <= lsb_index_6_fu_3574_p2(31 downto 31);
    
    tmp_6_fu_2815_p3_proc : process(p_Result_71_fu_2807_p3)
    begin
        tmp_6_fu_2815_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_71_fu_2807_p3(i) = '1' then
                tmp_6_fu_2815_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_72_fu_4542_p4 <= lsb_index_7_fu_4536_p2(31 downto 1);
    tmp_73_fu_4606_p3 <= lsb_index_7_fu_4536_p2(31 downto 31);
    tmp_76_fu_3798_p4 <= lsb_index_8_fu_3792_p2(31 downto 1);
    tmp_77_fu_3862_p3 <= lsb_index_8_fu_3792_p2(31 downto 31);
    tmp_7_fu_2758_p3 <= (p_Result_65_reg_5419 & add_ln964_2_fu_2752_p2);
    tmp_8_fu_1811_p4 <= lsb_index_fu_1805_p2(31 downto 1);
    
    tmp_9_fu_3170_p3_proc : process(p_Result_76_fu_3162_p3)
    begin
        tmp_9_fu_3170_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_76_fu_3162_p3(i) = '1' then
                tmp_9_fu_3170_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_V_12_fu_4489_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(amplitude_V_4_reg_5676));
    tmp_V_16_fu_1941_p3 <= 
        tmp_V_2_fu_1935_p2 when (grp_fu_1101_p3(0) = '1') else 
        mean_amplitudes_V_q1;
    tmp_V_20_fu_2416_p3 <= 
        sub_i_i705_fu_2390_p2 when (p_Result_79_fu_2382_p3(0) = '1') else 
        ref_phase_m_pi_fu_2115_p2;
    tmp_V_21_fu_2424_p3 <= 
        sub_i_i299_fu_2410_p2 when (p_Result_85_fu_2402_p3(0) = '1') else 
        ref_phase_p_pi_fu_2109_p2;
    tmp_V_22_fu_4494_p3 <= 
        tmp_V_12_fu_4489_p2 when (p_Result_90_reg_5683(0) = '1') else 
        amplitude_V_4_reg_5676;
    tmp_V_2_fu_1935_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(mean_amplitudes_V_q1));
    tmp_V_fu_1755_p2 <= std_logic_vector(unsigned(ap_const_lv60_0) - unsigned(mean_phases_V_q1));
    
    tmp_fu_1787_p3_proc : process(t_9_fu_1779_p3)
    begin
        tmp_fu_1787_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if t_9_fu_1779_p3(i) = '1' then
                tmp_fu_1787_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_s_fu_1967_p3_proc : process(p_Result_62_fu_1959_p3)
    begin
        tmp_s_fu_1967_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_62_fu_1959_p3(i) = '1' then
                tmp_s_fu_1967_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tobool_i_i295_fu_2396_p2 <= "1" when (ref_phase_p_pi_fu_2109_p2 = ap_const_lv60_0) else "0";
    tobool_i_i701_fu_2376_p2 <= "1" when (ref_phase_m_pi_fu_2115_p2 = ap_const_lv60_0) else "0";
    trunc_ln22_2_fu_1253_p1 <= buffer_idx_fu_1248_p2(4 - 1 downto 0);
    trunc_ln22_fu_1228_p1 <= sine_data_sliding_window_back_ptr_s(4 - 1 downto 0);
    trunc_ln329_cast_fu_1583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_5_phi_fu_1002_p4),64));
    trunc_ln375_1_fu_3126_p1 <= data_V_1_fu_3099_p1(23 - 1 downto 0);
    trunc_ln375_fu_3084_p1 <= data_V_reg_5450(23 - 1 downto 0);
    trunc_ln385_1_fu_4335_p1 <= data_V_3_fu_4294_p1(23 - 1 downto 0);
    trunc_ln385_fu_4321_p1 <= data_V_2_fu_4277_p1(23 - 1 downto 0);
    trunc_ln390_fu_4395_p1 <= data_V_4_fu_4369_p1(23 - 1 downto 0);
    trunc_ln943_1_fu_2105_p1 <= tmp_s_fu_1967_p3(8 - 1 downto 0);
    trunc_ln943_2_fu_2663_p1 <= tmp_1_fu_2525_p3(8 - 1 downto 0);
    trunc_ln943_3_fu_2953_p1 <= tmp_6_fu_2815_p3(8 - 1 downto 0);
    trunc_ln943_4_fu_3308_p1 <= tmp_9_fu_3170_p3(8 - 1 downto 0);
    trunc_ln943_5_fu_3535_p1 <= tmp_4_fu_3329_p3(8 - 1 downto 0);
    trunc_ln943_6_fu_3762_p1 <= tmp_14_fu_3556_p3(8 - 1 downto 0);
    trunc_ln943_7_fu_4656_p1 <= tmp_19_fu_4518_p3(8 - 1 downto 0);
    trunc_ln943_8_fu_3912_p1 <= tmp_20_fu_3774_p3(8 - 1 downto 0);
    trunc_ln943_fu_1925_p1 <= tmp_fu_1787_p3(8 - 1 downto 0);
    trunc_ln947_1_fu_2007_p1 <= sub_ln944_1_fu_1979_p2(6 - 1 downto 0);
    trunc_ln947_2_fu_2565_p1 <= sub_ln944_2_fu_2537_p2(6 - 1 downto 0);
    trunc_ln947_3_fu_2855_p1 <= sub_ln944_3_fu_2827_p2(6 - 1 downto 0);
    trunc_ln947_4_fu_3210_p1 <= sub_ln944_4_fu_3182_p2(6 - 1 downto 0);
    trunc_ln947_5_fu_3369_p1 <= sub_ln944_5_fu_3341_p2(6 - 1 downto 0);
    trunc_ln947_6_fu_3596_p1 <= sub_ln944_6_fu_3568_p2(6 - 1 downto 0);
    trunc_ln947_7_fu_4558_p1 <= sub_ln944_7_fu_4530_p2(6 - 1 downto 0);
    trunc_ln947_8_fu_3814_p1 <= sub_ln944_8_fu_3786_p2(6 - 1 downto 0);
    trunc_ln947_fu_1827_p1 <= sub_ln944_fu_1799_p2(6 - 1 downto 0);
    xor_ln349_fu_2454_p2 <= (icmp_ln349_fu_2448_p2 xor ap_const_lv1_1);
    xor_ln385_fu_4455_p2 <= (ap_const_lv1_1 xor and_ln385_1_fu_4420_p2);
    xor_ln949_1_fu_2063_p2 <= (tmp_15_fu_2055_p3 xor ap_const_lv1_1);
    xor_ln949_2_fu_2621_p2 <= (tmp_55_fu_2613_p3 xor ap_const_lv1_1);
    xor_ln949_3_fu_2911_p2 <= (tmp_59_fu_2903_p3 xor ap_const_lv1_1);
    xor_ln949_4_fu_3266_p2 <= (tmp_63_fu_3258_p3 xor ap_const_lv1_1);
    xor_ln949_5_fu_3424_p2 <= (tmp_66_fu_3416_p3 xor ap_const_lv1_1);
    xor_ln949_6_fu_3651_p2 <= (tmp_69_fu_3643_p3 xor ap_const_lv1_1);
    xor_ln949_7_fu_4614_p2 <= (tmp_73_fu_4606_p3 xor ap_const_lv1_1);
    xor_ln949_8_fu_3870_p2 <= (tmp_77_fu_3862_p3 xor ap_const_lv1_1);
    xor_ln949_fu_1883_p2 <= (tmp_10_fu_1875_p3 xor ap_const_lv1_1);
    zext_ln293_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_reg_963),6));
    zext_ln298_fu_1312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_974),64));
    zext_ln329_fu_1698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_998_pp1_iter2_reg),32));
    zext_ln338_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(max_amplitude_index_reg_1010),64));
    zext_ln34_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_idx_6_fu_1285_p3),64));
    zext_ln355_fu_2468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_fu_2460_p3),64));
    zext_ln368_1_fu_3107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_74_fu_3103_p1),32));
    zext_ln368_2_fu_4285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_83_fu_4281_p1),32));
    zext_ln368_3_fu_4301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_84_fu_4297_p1),32));
    zext_ln368_4_fu_4376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_89_fu_4372_p1),32));
    zext_ln368_fu_2793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_69_fu_2789_p1),32));
    zext_ln415_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_reg_5135),48));
    zext_ln703_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1325_p3),60));
    zext_ln947_1_fu_2017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_1_fu_2011_p2),60));
    zext_ln947_2_fu_2575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_2_fu_2569_p2),60));
    zext_ln947_3_fu_2865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_3_fu_2859_p2),60));
    zext_ln947_4_fu_3220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_4_fu_3214_p2),60));
    zext_ln947_5_fu_3379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_5_fu_3373_p2),60));
    zext_ln947_6_fu_3606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_6_fu_3600_p2),60));
    zext_ln947_7_fu_4568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_7_fu_4562_p2),60));
    zext_ln947_8_fu_3824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_8_fu_3818_p2),60));
    zext_ln947_fu_1837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_1831_p2),60));
    zext_ln949_1_fu_2027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_1_fu_1985_p2),60));
    zext_ln949_2_fu_2585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_2_fu_2543_p2),60));
    zext_ln949_3_fu_2875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_3_fu_2833_p2),60));
    zext_ln949_4_fu_3230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_4_fu_3188_p2),60));
    zext_ln949_5_fu_3389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_5_fu_3347_p2),60));
    zext_ln949_6_fu_3616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_6_fu_3574_p2),60));
    zext_ln949_7_fu_4578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_7_fu_4536_p2),60));
    zext_ln949_8_fu_3834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_8_fu_3792_p2),60));
    zext_ln949_fu_1847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_fu_1805_p2),60));
    zext_ln951_10_fu_4041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_9_reg_5551),64));
    zext_ln951_11_fu_3730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_42_fu_3722_p3),61));
    zext_ln951_12_fu_4096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_10_reg_5566),64));
    zext_ln951_13_fu_4695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_45_fu_4688_p3),61));
    zext_ln951_14_fu_4718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_11_fu_4708_p4),64));
    zext_ln951_15_fu_4188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_48_fu_4181_p3),61));
    zext_ln951_16_fu_4211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_13_fu_4201_p4),64));
    zext_ln951_1_fu_2287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_8_fu_2280_p3),61));
    zext_ln951_2_fu_2310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_s_fu_2300_p4),64));
    zext_ln951_3_fu_2704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_20_fu_2697_p3),61));
    zext_ln951_4_fu_2727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_2_fu_2717_p4),64));
    zext_ln951_5_fu_2994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_29_fu_2987_p3),61));
    zext_ln951_6_fu_3017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_6_fu_3007_p4),64));
    zext_ln951_7_fu_3953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_35_fu_3946_p3),61));
    zext_ln951_8_fu_3976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_7_fu_3966_p4),64));
    zext_ln951_9_fu_3503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_38_fu_3495_p3),61));
    zext_ln951_fu_2162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_fu_2155_p3),61));
    zext_ln954_1_fu_2271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_1_fu_2266_p2),60));
    zext_ln954_2_fu_2687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_2_fu_2682_p2),60));
    zext_ln954_3_fu_2977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_3_fu_2972_p2),60));
    zext_ln954_4_fu_3936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_4_fu_3931_p2),60));
    zext_ln954_5_fu_3478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_5_fu_3472_p2),60));
    zext_ln954_6_fu_3705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_6_fu_3699_p2),60));
    zext_ln954_7_fu_4679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_7_fu_4674_p2),60));
    zext_ln954_8_fu_4171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_8_fu_4166_p2),60));
    zext_ln954_fu_2146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln954_fu_2141_p2),60));
    zext_ln955_1_fu_2257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_1_fu_2252_p2),60));
    zext_ln955_2_fu_2672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_2_fu_2667_p2),60));
    zext_ln955_3_fu_2962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_3_fu_2957_p2),60));
    zext_ln955_4_fu_3921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_4_fu_3916_p2),60));
    zext_ln955_5_fu_3455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_5_fu_3449_p2),60));
    zext_ln955_6_fu_3682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_6_fu_3676_p2),60));
    zext_ln955_7_fu_4665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_7_fu_4660_p2),60));
    zext_ln955_8_fu_4156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_8_fu_4151_p2),60));
    zext_ln955_fu_2132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln955_fu_2127_p2),60));
    zext_ln961_1_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_2_reg_5317),61));
    zext_ln961_2_fu_2708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_4_reg_5435),61));
    zext_ln961_3_fu_2998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_6_reg_5482),61));
    zext_ln961_4_fu_3957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_8_reg_5541),61));
    zext_ln961_5_fu_3507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_10_fu_3487_p3),61));
    zext_ln961_6_fu_3734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_12_fu_3714_p3),61));
    zext_ln961_7_fu_4699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_14_reg_5711),61));
    zext_ln961_8_fu_4192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_16_reg_5597),61));
    zext_ln961_fu_2166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln954_reg_5280),61));
    zext_ln968_fu_2185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_fu_2175_p4),64));
end behav;
