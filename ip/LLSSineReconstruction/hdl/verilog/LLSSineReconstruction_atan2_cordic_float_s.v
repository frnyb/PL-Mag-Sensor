// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LLSSineReconstruction_atan2_cordic_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y_in,
        x_in,
        ap_return
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] y_in;
input  [31:0] x_in;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] p_Result_281_fu_220_p3;
reg   [0:0] p_Result_281_reg_546;
wire   [0:0] icmp_ln828_fu_254_p2;
reg   [0:0] icmp_ln828_reg_557;
wire   [0:0] or_ln757_fu_260_p2;
reg   [0:0] or_ln757_reg_562;
wire   [0:0] icmp_ln828_1_fu_278_p2;
reg   [0:0] icmp_ln828_1_reg_566;
wire   [0:0] or_ln757_1_fu_284_p2;
reg   [0:0] or_ln757_1_reg_571;
wire   [0:0] icmp_ln824_fu_290_p2;
reg   [0:0] icmp_ln824_reg_575;
wire   [0:0] icmp_ln824_1_fu_302_p2;
reg   [0:0] icmp_ln824_1_reg_582;
wire   [0:0] and_ln762_fu_296_p2;
wire   [0:0] icmp_ln766_fu_336_p2;
reg   [0:0] icmp_ln766_reg_586;
wire   [1:0] tmp_41_fu_342_p3;
reg   [1:0] tmp_41_reg_590;
wire   [0:0] and_ln18_fu_350_p2;
reg   [0:0] and_ln18_reg_594;
wire   [0:0] and_ln18_1_fu_356_p2;
reg   [0:0] and_ln18_1_reg_598;
wire   [31:0] a_fu_370_p1;
reg   [31:0] a_reg_602;
wire   [31:0] b_fu_383_p1;
reg   [31:0] b_reg_609;
wire   [0:0] icmp_ln746_fu_410_p2;
reg   [0:0] icmp_ln746_reg_619;
wire   [0:0] icmp_ln824_2_fu_404_p2;
wire   [0:0] icmp_ln746_1_fu_416_p2;
reg   [0:0] icmp_ln746_1_reg_624;
wire   [31:0] grp_atan2_generic_float_s_fu_171_ap_return;
reg   [31:0] tmp_i_160_reg_632;
wire    ap_CS_fsm_state4;
reg   [31:0] tmp_i_reg_637;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_179_p2;
wire    ap_CS_fsm_state12;
reg   [31:0] d_reg_647;
wire    ap_CS_fsm_state17;
wire   [31:0] bitcast_ln822_1_fu_452_p1;
wire   [31:0] select_ln809_fu_470_p3;
wire    ap_CS_fsm_state19;
wire   [31:0] bitcast_ln351_6_fu_484_p1;
wire    ap_CS_fsm_state20;
wire   [31:0] bitcast_ln351_5_fu_495_p1;
wire    ap_CS_fsm_state21;
wire   [31:0] bitcast_ln351_4_fu_506_p1;
wire    ap_CS_fsm_state22;
wire   [31:0] bitcast_ln351_3_fu_517_p1;
wire    ap_CS_fsm_state23;
wire   [31:0] bitcast_ln351_2_fu_528_p1;
wire    ap_CS_fsm_state24;
wire   [31:0] bitcast_ln351_fu_539_p1;
wire    ap_CS_fsm_state25;
wire    grp_atan2_generic_float_s_fu_171_ap_start;
wire    grp_atan2_generic_float_s_fu_171_ap_done;
wire    grp_atan2_generic_float_s_fu_171_ap_idle;
wire    grp_atan2_generic_float_s_fu_171_ap_ready;
reg   [31:0] grp_atan2_generic_float_s_fu_171_y_in;
reg   [31:0] grp_atan2_generic_float_s_fu_171_x_in;
reg   [31:0] c_reg_90;
wire    ap_CS_fsm_state5;
reg   [31:0] ap_phi_mux_UnifiedRetVal_phi_fu_116_p42;
reg   [31:0] UnifiedRetVal_reg_104;
wire   [31:0] bitcast_ln826_1_fu_465_p1;
wire    ap_CS_fsm_state18;
reg    grp_atan2_generic_float_s_fu_171_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
reg   [31:0] grp_fu_179_p0;
reg   [31:0] grp_fu_179_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_186_p0;
wire   [31:0] grp_fu_186_p1;
wire   [31:0] data_V_fu_190_p1;
wire   [31:0] data_V_6_fu_216_p1;
wire   [7:0] tmp_163_fu_228_p4;
wire   [0:0] icmp_ln757_fu_242_p2;
wire   [22:0] tmp_164_fu_238_p1;
wire   [0:0] xor_ln18_fu_248_p2;
wire   [7:0] tmp_fu_202_p4;
wire   [0:0] icmp_ln757_1_fu_266_p2;
wire   [22:0] tmp_162_fu_212_p1;
wire   [0:0] xor_ln18_1_fu_272_p2;
wire   [0:0] p_Result_s_fu_194_p3;
wire   [7:0] trunc_ln766_fu_308_p1;
wire   [14:0] tmp_39_fu_318_p4;
wire   [7:0] or_ln766_fu_312_p2;
wire   [22:0] tmp_40_fu_328_p3;
wire   [30:0] p_Result_288_fu_362_p1;
wire   [31:0] zext_ln368_fu_366_p1;
wire   [30:0] p_Result_289_fu_375_p1;
wire   [31:0] zext_ln368_1_fu_379_p1;
wire   [31:0] p_Result_290_fu_388_p3;
wire   [31:0] p_Result_291_fu_396_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln746_fu_422_p2;
wire   [0:0] or_ln746_1_fu_426_p2;
wire   [0:0] and_ln746_fu_430_p2;
wire   [0:0] grp_fu_186_p2;
wire   [31:0] bitcast_ln822_fu_442_p1;
wire   [31:0] xor_ln822_fu_446_p2;
wire   [31:0] bitcast_ln826_fu_456_p1;
wire   [31:0] xor_ln826_fu_459_p2;
wire   [31:0] p_Result_287_fu_477_p3;
wire   [31:0] p_Result_286_fu_488_p3;
wire   [31:0] p_Result_285_fu_499_p3;
wire   [31:0] p_Result_284_fu_510_p3;
wire   [31:0] p_Result_283_fu_521_p3;
wire   [31:0] p_Result_282_fu_532_p3;
wire   [0:0] and_ln746_1_fu_436_p2;
reg   [31:0] ap_return_preg;
reg   [24:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 grp_atan2_generic_float_s_fu_171_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

LLSSineReconstruction_atan2_generic_float_s grp_atan2_generic_float_s_fu_171(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_atan2_generic_float_s_fu_171_ap_start),
    .ap_done(grp_atan2_generic_float_s_fu_171_ap_done),
    .ap_idle(grp_atan2_generic_float_s_fu_171_ap_idle),
    .ap_ready(grp_atan2_generic_float_s_fu_171_ap_ready),
    .y_in(grp_atan2_generic_float_s_fu_171_y_in),
    .x_in(grp_atan2_generic_float_s_fu_171_x_in),
    .ap_return(grp_atan2_generic_float_s_fu_171_ap_return)
);

LLSSineReconstruction_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U361(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_179_p0),
    .din1(grp_fu_179_p1),
    .ce(1'b1),
    .dout(grp_fu_179_p2)
);

LLSSineReconstruction_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U362(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_186_p0),
    .din1(grp_fu_186_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_186_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_116_p42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_atan2_generic_float_s_fu_171_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_atan2_generic_float_s_fu_171_ap_start_reg <= 1'b1;
        end else if ((grp_atan2_generic_float_s_fu_171_ap_ready == 1'b1)) begin
            grp_atan2_generic_float_s_fu_171_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((or_ln757_1_fu_284_p2 == 1'd0) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((or_ln757_fu_260_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        UnifiedRetVal_reg_104 <= 32'd2147483647;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        UnifiedRetVal_reg_104 <= bitcast_ln351_6_fu_484_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        UnifiedRetVal_reg_104 <= bitcast_ln351_5_fu_495_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        UnifiedRetVal_reg_104 <= bitcast_ln351_4_fu_506_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        UnifiedRetVal_reg_104 <= bitcast_ln351_3_fu_517_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        UnifiedRetVal_reg_104 <= bitcast_ln351_2_fu_528_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        UnifiedRetVal_reg_104 <= bitcast_ln351_fu_539_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        UnifiedRetVal_reg_104 <= select_ln809_fu_470_p3;
    end else if (((tmp_41_fu_342_p3 == 2'd0) & (icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd0;
    end else if (((tmp_41_fu_342_p3 == 2'd0) & (icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_1_fu_356_p2) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd1061752795;
    end else if (((tmp_41_reg_590 == 2'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        UnifiedRetVal_reg_104 <= c_reg_90;
    end else if (((tmp_41_reg_590 == 2'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        UnifiedRetVal_reg_104 <= bitcast_ln822_1_fu_452_p1;
    end else if (((tmp_41_reg_590 == 2'd2) & (1'b1 == ap_CS_fsm_state17))) begin
        UnifiedRetVal_reg_104 <= grp_fu_179_p2;
    end else if (((tmp_41_reg_590 == 2'd3) & (icmp_ln766_reg_586 == 1'd0) & (1'd0 == and_ln18_1_reg_598) & (1'd0 == and_ln18_reg_594) & (icmp_ln824_1_reg_582 == 1'd0) & (icmp_ln824_reg_575 == 1'd0) & (or_ln757_1_reg_571 == 1'd1) & (or_ln757_reg_562 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        UnifiedRetVal_reg_104 <= bitcast_ln826_1_fu_465_p1;
    end else if (((tmp_41_fu_342_p3 == 2'd1) & (icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd2147483648;
    end else if (((tmp_41_fu_342_p3 == 2'd2) & (icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd1078530011;
    end else if (((tmp_41_fu_342_p3 == 2'd3) & (icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd3226013659;
    end else if (((tmp_41_fu_342_p3 == 2'd1) & (icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_1_fu_356_p2) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd3209236443;
    end else if (((tmp_41_fu_342_p3 == 2'd2) & (icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_1_fu_356_p2) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd1075235812;
    end else if (((tmp_41_fu_342_p3 == 2'd3) & (icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_1_fu_356_p2) & (1'd1 == and_ln18_fu_350_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_104 <= 32'd3222719460;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (1'd0 == and_ln18_fu_350_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_2_fu_404_p2 == 1'd1))) begin
        c_reg_90 <= 32'd1061752795;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c_reg_90 <= tmp_i_160_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c_reg_90 <= grp_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (1'd0 == and_ln18_fu_350_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        a_reg_602[30 : 0] <= a_fu_370_p1[30 : 0];
        b_reg_609[30 : 0] <= b_fu_383_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln18_1_reg_598 <= and_ln18_1_fu_356_p2;
        and_ln18_reg_594 <= and_ln18_fu_350_p2;
        tmp_41_reg_590 <= tmp_41_fu_342_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        d_reg_647 <= grp_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (1'd0 == and_ln18_fu_350_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_2_fu_404_p2 == 1'd0))) begin
        icmp_ln746_1_reg_624 <= icmp_ln746_1_fu_416_p2;
        icmp_ln746_reg_619 <= icmp_ln746_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (((icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1)) | ((1'd0 == and_ln762_fu_296_p2) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (icmp_ln828_fu_254_p2 == 1'd0))))) begin
        icmp_ln766_reg_586 <= icmp_ln766_fu_336_p2;
        icmp_ln824_1_reg_582 <= icmp_ln824_1_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln824_reg_575 <= icmp_ln824_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln757_fu_260_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln828_1_reg_566 <= icmp_ln828_1_fu_278_p2;
        or_ln757_1_reg_571 <= or_ln757_1_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln828_reg_557 <= icmp_ln828_fu_254_p2;
        or_ln757_reg_562 <= or_ln757_fu_260_p2;
        p_Result_281_reg_546 <= data_V_6_fu_216_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_i_160_reg_632 <= grp_atan2_generic_float_s_fu_171_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_i_reg_637 <= grp_atan2_generic_float_s_fu_171_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_41_reg_590 == 2'd3) & (icmp_ln766_reg_586 == 1'd0) & (1'd0 == and_ln18_1_reg_598) & (1'd0 == and_ln18_reg_594) & (icmp_ln824_1_reg_582 == 1'd0) & (icmp_ln824_reg_575 == 1'd0) & (or_ln757_1_reg_571 == 1'd1) & (or_ln757_reg_562 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_116_p42 = bitcast_ln826_1_fu_465_p1;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_116_p42 = UnifiedRetVal_reg_104;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_116_p42;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_atan2_generic_float_s_fu_171_x_in = a_reg_602;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_atan2_generic_float_s_fu_171_x_in = b_reg_609;
    end else begin
        grp_atan2_generic_float_s_fu_171_x_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_atan2_generic_float_s_fu_171_y_in = b_reg_609;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_atan2_generic_float_s_fu_171_y_in = a_reg_602;
    end else begin
        grp_atan2_generic_float_s_fu_171_y_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_179_p0 = 32'd1078530011;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_179_p0 = 32'd1070141403;
    end else begin
        grp_fu_179_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_179_p1 = c_reg_90;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_179_p1 = tmp_i_reg_637;
    end else begin
        grp_fu_179_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln762_fu_296_p2) & (icmp_ln824_fu_290_p2 == 1'd1) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (icmp_ln828_fu_254_p2 == 1'd0) & (p_Result_s_fu_194_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln762_fu_296_p2) & (icmp_ln824_fu_290_p2 == 1'd1) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (icmp_ln828_fu_254_p2 == 1'd0) & (p_Result_s_fu_194_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (1'd0 == and_ln18_fu_350_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_2_fu_404_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_1_fu_356_p2) & (1'd0 == and_ln18_fu_350_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_2_fu_404_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln766_fu_336_p2 == 1'd0) & (1'd0 == and_ln18_fu_350_p2) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln18_1_fu_356_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd1) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((icmp_ln766_fu_336_p2 == 1'd1) & (icmp_ln824_fu_290_p2 == 1'd0) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1)) | ((icmp_ln766_fu_336_p2 == 1'd1) & (1'd0 == and_ln762_fu_296_p2) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (icmp_ln828_fu_254_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((1'd0 == and_ln762_fu_296_p2) & (icmp_ln824_fu_290_p2 == 1'd1) & (or_ln757_1_fu_284_p2 == 1'd1) & (or_ln757_fu_260_p2 == 1'd1) & (icmp_ln828_fu_254_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((icmp_ln824_fu_290_p2 == 1'd1) & (or_ln757_1_fu_284_p2 == 1'd1) & (1'd1 == and_ln762_fu_296_p2) & (or_ln757_fu_260_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((or_ln757_fu_260_p2 == 1'd0) | ((or_ln757_1_fu_284_p2 == 1'd0) | ((icmp_ln766_fu_336_p2 == 1'd0) & (icmp_ln824_1_fu_302_p2 == 1'd0) & (icmp_ln824_fu_290_p2 == 1'd0) & (1'd1 == and_ln18_fu_350_p2)))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'd1 == and_ln746_1_fu_436_p2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_atan2_generic_float_s_fu_171_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_atan2_generic_float_s_fu_171_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_370_p1 = zext_ln368_fu_366_p1;

assign and_ln18_1_fu_356_p2 = (icmp_ln828_fu_254_p2 & icmp_ln757_fu_242_p2);

assign and_ln18_fu_350_p2 = (icmp_ln828_1_fu_278_p2 & icmp_ln757_1_fu_266_p2);

assign and_ln746_1_fu_436_p2 = (grp_fu_186_p2 & and_ln746_fu_430_p2);

assign and_ln746_fu_430_p2 = (or_ln746_fu_422_p2 & or_ln746_1_fu_426_p2);

assign and_ln762_fu_296_p2 = (p_Result_s_fu_194_p3 & icmp_ln828_fu_254_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign b_fu_383_p1 = zext_ln368_1_fu_379_p1;

assign bitcast_ln351_2_fu_528_p1 = p_Result_283_fu_521_p3;

assign bitcast_ln351_3_fu_517_p1 = p_Result_284_fu_510_p3;

assign bitcast_ln351_4_fu_506_p1 = p_Result_285_fu_499_p3;

assign bitcast_ln351_5_fu_495_p1 = p_Result_286_fu_488_p3;

assign bitcast_ln351_6_fu_484_p1 = p_Result_287_fu_477_p3;

assign bitcast_ln351_fu_539_p1 = p_Result_282_fu_532_p3;

assign bitcast_ln822_1_fu_452_p1 = xor_ln822_fu_446_p2;

assign bitcast_ln822_fu_442_p1 = c_reg_90;

assign bitcast_ln826_1_fu_465_p1 = xor_ln826_fu_459_p2;

assign bitcast_ln826_fu_456_p1 = d_reg_647;

assign data_V_6_fu_216_p1 = y_in;

assign data_V_fu_190_p1 = x_in;

assign grp_atan2_generic_float_s_fu_171_ap_start = grp_atan2_generic_float_s_fu_171_ap_start_reg;

assign grp_fu_186_p0 = zext_ln368_fu_366_p1;

assign grp_fu_186_p1 = zext_ln368_1_fu_379_p1;

assign icmp_ln746_1_fu_416_p2 = ((tmp_fu_202_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln746_fu_410_p2 = ((tmp_163_fu_228_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln757_1_fu_266_p2 = ((tmp_fu_202_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln757_fu_242_p2 = ((tmp_163_fu_228_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln766_fu_336_p2 = ((tmp_40_fu_328_p3 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_1_fu_302_p2 = ((tmp_fu_202_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_2_fu_404_p2 = ((p_Result_290_fu_388_p3 == p_Result_291_fu_396_p3) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_290_p2 = ((tmp_163_fu_228_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln828_1_fu_278_p2 = ((tmp_162_fu_212_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln828_fu_254_p2 = ((tmp_164_fu_238_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_ln746_1_fu_426_p2 = (icmp_ln828_1_reg_566 | icmp_ln746_1_reg_624);

assign or_ln746_fu_422_p2 = (icmp_ln828_reg_557 | icmp_ln746_reg_619);

assign or_ln757_1_fu_284_p2 = (xor_ln18_1_fu_272_p2 | icmp_ln828_1_fu_278_p2);

assign or_ln757_fu_260_p2 = (xor_ln18_fu_248_p2 | icmp_ln828_fu_254_p2);

assign or_ln766_fu_312_p2 = (trunc_ln766_fu_308_p1 | tmp_fu_202_p4);

assign p_Result_281_fu_220_p3 = data_V_6_fu_216_p1[32'd31];

assign p_Result_282_fu_532_p3 = {{p_Result_281_reg_546}, {31'd1078530011}};

assign p_Result_283_fu_521_p3 = {{p_Result_281_reg_546}, {31'd0}};

assign p_Result_284_fu_510_p3 = {{p_Result_281_reg_546}, {31'd1070141403}};

assign p_Result_285_fu_499_p3 = {{p_Result_281_reg_546}, {31'd1078530011}};

assign p_Result_286_fu_488_p3 = {{p_Result_281_reg_546}, {31'd0}};

assign p_Result_287_fu_477_p3 = {{p_Result_281_reg_546}, {31'd1070141403}};

assign p_Result_288_fu_362_p1 = data_V_6_fu_216_p1[30:0];

assign p_Result_289_fu_375_p1 = data_V_fu_190_p1[30:0];

assign p_Result_290_fu_388_p3 = {{1'd0}, {p_Result_289_fu_375_p1}};

assign p_Result_291_fu_396_p3 = {{1'd0}, {p_Result_288_fu_362_p1}};

assign p_Result_s_fu_194_p3 = data_V_fu_190_p1[32'd31];

assign select_ln809_fu_470_p3 = ((p_Result_281_reg_546[0:0] == 1'b1) ? 32'd3217625051 : 32'd1070141403);

assign tmp_162_fu_212_p1 = data_V_fu_190_p1[22:0];

assign tmp_163_fu_228_p4 = {{data_V_6_fu_216_p1[30:23]}};

assign tmp_164_fu_238_p1 = data_V_6_fu_216_p1[22:0];

assign tmp_39_fu_318_p4 = {{data_V_fu_190_p1[22:8]}};

assign tmp_40_fu_328_p3 = {{tmp_39_fu_318_p4}, {or_ln766_fu_312_p2}};

assign tmp_41_fu_342_p3 = {{p_Result_s_fu_194_p3}, {p_Result_281_fu_220_p3}};

assign tmp_fu_202_p4 = {{data_V_fu_190_p1[30:23]}};

assign trunc_ln766_fu_308_p1 = data_V_fu_190_p1[7:0];

assign xor_ln18_1_fu_272_p2 = (icmp_ln757_1_fu_266_p2 ^ 1'd1);

assign xor_ln18_fu_248_p2 = (icmp_ln757_fu_242_p2 ^ 1'd1);

assign xor_ln822_fu_446_p2 = (bitcast_ln822_fu_442_p1 ^ 32'd2147483648);

assign xor_ln826_fu_459_p2 = (bitcast_ln826_fu_456_p1 ^ 32'd2147483648);

assign zext_ln368_1_fu_379_p1 = p_Result_289_fu_375_p1;

assign zext_ln368_fu_366_p1 = p_Result_288_fu_362_p1;

always @ (posedge ap_clk) begin
    a_reg_602[31] <= 1'b0;
    b_reg_609[31] <= 1'b0;
end

endmodule //LLSSineReconstruction_atan2_cordic_float_s
