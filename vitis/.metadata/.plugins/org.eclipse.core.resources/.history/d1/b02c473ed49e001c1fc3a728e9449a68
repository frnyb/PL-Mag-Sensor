/******************************************************************************
 * Includes:
 ******************************************************************************/

#include "platform.h"
#include "xil_printf.h"
#include "xbram.h"
#include "sleep.h"

/******************************************************************************
 * Definitions:
 ******************************************************************************/

#define BRAM(A) 		 		((volatile u32*)px_config->MemBaseAddress)[A]

/******************************************************************************
 * Typedefs:
 ******************************************************************************/


/******************************************************************************
 * Variables:
 ******************************************************************************/

XBram             	x_bram;
XBram_Config    	*px_config;

/******************************************************************************
 * Method declarations:
 ******************************************************************************/

uint8_t 				ucBRAMInit();

/******************************************************************************
 * Main:
 ******************************************************************************/

int main()
{
    init_platform();

    xil_printf("\n\r");

    ucBRAMInit();

    uint16_t readings[12];

    while(1)
    {
    	// Read from BRAM:
//    	for (int i = 0; i < 12; i++) {
//    		readings[i] = (uint16_t)BRAM(i);
//    	}
//
//    	for (int i = 0; i < 12; i++) {
//    		xil_printf("%u",readings[i]);
//
//    		if (i == 11) {
//    			xil_printf("\n\r");
//    		} else {
//    			xil_printf("\t");
//    		}
//    	}

    	xil_printf("hejhej");

    	sleep(1);
    }

    print("Hello World\n\r");
    print("Successfully ran Hello World application");
    cleanup_platform();
    return 0;
}

/******************************************************************************
 * Method implementations:
 ******************************************************************************/

uint8_t 	ucBRAMInit()
{
	// BRAM initialization
	xil_printf("Initializing BRAM...\n\r");

	px_config = XBram_LookupConfig(XPAR_BRAM_0_DEVICE_ID);
	if (px_config == (XBram_Config *) NULL) {
		return XST_FAILURE;
	}

	int	x_status 	= 	XBram_CfgInitialize(&x_bram, px_config,
			px_config->CtrlBaseAddress);

	if (x_status != XST_SUCCESS) {
		return 0;
	}

	xil_printf("Done.\r\n");

	return 1;
}
